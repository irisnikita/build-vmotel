{"version":3,"sources":["components/admin/Login.js","actions/LoginActions.js","constands/ActionType.js","components/admin/Register.js","components/admin/Footer.js","components/admin/SideBar.js","components/admin/Topbar.js","components/admin/LogoutModal.js","components/admin/Spin.js","components/admin/IndexAdmin.js","components/admin/block/BlockRow.js","components/admin/block/BlockTable.js","actions/BlockActions.js","components/admin/block/Index.js","actions/RoomAction.js","components/admin/room/RoomRow.js","components/admin/room/RoomTable.js","components/admin/room/index.js","components/admin/service/ServiceRow.js","components/admin/service/ServiceTable.js","components/admin/service/Index.js","components/admin/customer/CustomerRow.js","components/admin/customer/CustomerTable.js","components/admin/customer/Index.js","components/admin/contract/ContractRow.js","components/admin/contract/ContractTable.js","components/admin/contract/Index.js","components/web/Home/OurServices.js","components/web/Home/RateUser.js","components/web/Home/Team.js","components/web/Footer.js","components/web/Index.js","components/admin/bill/BillRow.js","components/admin/bill/BillTable.js","components/admin/bill/Index.js","Routers.js","App.js","serviceWorker.js","reducers/LoginReducer.js","reducers/BlockReducer.js","reducers/RoomReducer.js","reducers/RootReducer.js","index.js"],"names":["Login","props","validate","a","token","localStorage","getItem","axios","url","method","data","setState","isLogin","history","push","onSubmit","userName","state","pass","login","user","setItem","JSON","stringify","loginAction","this","e","target","name","value","userLogin","username","to","className","src","alt","style","width","height","type","id","onChange","aria-describedby","placeholder","htmlFor","onClick","Component","mapDispatchToProps","payload","withRouter","connect","LoginReducer","Option","Select","layout","labelCol","span","wrapperCol","tailLayout","offset","Register","React","createRef","sex","province","onFinish","values","confirm","toast","error","current","focus","account","fullName","email","address","role","register","success","setTimeout","message","onGenderChange","renderProvinces","map","item","key","initialValues","remember","Row","Col","Item","label","rules","required","allowClear","Password","ref","htmlType","Footer","SideBar","Topbar","fullname","parse","Fragment","href","data-toggle","aria-haspopup","aria-expanded","aria-hidden","aria-labelledby","data-target","LoginState","LogoutModal","logOut","removeItem","tabIndex","data-dismiss","aria-label","Spin","Spinner","color","IndexAdmin","showDetail","blocks","isLoading","idBlockSelected","block","rooms","notRented","valueSearch","rented","roomSelected","getBlocks","length","getRoomDashBoard","getRooms","room","status","renderSelectBlock","Array","isArray","onClickBlock","nameBlock","onChangeSelected","find","renderRoomNotRented","nameRoom","toLowerCase","indexOf","toLocaleLowerCase","title","showDetailRoomDashboard","backgroundColor","cursor","borderRadius","marginRight","marginTop","maxPeople","price","renderRoomRented","console","log","handleCancel","onChangeValueSearch","event","Container","xs","sm","FormGroup","Label","for","Input","visible","onOk","handleOk","onCancel","footer","floor","square","description","startDate","moment","format","BlockRow","isOpenModal","isOpenDeleteModal","toggle","toggleDelete","updateData","idOwner","result","callback","onDelete","onDeleting","onEditing","onClickEdit","Modal","isOpen","ModalHeader","ModalBody","Form","ModalFooter","Button","BlockTable","GET_BLOCKS","onAdding","addBlockModal","callBackBlockRow","renderBlock","blocksState","position","display","alignItems","justifyContent","outline","cellSpacing","BlockReducer","Index","GET_ROOMS","RoomRow","isOpenModalDelete","idBlock","RoomTable","callBackRoomRow","renderRooms","prevProps","disabled","roomsState","RoomReducer","ServiceRow","nameService","nameUnit","selectIdUnit","units","onGetUnit","unit","service","idUnit","onClickUnit","renderUnits","ServiceTable","formRef","services","defaultServices","isLoadingForm","getServices","getDefaultServices","addServiceModal","callBackServiceRow","renderService","renderDefaultServices","newServices","filter","some","bservice","Group","lineHeight","dService","createServices","create","md","TextArea","formItemLayout","CustomerRow","customers","loading","tempReg","onChangeTempReg","customer","onClickDelete","phoneNumber","dateBirth","job","workPlace","note","avatar","identifyBack","identifyFront","roomName","checked","getBase64","img","reader","FileReader","addEventListener","readAsDataURL","CustomerTable","callBackCustomerRow","getCustomers","renderCustomer","openAddCustomerModal","timeStamp","Math","Date","now","codeUser","IdOwner","handleChange","info","file","originFileObj","imageUrl","LoadingOutlined","PlusOutlined","RangePicker","DatePicker","ContractRow","targetKeys","optionCustomers","selectedKeys","endDate","idSlave","nextTargetKeys","direction","moveKeys","newOptionCustomers","handleSelectChange","sourceSelectedKeys","targetSelectedKeys","handleScroll","checksSelectedKey","arr","val","arrVal","contract","idUsers","onDeletingUserRoom","ids","idUserRooms","onChangeInputNumber","deposit","dayPay","onChangeRangeDate","onChangeTextArea","onChangeSelectSlave","userRoom","option","idUser","idRoom","circlePay","userRooms","update","newCustomers","defaultValue","dataSource","titles","onSelectChange","onScroll","render","listStyle","autoSize","minRows","maxRows","min","formatter","replace","parser","ranges","startOf","endOf","addonAfter","max","ContractTable","contracts","getContracts","addContractModal","callBackContractRow","bool","renderContracts","onChangeSelectRoom","prevState","_","isEqual","Meta","Card","OurServices","hoverable","cover","RateUser","autoplay","size","Team","hred","BillRow","isCheckedOut","billdetail","totalPrice","getBillDetail","bill","dateCheckOut","billDetail","onChangeIsCheckout","renderServices","detail","index","idService","numeral","amount","onChangeNum","dateCheckout","BillTable","bills","getBills","callBackBillRow","renderBills","number","total","renderSelectRoom","newService","Routers","exact","path","App","Boolean","window","location","hostname","match","nameInitialState","action","RoomReducerInitialState","composeEnhancers","trace","traceLimit","compose","RootReducer","combineReducers","store","createStore","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.7abb6aa6.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport '../../assets/css/sb-admin-2.min.css';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {loginAction} from '../../actions/LoginActions';\r\nimport {withRouter} from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nclass Login extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            userName: '',\r\n            pass: ''\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.validate();\r\n    }\r\n\r\n    validate = async () => {\r\n        const token = localStorage.getItem('token');\r\n\r\n        if (token) {\r\n            const validate = await axios({\r\n                url: `https://api-gateway.vmotel.me/go-lang/user/validate?token=${token}`,\r\n                method: 'POST'\r\n            });\r\n\r\n            if (validate) {\r\n                if (validate.data && validate.data.data) {\r\n                    this.setState({\r\n                        isLogin: true\r\n                    });\r\n                    this.props.history.push('/admin');\r\n                } else {\r\n                    this.props.history.push('/dang-nhap');\r\n                }\r\n\r\n            }\r\n        } else {\r\n            this.props.history.push('/dang-nhap');\r\n        }\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        });\r\n    }\r\n\r\n    onSubmit = () => {\r\n        this.Login();\r\n    }\r\n\r\n    Login = async () => {\r\n        const login = await axios({\r\n            url: 'https://api-gateway.vmotel.me/go-lang/user/login',\r\n            method: 'POST',\r\n            data: {\r\n                userName: this.state.userName,\r\n                pass: this.state.pass\r\n            }\r\n        });\r\n\r\n        if (login) {\r\n            if (login.data && login.data.data) {\r\n                const {token, user} = login.data.data;\r\n\r\n                localStorage.setItem('token', token);\r\n                localStorage.setItem('user', JSON.stringify(user));\r\n\r\n                this.props.loginAction({\r\n                    user\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.props.userLogin.username) {\r\n            return <Redirect to = \"/admin\" />;\r\n        }\r\n        return (\r\n            <div className=\"container\">\r\n                {/* Outer Row */}\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-xl-10 col-lg-12 col-md-9\">\r\n                        <div className=\"card o-hidden border-0 shadow-lg my-5\">\r\n                            <div className=\"card-body p-0\">\r\n                                {/* Nested Row within Card Body */}\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-lg-6 d-none d-lg-block\">\r\n                                        <img src= \"https://r-cf.bstatic.com/images/hotel/max1024x768/148/148672944.jpg\" alt= \"\" style = {{width: '100%', height: '100%'}} />\r\n                                    </div>\r\n                                    <div className=\"col-lg-6\">\r\n                                        <div className=\"p-5\">\r\n                                            <div className=\"text-center\">\r\n                                                <h1 className=\"h4 text-gray-900 mb-4\">Đăng nhập</h1>\r\n                                            </div>\r\n\r\n                                            <form className=\"user\">\r\n                                                <div className=\"form-group\">\r\n                                                    <input type=\"text\" \r\n                                                        className=\"form-control form-control-user\" \r\n                                                        id=\"exampleInputEmail\" \r\n                                                        name=\"userName\" \r\n                                                        onChange = {(e) => this.onChange(e)}\r\n                                                        value = {this.state.userName}\r\n                                                        aria-describedby=\"emailHelp\" \r\n                                                        placeholder=\"Nhập tài khoản...\" \r\n                                                    />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <input type=\"password\" \r\n                                                        className=\"form-control form-control-user\" \r\n                                                        id=\"exampleInputPassword\" \r\n                                                        name= \"pass\"\r\n                                                        onChange = {(e) => this.onChange(e)}\r\n                                                        value = {this.state.pass}\r\n                                                        placeholder=\"Nhập mật khẩu\" />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <div className=\"custom-control custom-checkbox small\">\r\n                                                        <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck\" />\r\n                                                        <label className=\"custom-control-label\" htmlFor=\"customCheck\">Nhớ mật khẩu</label>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <input type=\"button\" onClick={this.onSubmit} className=\"btn btn-primary btn-user btn-block\" value=\" Đăng Nhập\" />                                  \r\n                                                <hr />\r\n                                            </form>\r\n                                            <hr />\r\n                                            <div className=\"text-center\">\r\n                                                <Link className=\"small\" to=\"/dang-ky\">Đăng ký thành viên</Link>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps =  {\r\n    loginAction\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userLogin: state.LoginReducer.userLogin\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Login));","import * as ActionTypes from '../constands/ActionType'\r\n\r\nexport const loginAction = (payload) =>{\r\n    return {\r\n        type: ActionTypes.LOGIN_CONST,\r\n        payload\r\n    }\r\n}","export const LOGIN_CONST = 'LOGIN';\r\n\r\nexport const GET_BLOCKS_CONST = 'GET_BLOCKS';\r\n\r\nexport const GET_ROOMS_CONST = 'GET_ROOMS';\r\n","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {Form, Input, Button, Select} from 'antd';\r\nimport {Row, Col} from 'reactstrap';\r\nimport axios from 'axios';\r\nimport data from '../../assets/provincial.json';\r\nimport {toast, ToastContainer} from 'react-toastify';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nconst {Option} = Select;\r\n\r\nconst layout = {\r\n    labelCol: {span: 8},\r\n    wrapperCol: {span: 16}\r\n};\r\nconst tailLayout = {\r\n    wrapperCol: {offset: 20, span: 16}\r\n};\r\n\r\nclass Register extends Component {\r\n    \r\n    pass = React.createRef();\r\n    \r\n    state = {\r\n        sex: '',\r\n        province: ''\r\n    }\r\n\r\n   onFinish = values => {\r\n       if (values.pass !== values.confirm) {\r\n           toast.error('Xác nhận mật khẩu không đúng');\r\n           this.pass.current.focus();\r\n       }\r\n       else {\r\n           this.Register(values);\r\n       }\r\n\r\n   };\r\n\r\n    Register = async (account) => {\r\n        const register = await axios({\r\n            url: 'https://api-gateway.vmotel.me/go-lang/user/register',\r\n            method: 'POST',\r\n            data: {\r\n                fullName: account.fullName,\r\n                sex: account.sex,\r\n                userName: account.userName,\r\n                email: account.email,\r\n                province: account.province,\r\n                address: account.address,\r\n                pass: account.pass,\r\n                confirm: account.confirm,\r\n                role: 1\r\n            }\r\n        });\r\n\r\n        if (register) {\r\n            if (register.data && register.data.data) {\r\n                toast.success('Đăng ký thành công');\r\n\r\n                setTimeout(() => {\r\n                    this.props.history.push('/dang-nhap');        \r\n                }, 5000);\r\n            }\r\n            else if (register.data.message)\r\n            {\r\n                toast.error('Tài khoản đã tồn tại !');\r\n            }\r\n        }\r\n    }\r\n\r\n   onGenderChange = value => {\r\n       this.setState({\r\n           sex : value.sex,\r\n           province: value.province\r\n       });\r\n   }\r\n\r\n   renderProvinces = () => {\r\n       return data.map(item => {\r\n           return <Option \r\n               key={item.province} \r\n               value={item.province}>{item.province}\r\n           </Option>;\r\n       });\r\n   }\r\n\r\n   render() {\r\n       return (\r\n           <div className=\"container\">\r\n               <div className=\"card o-hidden border-0 shadow-lg my-5\">\r\n                   <div className=\"card-body p-0\">\r\n                       {/* Nested Row within Card Body */}\r\n                       <div className=\"row\">\r\n                           <div className=\"col-lg-4 d-none d-lg-block\">\r\n                               <img src= \"https://r-cf.bstatic.com/images/hotel/max1024x768/148/148672944.jpg\" alt= \"\" style = {{width: '100%', height: '100%'}} />\r\n                           </div>\r\n                           <div className=\"col-lg-8\">\r\n                               <div className=\"p-5\">\r\n                                   <div className=\"text-center\">\r\n                                       <h1 className=\"h4 text-gray-900 mb-4\">Đăng ký tài khoản</h1>\r\n                                   </div>\r\n                                   <Form\r\n                                       {...layout}\r\n                                       name=\"basic\"\r\n                                       initialValues={{remember: true}}\r\n                                       onFinish={this.onFinish}\r\n                                   >\r\n                                       <Row>\r\n                                           <Col>\r\n                                               <Form.Item\r\n                                                   label=\"Họ tên\"\r\n                                                   name=\"fullName\"\r\n                                                   rules={[{required: true, message: 'Nhập họ tên'}]}\r\n                                               >\r\n                                                   <Input />\r\n                                               </Form.Item>\r\n                                           </Col>\r\n\r\n                                           <Col>\r\n                                               <Form.Item\r\n                                                   label=\"Giới tính: \"\r\n                                                   name=\"sex\"\r\n                                                   rules={[{required: true, message: 'Phải chọn giới tính'}]}\r\n                                               >\r\n                                                   <Select\r\n                                                       placeholder=\"Chọn giới tính\"\r\n                                                       onChange={this.onGenderChange}\r\n                                                       allowClear\r\n                                                   >\r\n                                                       <Option value=\"male\">Nam</Option>\r\n                                                       <Option value=\"female\">Nữ</Option>\r\n                                                   </Select>\r\n                                               </Form.Item>\r\n                                           </Col>\r\n                                       </Row>\r\n                                       \r\n                                       <Row>\r\n                                           <Col>\r\n                                               <Form.Item\r\n                                                   label=\"Tài khoản\"\r\n                                                   name=\"userName\"\r\n                                                   rules={[{required: true, message: 'Hãy nhập tài khoản !'}]}\r\n                                               >\r\n                                                   <Input placeholder=\"Nhập tài khoản\" />\r\n                                               </Form.Item>\r\n                                           </Col>\r\n\r\n                                           <Col>\r\n                                               <Form.Item\r\n                                                   label=\"Email: \"\r\n                                                   name=\"email\"\r\n                                                   rules={[{required: true, message: 'Hãy nhập email', type: 'email'}]}\r\n                                               >\r\n                                                   <Input />\r\n                                               </Form.Item>\r\n                                           </Col>\r\n                                       </Row>\r\n\r\n                                       <Row>\r\n                                           <Col>\r\n                                               <Form.Item\r\n                                                   label=\"Mật khẩu\"\r\n                                                   name=\"pass\"\r\n                                                   rules={[{required: true, message: 'Hãy nhập mật khẩu'}]}\r\n                                               >\r\n                                                   <Input.Password ref={this.pass} />\r\n                                               </Form.Item>\r\n                                           </Col>\r\n                                           <Col>\r\n                                               <Form.Item\r\n                                                   label=\"Xác nhận\"\r\n                                                   name=\"confirm\"\r\n                                                   rules={[{required: true, message: 'Xác nhận mật khẩu'}]}\r\n                                               >\r\n                                                   <Input.Password />\r\n                                               </Form.Item>\r\n                                           </Col>\r\n                                       </Row>\r\n\r\n                                       <Row>\r\n                                           <Col>\r\n                                               <Form.Item\r\n                                                   label=\"Tỉnh\"\r\n                                                   name=\"province\"\r\n                                                   rules={[{required: true, message: 'Hãy chọn tỉnh !'}]}\r\n                                               >\r\n                                                   <Select\r\n                                                       placeholder=\"Chọn giới tính\"\r\n                                                       onChange={this.onGenderChange}\r\n                                                       allowClear\r\n                                                   >\r\n                                                       {this.renderProvinces()}\r\n                                                   </Select>\r\n                                               </Form.Item>\r\n                                           </Col>\r\n\r\n                                           <Col>\r\n                                               <Form.Item\r\n                                                   label=\"Địa chỉ: \"\r\n                                                   name=\"address\"\r\n                                                   rules={[{required: true, message: 'Hãy nhập địa chỉ'}]}\r\n                                               >\r\n                                                   <Input />\r\n                                               </Form.Item>\r\n                                           </Col>\r\n                                       </Row>\r\n\r\n                                       <Form.Item {...tailLayout}>\r\n                                           <Button type=\"primary\" htmlType=\"submit\">\r\n                                                Đăng ký\r\n                                           </Button>\r\n                                       </Form.Item>\r\n                                   </Form>\r\n                                   <hr />\r\n                                   <div className=\"text-center\">\r\n                                       <Link className=\"small\" to=\"/dang-nhap\">Đăng nhập</Link> \r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                       </div>\r\n                   </div>\r\n               </div>\r\n               <ToastContainer />\r\n           </div>\r\n       );\r\n   }\r\n}\r\n\r\nexport default withRouter(Register);","import React, { Component } from 'react';\r\n\r\nclass Footer extends Component {\r\n    render() {\r\n        return (\r\n        <footer className=\"sticky-footer bg-white\">\r\n            <div className=\"container my-auto\">\r\n            <div className=\"copyright text-center my-auto\">\r\n                <span>Copyright © Your Website 2019</span>\r\n            </div>\r\n            </div>\r\n        </footer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass SideBar extends Component {\r\n    render() {\r\n        return (\r\n            <ul className=\"navbar-nav bg-gradient-primary sidebar sidebar-dark accordion\" id=\"accordionSidebar\">\r\n                <Link className=\"sidebar-brand d-flex align-items-center justify-content-center\" to=\"/\">\r\n                    <div className=\"sidebar-brand-icon rotate-n-15\">\r\n                        <i className=\"fas fa-laugh-wink\" />\r\n                    </div>\r\n                    <div className=\"sidebar-brand-text mx-3\">H.D.V Smart <sup>motel</sup></div>\r\n                </Link>\r\n                <hr className=\"sidebar-divider my-0\" />\r\n                {/* Nav Item - Dashboard */}\r\n                <li className=\"nav-item active\">\r\n                    <Link className=\"nav-link\" to=\"/admin\">\r\n                        <i className=\"fas fa-fw fa-tachometer-alt\" />\r\n                        <span>Dashboard</span></Link>\r\n                </li>\r\n                {/* Nav Item - Pages Collapse Menu */}\r\n\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to=\"/admin/khu-tro\">\r\n                        <i className=\"fas fa-fw fa-chart-area\" />\r\n                        <span>Khu trọ</span></Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to=\"/admin/phong\">\r\n                        <i className=\"fas fa-fw fa-chart-area\" />\r\n                        <span>Phòng</span></Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to=\"/admin/dich-vu\">\r\n                        <i className=\"fas fa-fw fa-chart-area\" />\r\n                        <span>Dịch vụ</span></Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to=\"/admin/khach-hang\">\r\n                        <i className=\"fas fa-fw fa-chart-area\" />\r\n                        <span>Khách hàng</span></Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to=\"/admin/hop-dong\">\r\n                        <i className=\"fas fa-fw fa-chart-area\" />\r\n                        <span>Hợp đồng</span></Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to=\"/admin/hoa-don\">\r\n                        <i className=\"fas fa-fw fa-chart-area\" />\r\n                        <span>Hóa đơn</span></Link>\r\n                </li>\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SideBar;","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nclass Topbar extends Component {\r\n\r\n    state = {\r\n        fullname: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        let user = JSON.parse(localStorage.getItem('user'));\r\n\r\n        this.setState({\r\n            fullname : user ? user.fullname : 'Admin'\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <li className=\"nav-item dropdown no-arrow mx-1\">\r\n                    <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"alertsDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                        <i className=\"fa fa-bell-o\" aria-hidden=\"true\" />\r\n                        <span className=\"badge badge-danger badge-counter\">3+</span>\r\n                    </a>\r\n                    <div className=\"dropdown-list dropdown-menu dropdown-menu-right shadow animated--grow-in\" aria-labelledby=\"alertsDropdown\">\r\n                        <h6 className=\"dropdown-header\">\r\n                    Alerts Center\r\n                        </h6>\r\n                        <a className=\"dropdown-item d-flex align-items-center\" href=\"#\">\r\n                            <div className=\"mr-3\">\r\n                                <div className=\"icon-circle bg-primary\">\r\n                                    <i className=\"fas fa-file-alt text-white\" />\r\n                                </div>\r\n                            </div>\r\n                            <div>\r\n                                <div className=\"small text-gray-500\">December 12, 2019</div>\r\n                                <span className=\"font-weight-bold\">A new monthly report is ready to download!</span>\r\n                            </div>\r\n                        </a>\r\n                        <a className=\"dropdown-item d-flex align-items-center\" href=\"#\">\r\n                            <div className=\"mr-3\">\r\n                                <div className=\"icon-circle bg-success\">\r\n                                    <i className=\"fas fa-donate text-white\" />\r\n                                </div>\r\n                            </div>\r\n                            <div>\r\n                                <div className=\"small text-gray-500\">December 7, 2019</div>\r\n                        $290.29 has been deposited into your account!\r\n                            </div>\r\n                        </a>\r\n                        <a className=\"dropdown-item d-flex align-items-center\" href=\"#\">\r\n                            <div className=\"mr-3\">\r\n                                <div className=\"icon-circle bg-warning\">\r\n                                    <i className=\"fas fa-exclamation-triangle text-white\" />\r\n                                </div>\r\n                            </div>\r\n                            <div>\r\n                                <div className=\"small text-gray-500\">December 2, 2019</div>\r\n                        Spending Alert: We've noticed unusually high spending for your account.\r\n                            </div>\r\n                        </a>\r\n                        <a className=\"dropdown-item text-center small text-gray-500\" href=\"#\">Show All Alerts</a>\r\n                    </div>\r\n                </li>\r\n                <li className=\"nav-item dropdown no-arrow mx-1\">\r\n                    <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"messagesDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                        <i className=\"fa fa-envelope\" aria-hidden=\"true\" />\r\n                        <span className=\"badge badge-danger badge-counter\">7</span>\r\n                    </a>\r\n                    <div className=\"dropdown-list dropdown-menu dropdown-menu-right shadow animated--grow-in\" aria-labelledby=\"messagesDropdown\">\r\n                        <h6 className=\"dropdown-header\">\r\n                    Message Center\r\n                        </h6>\r\n                        <a className=\"dropdown-item d-flex align-items-center\" href=\"#\">\r\n                            <div className=\"dropdown-list-image mr-3\">\r\n                                <img className=\"rounded-circle\" src=\"https://source.unsplash.com/fn_BT9fwg_E/60x60\" alt=\"\" />\r\n                                <div className=\"status-indicator bg-success\" />\r\n                            </div>\r\n                            <div className=\"font-weight-bold\">\r\n                                <div className=\"text-truncate\">Hi there! I am wondering if you can help me with a problem I've been having.</div>\r\n                                <div className=\"small text-gray-500\">Emily Fowler · 58m</div>\r\n                            </div>\r\n                        </a>\r\n                        <a className=\"dropdown-item d-flex align-items-center\" href=\"#\">\r\n                            <div className=\"dropdown-list-image mr-3\">\r\n                                <img className=\"rounded-circle\" src=\"https://source.unsplash.com/AU4VPcFN4LE/60x60\" alt=\"\" />\r\n                                <div className=\"status-indicator\" />\r\n                            </div>\r\n                            <div>\r\n                                <div className=\"text-truncate\">I have the photos that you ordered last month, how would you like them sent to you?</div>\r\n                                <div className=\"small text-gray-500\">Jae Chun · 1d</div>\r\n                            </div>\r\n                        </a>\r\n                        <a className=\"dropdown-item d-flex align-items-center\" href=\"#\">\r\n                            <div className=\"dropdown-list-image mr-3\">\r\n                                <img className=\"rounded-circle\" src=\"https://source.unsplash.com/CS2uCrpNzJY/60x60\" alt=\"\" />\r\n                                <div className=\"status-indicator bg-warning\" />\r\n                            </div>\r\n                            <div>\r\n                                <div className=\"text-truncate\">Last month's report looks great, I am very happy with the progress so far, keep up the good work!</div>\r\n                                <div className=\"small text-gray-500\">Morgan Alvarez · 2d</div>\r\n                            </div>\r\n                        </a>\r\n                        <a className=\"dropdown-item d-flex align-items-center\" href=\"#\">\r\n                            <div className=\"dropdown-list-image mr-3\">\r\n                                <img className=\"rounded-circle\" src=\"https://source.unsplash.com/Mv9hjnEUHR4/60x60\" alt=\"\" />\r\n                                <div className=\"status-indicator bg-success\" />\r\n                            </div>\r\n                            <div>\r\n                                <div className=\"text-truncate\">Am I a good boy? The reason I ask is because someone told me that people say this to all dogs, even if they aren't good...</div>\r\n                                <div className=\"small text-gray-500\">Chicken the Dog · 2w</div>\r\n                            </div>\r\n                        </a>\r\n                        <a className=\"dropdown-item text-center small text-gray-500\" href=\"#\">Read More Messages</a>\r\n                    </div>\r\n                </li>\r\n                <div className=\"topbar-divider d-none d-sm-block\" />\r\n                {/* Nav Item - User Information */}\r\n                <li className=\"nav-item dropdown no-arrow\">\r\n                    <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"userDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                        <span className=\"mr-2 d-none d-lg-inline text-gray-600 small\">{this.state.fullname}</span>\r\n                        <img className=\"img-profile rounded-circle\" src=\"https://source.unsplash.com/QAB-WJcbgJk/60x60\" />\r\n                    </a>\r\n                    {/* Dropdown - User Information */}\r\n                    <div className=\"dropdown-menu dropdown-menu-right shadow animated--grow-in\" aria-labelledby=\"userDropdown\">\r\n                        <button className=\"dropdown-item\" data-toggle=\"modal\" data-target=\"#logoutModal\" >\r\n                            Đăng xuất\r\n                        </button>\r\n                    </div>\r\n                </li>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        LoginState: state.LoginReducer\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(Topbar);","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default class LogoutModal extends Component {\r\n\r\n    logOut = () => {\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('user');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"modal fade\" id=\"logoutModal\" tabIndex={-1} role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\" role=\"document\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h5 className=\"modal-title\" id=\"exampleModalLabel\">Ready to Leave?</h5>\r\n                            <button className=\"close\" type=\"button\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                <span aria-hidden=\"true\">×</span>\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"modal-body\">Đăng suất để thoái khỏi phiên làm việc</div>\r\n                        <div className=\"modal-footer\">\r\n                            <button className=\"btn btn-secondary\" type=\"button\" data-dismiss=\"modal\">Hủy</button>\r\n                            <Link onClick={this.logOut} className=\"btn btn-primary\" to=\"/dang-nhap\">Đăng suất</Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport {Spinner} from 'reactstrap';\r\n\r\nexport default class Spin extends Component {\r\n    render() {\r\n        return (\r\n            <div className='spinner'>\r\n                <Spinner color = \"primary\" />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\n// import '../../assets/vendor/fontawesome-free/css/all.min.cs'\r\nimport '../../assets/css/sb-admin-2.min.css';\r\nimport Footer from './Footer';\r\nimport SideBar from './SideBar';\r\nimport Topbar from './Topbar';\r\nimport {withRouter} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport LogOutModal from './LogoutModal';\r\nimport Spin from './Spin';\r\nimport {FormGroup, Label, Input} from 'reactstrap';\r\nimport {Container, Row, Col} from 'reactstrap';\r\nimport {Card, Modal, Button} from 'antd';\r\nimport moment from 'moment';\r\n\r\nclass IndexAdmin extends Component {\r\n    state = {\r\n        isLogin: false,\r\n        showDetail: false,\r\n        blocks: [],\r\n        isLoading: false,\r\n        idBlockSelected: -1,\r\n        block: null,\r\n        rooms: [],\r\n        notRented: [],\r\n        valueSearch: '',\r\n        rented: [],\r\n        roomSelected: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.validate();\r\n        this.getBlocks();\r\n        this.getRoomDashBoard(this.state.idBlockSelected);\r\n    }\r\n\r\n    getBlocks = async () =>{\r\n        this.setState({\r\n            isLoading: true\r\n        });\r\n\r\n        let user = JSON.parse(localStorage.getItem('user'));\r\n        let token = localStorage.getItem('token');\r\n        const getBlocks = await axios({\r\n            url: `https://api-gateway.vmotel.me/go-lang/block/get-block?token=${token || ''}&userId=${user ? user.id : ''}`,\r\n            method: 'GET'\r\n        });\r\n        \r\n        if (getBlocks) {\r\n            if (getBlocks.data && getBlocks.data.data) {\r\n                const {blocks = []} = getBlocks.data.data;\r\n                \r\n                if (blocks.length > 0) {\r\n                    this.setState({\r\n                        blocks,\r\n                        idBlockSelected: +blocks[0].id,\r\n                        isLoading: false,\r\n                        block: blocks[0]\r\n                    });\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            isLoading: false\r\n        });\r\n    }\r\n\r\n    getRoomDashBoard = async(id) =>{\r\n        this.setState({\r\n            isLoading: true\r\n        });\r\n\r\n        this.setState({\r\n            rented : [],\r\n            notRented :[]\r\n        });\r\n\r\n        let user = JSON.parse(localStorage.getItem('user'));\r\n        let token = localStorage.getItem('token');\r\n        const getRooms = await axios({\r\n            url: `https://api-gateway.vmotel.me/go-lang/room/get-rooms-dashboard?status=${-1}&idBlock=${id}&token=${token || ''}&userId=${user ? user.id : ''}`,\r\n            method: 'GET'\r\n        });\r\n        \r\n        if (getRooms) {\r\n            if (getRooms.data && getRooms.data.data) {\r\n                const {rooms = []} = getRooms.data.data;\r\n\r\n                if (rooms.length > 0) {\r\n                    this.setState({\r\n                        rooms\r\n                    });\r\n                }\r\n\r\n                if (rooms.length > 0)\r\n                {\r\n                    this.state.rooms.map(room => {\r\n                        if (room.status === 1)\r\n                        {\r\n                            this.setState({\r\n                                rented : [...this.state.rented, room]\r\n                            });\r\n                        } \r\n                        else \r\n                        {\r\n                            this.setState({\r\n                                notRented : [...this.state.notRented, room]\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            isLoading: false\r\n        });\r\n    }\r\n\r\n    renderSelectBlock = () =>{\r\n\r\n        if (Array.isArray(this.state.blocks) && this.state.blocks.length > 0) {\r\n            return this.state.blocks.map(block => {\r\n                return <React.Fragment key={block.id}>\r\n                    <option onClick={() => this.onClickBlock(block.id)}>{block.nameBlock}</option>\r\n                </React.Fragment>;\r\n            });\r\n        }\r\n    }\r\n\r\n    onChangeSelected = (e) => {\r\n        const {value} = e.target;\r\n\r\n        if (value) {\r\n            const block = this.state.blocks.find(block => block.nameBlock === value);\r\n\r\n            this.setState({\r\n                idBlockSelected: block.id,\r\n                block\r\n            });\r\n\r\n            this.getRoomDashBoard(block.id);\r\n        }    \r\n    }\r\n\r\n    validate = async () => {\r\n        const token = localStorage.getItem('token');\r\n\r\n        if (token) {\r\n            const validate = await axios({\r\n                url: `https://api-gateway.vmotel.me/go-lang/user/validate?token=${token}`,\r\n                method: 'POST'\r\n            });\r\n\r\n            if (validate) {\r\n                if (validate.data && validate.data.data) {\r\n                    this.setState({\r\n                        isLogin: true\r\n                    });\r\n                } else {\r\n                    this.props.history.push('/dang-nhap');\r\n                }\r\n\r\n            }\r\n        } else {\r\n            this.props.history.push('/dang-nhap');\r\n        }\r\n    }\r\n\r\n    renderRoomNotRented = () =>{\r\n\r\n        const {notRented = []} = this.state;\r\n\r\n        if (Array.isArray(notRented) && notRented.length > 0) {\r\n            \r\n            return notRented.map(room => {\r\n                if (room.nameRoom.toLowerCase().indexOf(this.state.valueSearch.toLocaleLowerCase()) > -1) {\r\n                    return <React.Fragment key={room.id}>                   \r\n                        <Card title= {room.nameRoom}\r\n                            onClick = {(e) =>this.showDetailRoomDashboard(e, room)}\r\n                            room = {room}\r\n                            style={{width: 175, \r\n                                height: 150, \r\n                                backgroundColor: 'rgb(19, 194, 194)', \r\n                                color: '#fff',\r\n                                cursor: 'pointer',\r\n                                borderRadius : '5%',\r\n                                marginRight: '10px',\r\n                                marginTop: '20px'}}>\r\n                            <p><i className=\"fa fa-user\" aria-hidden=\"true\" /> {room.maxPeople}</p>\r\n                            <p><i className=\"fa fa-usd\" aria-hidden=\"true\" /> {room.price}</p>\r\n                        </Card>\r\n                    </React.Fragment>;\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    renderRoomRented = () =>{\r\n\r\n        const {rented = []} = this.state;\r\n\r\n        if (Array.isArray(rented) && rented.length > 0) {\r\n            \r\n            return rented.map(room => {\r\n                if (room.nameRoom.toLowerCase().indexOf(this.state.valueSearch.toLocaleLowerCase()) > -1) {\r\n                    return <React.Fragment key={room.id}>                   \r\n                        <Card title= {room.nameRoom}\r\n                            room = {room}\r\n                            onClick = {(e) =>this.showDetailRoomDashboard(e, room)}\r\n                            style={{width: 175, \r\n                                height: 150, \r\n                                backgroundColor: 'rgb(245, 34, 45)', \r\n                                color: '#fff',\r\n                                cursor: 'pointer',\r\n                                borderRadius : '5%',\r\n                                marginRight: '10px',\r\n                                marginTop: '20px'}}>\r\n                            <p><i className=\"fa fa-user\" aria-hidden=\"true\" /> {room.maxPeople}</p>\r\n                            <p><i className=\"fa fa-usd\" aria-hidden=\"true\" /> {room.price}</p>\r\n                        </Card>\r\n                    </React.Fragment>;\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    showDetailRoomDashboard = (e , room) =>{\r\n        this.setState({\r\n            showDetail : true,\r\n            roomSelected: room\r\n        });\r\n\r\n        console.log(room);\r\n    }\r\n\r\n    handleCancel = () =>{\r\n        this.setState({\r\n            showDetail : false\r\n        });\r\n    }\r\n\r\n    onChangeValueSearch = (event) => {\r\n        const {value = ''} = event.target;\r\n\r\n        this.setState({\r\n            valueSearch: value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {roomSelected} = this.state;\r\n\r\n        return (\r\n            <div>\r\n                {this.state.isLoading ?  <Spin /> : null} \r\n                {/* Page Wrapper */}\r\n                <div id=\"wrapper\">\r\n                    <SideBar />\r\n\r\n                    {/* Content Wrapper */}\r\n                    <div id=\"content-wrapper\" className=\"d-flex flex-column\">\r\n                        {/* Main Content */}\r\n                        <div id=\"content\">\r\n                            {/* Topbar */}\r\n                            <nav className=\"navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow\">\r\n                                {/* Sidebar Toggle (Topbar) */}\r\n                                <button id=\"sidebarToggleTop\" className=\"btn btn-link d-md-none rounded-circle mr-3\">\r\n                                    <i className=\"fa fa-bars\" />\r\n                                </button>\r\n\r\n                                {/* Topbar Navbar */}\r\n                                <ul className=\"navbar-nav ml-auto\">\r\n                                    {/* Nav Item - Search Dropdown (Visible Only XS) */}\r\n                                    <li className=\"nav-item dropdown no-arrow d-sm-none\">\r\n                                        <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"searchDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                            <i className=\"fas fa-search fa-fw\" />\r\n                                        </a>\r\n                                        {/* Dropdown - Messages */}\r\n                                        <div className=\"dropdown-menu dropdown-menu-right p-3 shadow animated--grow-in\" aria-labelledby=\"searchDropdown\">\r\n                                            <form className=\"form-inline mr-auto w-100 navbar-search\">\r\n                                                <div className=\"input-group\">\r\n                                                    <input type=\"text\" className=\"form-control bg-light border-0 small\" placeholder=\"Search for...\" aria-label=\"Search\" aria-describedby=\"basic-addon2\" />\r\n                                                    <div className=\"input-group-append\">\r\n                                                        <button className=\"btn btn-primary\" type=\"button\">\r\n                                                            <i className=\"fas fa-search fa-sm\" />\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </form>\r\n                                        </div>\r\n                                    </li>\r\n                                    {/* Nav Item - Alerts */}\r\n                                    <Topbar />\r\n                                </ul>\r\n                            </nav>\r\n\r\n                            {/* End of Topbar */}\r\n                            {/* Begin Page Content */}\r\n                            <div className=\"container-fluid\">\r\n                                {/* Page Heading */}\r\n                                <div className=\"d-sm-flex align-items-center justify-content-between mb-4\">\r\n                                    <Container>\r\n                                        <Row>\r\n                                            <Col xs=\"6\" sm = \"4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"exampleSelect\">Khu trọ: </Label>\r\n                                                    <Input onChange={this.onChangeSelected} type=\"select\" name=\"select\" id=\"exampleSelect\">\r\n                                                        {this.renderSelectBlock()}\r\n                                                    </Input>\r\n                                                </FormGroup>\r\n                                            </Col>\r\n                                            <Col xs=\"6\" sm = \"4\" >\r\n                                                <FormGroup>\r\n                                                    <Label for=\"exampleSelect\">Tìm kiếm theo tên</Label>\r\n                                                    <Input \r\n                                                        onChange={this.onChangeValueSearch} \r\n                                                        type=\"text\" name=\"roomName\" id=\"roomName\" \r\n                                                        placeholder = \"Nhập từ khóa\"\r\n                                                        style={{width: '300px'}} />\r\n                                                </FormGroup>                                       \r\n                                            </Col>\r\n                                            \r\n                                        </Row>\r\n                                    </Container>\r\n                                </div>\r\n                                {/* Content Row */}\r\n\r\n                                <div className=\"row ml-4\">\r\n                                    {this.state.notRented.length > 0 ?  <div className=\"col-12\">Chưa thuê: </div> : null}                                                               \r\n                                    {this.renderRoomNotRented()} \r\n                                    {this.state.rented.length > 0 ?  <div className=\"col-12 mt-5\">Đã thuê: </div> : null}                                       \r\n                                    {this.renderRoomRented()}\r\n                                    {this.state.blocks.length < 1 ? 'Chưa có khu trọ nào' : this.state.notRented.length === 0 && this.state.rented.length === 0 &&  'Khu trọ chưa có phòng nào !'}\r\n                                    {/* {this.state.notRented.length === 0 && this.state.rented.length === 0 &&  'Khu trọ chưa có phòng nào !'}   */}\r\n                                </div>\r\n\r\n                            </div>\r\n                            {/* /.container-fluid */}\r\n                        </div>\r\n                        {/* End of Main Content */}\r\n                        {/* Footer */}\r\n                        <Footer />\r\n                        {/* End of Footer */}\r\n                    </div>\r\n                    {/* End of Content Wrapper */}\r\n                </div>\r\n                {/* End of Page Wrapper */}\r\n\r\n                {/* Scroll to Top Button */}\r\n                <a className=\"scroll-to-top rounded\" href=\"#page-top\">\r\n                    <i className=\"fas fa-angle-up\" />\r\n                </a>\r\n                <LogOutModal />\r\n                <Modal\r\n                    visible={this.state.showDetail}\r\n                    title={roomSelected ? 'Phòng  ' + roomSelected.nameRoom : ''}\r\n                    onOk={this.handleOk}\r\n                    onCancel={this.handleCancel}\r\n                    footer={[\r\n                        <Button key=\"back\" type=\"primary\" onClick={this.handleCancel}>\r\n                            OK\r\n                        </Button>\r\n                    ]}\r\n                >\r\n                    <Row>\r\n                        <Col>\r\n                            <b>Khu trọ: </b>\r\n                        </Col>\r\n                        <Col>\r\n                            <p>{roomSelected ? roomSelected.nameBlock : ''}</p>\r\n                        </Col>\r\n                    </Row>\r\n                    {/* <Row>\r\n                        <Col>\r\n                            <b>Mã phòng: </b>\r\n                        </Col>\r\n                        <Col>\r\n                            <p>{roomSelected ? roomSelected.codeRoom : ''}</p>\r\n                        </Col>\r\n                    </Row> */}\r\n                    <Row>\r\n                        <Col>\r\n                            <b>Tầng: </b>\r\n                        </Col>\r\n                        <Col>\r\n                            <p>{roomSelected ? roomSelected.floor : ''}</p>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <b>Số người tối đa: </b>\r\n                        </Col>\r\n                        <Col>\r\n                            <p>{roomSelected ? roomSelected.maxPeople : ''}</p>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Row>\r\n                        <Col>\r\n                            <b>Diện tích: </b>\r\n                        </Col>\r\n                        <Col>\r\n                            <p>{roomSelected ? roomSelected.square : ''}</p>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Row>\r\n                        <Col>\r\n                            <b>Mô tả: </b>\r\n                        </Col>\r\n                        <Col>\r\n                            <p>{roomSelected ? roomSelected.description : ''}</p>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Row>\r\n                        <Col>\r\n                            <b>Ngày thuê: </b>\r\n                        </Col>\r\n                        <Col>\r\n                            <p>{roomSelected && roomSelected.startDate  ? moment(roomSelected.startDate).format('DD-MM-YYYY') : 'Chưa thuê'}</p>\r\n                        </Col>\r\n                    </Row>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(IndexAdmin);","import React, {Component} from 'react';\r\nimport {Button, Modal, ModalHeader, ModalBody, ModalFooter} from 'reactstrap';\r\nimport {Form, FormGroup, Label, Input} from 'reactstrap';\r\nimport axios from 'axios';\r\nimport {toast, ToastContainer} from 'react-toastify';\r\nimport Spin from '../../admin/Spin';\r\nimport {Tag} from 'antd'; \r\n\r\nexport default class BlockRow extends Component {\r\n    state = {\r\n        isOpenModal: false,\r\n        isOpenDeleteModal: false,\r\n        nameBlock: '',\r\n        address: '',\r\n        description : '',\r\n        isLoading: false\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            isOpenModal: !this.state.isOpenModal\r\n        });\r\n    }\r\n\r\n    toggleDelete = () =>{\r\n        this.setState({\r\n            isOpenDeleteModal: !this.state.isOpenDeleteModal\r\n        });\r\n    }\r\n\r\n    updateData= async () =>{\r\n        this.setState({\r\n            isLoading: true\r\n        });\r\n\r\n        let token = localStorage.getItem('token');\r\n        const result = await axios({\r\n            url: `https://api-gateway.vmotel.me/go-lang/block/update/${this.props.block.id}?token=${token || ''}`,\r\n            method: 'PUT',\r\n            data: {\r\n                id: this.props.block.id,\r\n                nameBlock : this.state.nameBlock,\r\n                address : this.state.address,\r\n                description : this.state.description,\r\n                idOwner : this.props.block.idOwner\r\n            }\r\n        });\r\n\r\n        this.setState({\r\n            isLoading: false\r\n        });\r\n\r\n        if (result) {\r\n            if (result.data && result.data.data) {\r\n                toast.success('Cập nhật thông tin thành công !');\r\n                \r\n                this.props.callback(true);\r\n            } else {\r\n\r\n                toast.error('Cập nhật thông tin thất bại !');\r\n            }\r\n        } \r\n\r\n        this.setState({\r\n            isOpenModal: !this.state.isOpenModal\r\n        });\r\n    }\r\n\r\n    onDelete = async () =>{\r\n\r\n        this.setState({\r\n            isOpenDeleteModal: true\r\n        });\r\n\r\n    }\r\n\r\n    onDeleting = async () =>{\r\n        this.setState({\r\n            isLoading: true\r\n        });\r\n\r\n        let token = localStorage.getItem('token');\r\n        const result = await axios({\r\n            url: `https://api-gateway.vmotel.me/go-lang/block/delete/${this.props.block.id}?token=${token || ''}`,\r\n            method: 'DELETE'\r\n        });\r\n\r\n        this.setState({\r\n            isLoading: false\r\n        });\r\n\r\n        if (result) {\r\n            if (result.data && result.data.data) {\r\n                toast.success('Xóa khu trọ thành công !');\r\n               \r\n                this.props.callback(true);\r\n\r\n                this.setState({\r\n                    isOpenDeleteModal: !this.state.isOpenDeleteModal\r\n                });\r\n            } else {\r\n\r\n                toast.error('Xóa khu trọ thất bại !');\r\n            }\r\n        } \r\n    }\r\n\r\n    onEditing = () =>{\r\n        this.updateData();      \r\n    }\r\n    \r\n    onClickEdit = () => {\r\n        this.setState({\r\n            isOpenModal: true,\r\n            nameBlock : this.props.block.nameBlock,\r\n            address: this.props.block.address,\r\n            description : this.props.block.description\r\n        });\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <React.Fragment>\r\n                <tr>\r\n                    <td><Tag color=\"#f50\">{this.props.block.nameBlock}</Tag></td>\r\n                    <td>{this.props.block.address}</td>\r\n                    <td>{this.props.block.description}</td>\r\n                    <td>\r\n                        <button onClick={this.onClickEdit} className=\"btn btn-warning btn-circle mr-3\" title=\"Chỉnh sửa\">\r\n                            <i className=\"fa fa-pencil-square\" aria-hidden=\"true\" />\r\n                        </button>\r\n                        <button onClick={this.onDelete} className=\"btn btn-danger btn-circle\" title=\"Xóa\">\r\n                            <i className=\"fa fa-trash\" aria-hidden=\"true\" />\r\n                        </button>\r\n                    </td>\r\n                </tr>\r\n                <Modal isOpen={this.state.isOpenModal} toggle={this.toggle}>\r\n                    {this.state.isLoading ?  <Spin /> : null}  \r\n                    <ModalHeader toggle={this.toggle}>CHỈNH SỬA THÔNG TIN KHU TRỌ</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleNameBlock\">Tên khu trọ</Label>\r\n                                <Input type=\"email\" name=\"nameBlock\" id=\"exampleNameBlock\" onChange={(e) => this.onChange(e)} value={this.state.nameBlock} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleAddress\">Địa chỉ</Label>\r\n                                <Input type=\"email\" name=\"address\" id=\"exampleAddress\" onChange={(e) => this.onChange(e)} value={this.state.address} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleDescription\">Mô tả</Label>\r\n                                <Input type=\"email\" name=\"description\" id=\"exampleDescription\" onChange={(e) => this.onChange(e)} value={this.state.description} />\r\n                            </FormGroup>\r\n                        </Form>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button color=\"primary\" onClick={this.onEditing}>Chỉnh sửa</Button>{' '}\r\n                        <Button color=\"secondary\" onClick={this.toggle}>Hủy</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n                <Modal isOpen={this.state.isOpenDeleteModal} toggle={this.toggle}>\r\n                    {this.state.isLoading ?  <Spin /> : null}  \r\n                    <ModalHeader toggle={this.toggle}>THÔNG BÁO</ModalHeader>\r\n                    <ModalBody>\r\n                        Chắc chắn muốn xóa khu trọ ?\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button color=\"primary\" onClick={this.onDeleting}>Xóa</Button>{' '}\r\n                        <Button color=\"secondary\" onClick={this.toggleDelete}>Hủy</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n                <ToastContainer />\r\n                \r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport BlockRow from './BlockRow';\r\nimport {connect} from 'react-redux';\r\nimport {GET_BLOCKS} from '../../../actions//BlockActions';\r\nimport {Button} from 'reactstrap';\r\nimport {Modal, ModalHeader, ModalBody, ModalFooter} from 'reactstrap';\r\nimport {Form, FormGroup, Label, Input} from 'reactstrap';\r\nimport {toast, ToastContainer} from 'react-toastify';\r\nimport Spin from '../../admin/Spin';\r\n\r\nclass BlockTable extends Component {\r\n\r\n    state = {\r\n        blocks : [],\r\n        isOpenModal: false,\r\n        nameBlock: '',\r\n        address: '',\r\n        description : '',\r\n        isLoading: false\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            isOpenModal: !this.state.isOpenModal\r\n        });\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getBlocks();\r\n    }\r\n\r\n    getBlocks = async () =>{\r\n        this.setState({\r\n            isLoading: true\r\n        });\r\n\r\n        let user = JSON.parse(localStorage.getItem('user'));\r\n        let token = localStorage.getItem('token');\r\n        const blocks = await axios({\r\n            url: `https://api-gateway.vmotel.me/go-lang/block/get-block?token=${token || ''}&userId=${user ? user.id : ''}`,\r\n            method: 'GET'\r\n        });\r\n        \r\n        this.setState({\r\n            blocks : blocks.data.data.blocks,\r\n            isLoading: false\r\n        });\r\n\r\n        this.props.GET_BLOCKS({\r\n            blocks: blocks.data.data.blocks\r\n        });\r\n\r\n    }\r\n\r\n    onAdding = async () =>{\r\n        this.setState({\r\n            isLoading: true\r\n        });\r\n\r\n        let user = JSON.parse(localStorage.getItem('user'));\r\n        let token = localStorage.getItem('token');\r\n\r\n        const result = await axios({\r\n            url: `https://api-gateway.vmotel.me/go-lang/block/create?token=${token || ''}`,\r\n            method: 'POST',\r\n            data: {\r\n                nameBlock : this.state.nameBlock,\r\n                address : this.state.address,\r\n                description : this.state.description,\r\n                idOwner : user.id\r\n            }\r\n        });\r\n\r\n        this.setState({\r\n            isLoading: false\r\n        });\r\n        if (result) {\r\n            if (result.data && result.data.data) {\r\n                this.getBlocks();\r\n                toast.success('Thêm khu trọ thành công !');\r\n\r\n                this.setState({\r\n                    isOpenModal: !this.state.isOpenModal\r\n                });\r\n                \r\n            } else {\r\n\r\n                toast.error('Thêm khu trọ thất bại !');\r\n            }\r\n        } \r\n    }\r\n\r\n    addBlockModal = () =>{\r\n        this.setState({\r\n            isOpenModal: true\r\n        });\r\n    }\r\n\r\n    callBackBlockRow = (value) =>{\r\n        if (value) {\r\n            this.getBlocks();\r\n        }\r\n    }\r\n\r\n    renderBlock = () => {\r\n        const {blocksState = []} = this.props;\r\n\r\n        if (Array.isArray(blocksState) && blocksState.length > 0) {\r\n            return blocksState.map(block => {\r\n                return <React.Fragment key={block.id}>\r\n                    <BlockRow \r\n                        block={block}\r\n                        callback = {this.callBackBlockRow}\r\n                    />\r\n                </React.Fragment>;\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{position: 'relative'}}>   \r\n                {this.state.isLoading ?  <Spin /> : null}       \r\n                <div className=\"card shadow mb-4\">\r\n                    <div className=\"card-header py-3 row\" style = {{display : 'flex', alignItems : 'center', justifyContent : 'space-between'}}>\r\n                        <div className=\"sm-6\">\r\n                            <h6 className=\"m-0 font-weight-bold text-primary\">QUẢN LÝ DANH SÁCH NHÀ TRỌ</h6>                          \r\n                        </div>\r\n                        <div>\r\n                            <Button outline color=\"primary\" onClick = {this.addBlockModal}>Thêm khu trọ</Button>{' '}                                 \r\n                        </div>\r\n                                   \r\n                    </div>\r\n                    \r\n                    <div className=\"card-body\">\r\n                        <div className=\"table-responsive\">\r\n                            <table className=\"table table-bordered\" id=\"dataTable\" width=\"100%\" cellSpacing={0}>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Tên khu nhà</th>\r\n                                        <th>Địa chỉ</th>\r\n                                        <th>Mô tả</th>\r\n                                        <tr />\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {this.renderBlock()}                      \r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>       \r\n                <Modal isOpen={this.state.isOpenModal} toggle={this.toggle}>\r\n                    {this.state.isLoading ?  <Spin /> : null}       \r\n                    <ModalHeader toggle={this.toggle}>THÊM KHU TRỌ</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleNameBlock\">Tên khu trọ</Label>\r\n                                <Input type=\"email\" name=\"nameBlock\" id=\"exampleNameBlock\" onChange={(e) => this.onChange(e)} value={this.state.nameBlock} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleAddress\">Địa chỉ</Label>\r\n                                <Input type=\"email\" name=\"address\" id=\"exampleAddress\" onChange={(e) => this.onChange(e)} value={this.state.address} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleDescription\">Mô tả</Label>\r\n                                <Input type=\"email\" name=\"description\" id=\"exampleDescription\" onChange={(e) => this.onChange(e)} value={this.state.description} />\r\n                            </FormGroup>\r\n                        </Form>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button color=\"primary\" onClick={this.onAdding}>Thêm</Button>{' '}\r\n                        <Button color=\"secondary\" onClick={this.toggle}>Hủy</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n                <ToastContainer />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps =  {\r\n    GET_BLOCKS\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        blocksState: state.BlockReducer.blocks\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BlockTable);","import * as ActionTypes from '../constands/ActionType';\r\n\r\nexport const GET_BLOCKS = (payload) =>{\r\n    return {\r\n        type: ActionTypes.GET_BLOCKS_CONST,\r\n        payload\r\n    };\r\n};","import React, {Component} from 'react';\r\nimport '../../../assets/css/sb-admin-2.min.css';\r\nimport '../../../assets/vendor/datatables/dataTables.bootstrap4.min.css';\r\nimport SideBar from '../SideBar';\r\nimport Topbar from '../Topbar';\r\nimport BlockTable from './BlockTable';\r\nimport LogoutModal from '../LogoutModal';\r\n\r\nclass Index extends Component {\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                {/* Page Wrapper */}\r\n                <div id=\"wrapper\">\r\n                    <SideBar />\r\n                    {/* Content Wrapper */}\r\n                    <div id=\"content-wrapper\" className=\"d-flex flex-column\">\r\n                        {/* Main Content */}\r\n                        <div id=\"content\">\r\n                            {/* Topbar */}\r\n                            <nav className=\"navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow\">\r\n                                {/* Topbar Navbar */}\r\n                                <ul className=\"navbar-nav ml-auto\">\r\n                                    {/* Nav Item - Search Dropdown (Visible Only XS) */}\r\n                                    <li className=\"nav-item dropdown no-arrow d-sm-none\">\r\n                                        <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"searchDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                            <i className=\"fas fa-search fa-fw\" />\r\n                                        </a>\r\n                                        {/* Dropdown - Messages */}\r\n                                        <div className=\"dropdown-menu dropdown-menu-right p-3 shadow animated--grow-in\" aria-labelledby=\"searchDropdown\">\r\n                                            <form className=\"form-inline mr-auto w-100 navbar-search\">\r\n                                                <div className=\"input-group\">\r\n                                                    <input type=\"text\" className=\"form-control bg-light border-0 small\" placeholder=\"Search for...\" aria-label=\"Search\" aria-describedby=\"basic-addon2\" />\r\n                                                    <div className=\"input-group-append\">\r\n                                                        <button className=\"btn btn-primary\" type=\"button\">\r\n                                                            <i className=\"fas fa-search fa-sm\" />\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </form>\r\n                                        </div>\r\n                                    </li>\r\n                                    {/* Nav Item - Alerts */}\r\n                                    <Topbar />\r\n                                </ul>\r\n                            </nav>\r\n                            {/* End of Topbar */}\r\n                        \r\n                            {/* Begin Page Content */}\r\n                            <div className=\"container-fluid\">\r\n                                <BlockTable />\r\n                            </div>\r\n                            {/* /.container-fluid */}\r\n                        </div>\r\n                        {/* End of Main Content */}\r\n                        {/* Footer */}\r\n                        <footer className=\"sticky-footer bg-white\">\r\n                            <div className=\"container my-auto\">\r\n                                <div className=\"copyright text-center my-auto\">\r\n                                    <span>Copyright © Your Website 2019</span>\r\n                                </div>\r\n                            </div>\r\n                        </footer>\r\n                        {/* End of Footer */}\r\n                    </div>\r\n                    {/* End of Content Wrapper */}\r\n                </div>\r\n                {/* End of Page Wrapper */}\r\n                {/* Scroll to Top Button */}\r\n                <a className=\"scroll-to-top rounded\" href=\"#page-top\">\r\n                    <i className=\"fas fa-angle-up\" />\r\n                </a>\r\n                {/* Logout Modal */}\r\n                <LogoutModal />\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Index;","import * as ActionTypes from '../constands/ActionType';\r\n\r\nexport const GET_ROOMS = (payload) =>{\r\n    return {\r\n        type: ActionTypes.GET_ROOMS_CONST,\r\n        payload\r\n    };\r\n};","import React, {Component} from 'react';\r\nimport {Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Label, Input} from 'reactstrap';\r\nimport {toast, ToastContainer} from 'react-toastify';\r\nimport Spin from '../../admin/Spin';\r\nimport axios from 'axios';\r\nimport {Tag} from 'antd'; \r\n\r\nexport default class RoomRow extends Component {\r\n\r\n    state = {\r\n        isOpenModal: false,\r\n        isOpenModalDelete: false,\r\n        isLoading: false,\r\n        nameRoom: '',\r\n        maxPeople: null,\r\n        floor : null,\r\n        square: null,\r\n        price: null,\r\n        description: '',\r\n        status: ''\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        });\r\n    }\r\n\r\n    toggle = () =>{\r\n        this.setState({\r\n            isOpenModal : !this.state.isOpenModal\r\n        });\r\n    }\r\n\r\n    onClickEdit = () => {\r\n        this.setState({\r\n            isOpenModal: true,\r\n            nameRoom: this.props.room.nameRoom,\r\n            maxPeople: this.props.room.maxPeople,\r\n            floor : this.props.room.floor,\r\n            square: this.props.room.square,\r\n            price: this.props.room.price,\r\n            description: this.props.room.description,\r\n            status: this.props.room.status\r\n        });\r\n    }\r\n\r\n    onEditing= async () =>{\r\n        this.setState({\r\n            isLoading: true\r\n        });\r\n\r\n        let token = localStorage.getItem('token');\r\n\r\n        const result = await axios({\r\n            url: `https://api-gateway.vmotel.me/go-lang/room/update/${this.props.room.id}?token=${token || ''}`,\r\n            method: 'PUT',\r\n            data: {\r\n                nameRoom: this.state.nameRoom,\r\n                maxPeople: +this.state.maxPeople,\r\n                floor: +this.state.floor,\r\n                square: +this.state.square,\r\n                price: +this.state.price,\r\n                description: this.state.description,\r\n                idBlock: this.props.room.idBlock,\r\n                status: this.props.room.status\r\n            }\r\n        });\r\n\r\n        this.setState({\r\n            isLoading: false\r\n        });\r\n        if (result) {\r\n            if (result.data && result.data.data) {\r\n                toast.success('Chỉnh sửa thông tin phòng thành công !');\r\n\r\n                this.setState({\r\n                    isOpenModal: !this.state.isOpenModal\r\n                });\r\n                this.props.callback(true);\r\n            } else {\r\n\r\n                toast.error('Chỉnh sửa thông tin phòng thất bại !');\r\n            }\r\n        } \r\n    }\r\n\r\n    onDelete = ()=>{\r\n        this.setState({\r\n            isOpenModalDelete : true\r\n        });\r\n    }\r\n\r\n    toggleDelete = () =>{\r\n        this.setState({\r\n            isOpenModalDelete : !this.state.isOpenModalDelete\r\n        });\r\n    }\r\n\r\n    onDeleting = async () =>{\r\n        this.setState({\r\n            isLoading: true\r\n        });\r\n\r\n        let token = localStorage.getItem('token');\r\n        const result = await axios({\r\n            url: `https://api-gateway.vmotel.me/go-lang/room/delete/${this.props.room.id}?token=${token || ''}`,\r\n            method: 'DELETE'\r\n        });\r\n\r\n        if (result) {\r\n            if (result.data && result.data.data) {\r\n                this.setState({\r\n                    isOpenDeleteModal: !this.state.isOpenDeleteModal\r\n                });\r\n                toast.success('Xóa phòng thành công !');\r\n               \r\n                this.props.callback(true);\r\n    \r\n            } else {\r\n\r\n                toast.error('Xóa phòng thất bại !');\r\n            }\r\n        } \r\n\r\n        this.setState({\r\n            isLoading: false\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <tr>\r\n                    <td><Tag color=\"geekblue\">{this.props.room.nameRoom}</Tag></td>\r\n                    <td>{this.props.room.floor}</td>\r\n                    <td>{this.props.room.square}</td>\r\n                    <td>{this.props.room.maxPeople}</td>\r\n                    <td>{this.props.room.price}</td>\r\n                    <td>{this.props.room.description}</td>\r\n                    <td>{\r\n                        this.props.room.status === 0 ? \r\n                            <Tag color=\"green\">Còn trống</Tag> : <Tag color=\"orange\">Đã thuê</Tag>}</td>\r\n                    <td>\r\n                        <button onClick={this.onClickEdit} className=\"btn btn-warning btn-circle mr-3\" title=\"Chỉnh sửa\">\r\n                            <i className=\"fa fa-pencil-square\" aria-hidden=\"true\" />\r\n                        </button>\r\n                        <button onClick={this.onDelete} className=\"btn btn-danger btn-circle\" title=\"Xóa\">\r\n                            <i className=\"fa fa-trash\" aria-hidden=\"true\" />\r\n                        </button>\r\n                    </td>\r\n                </tr>\r\n                <Modal isOpen={this.state.isOpenModal} toggle={this.toggle}>\r\n                    {this.state.isLoading ?  <Spin /> : null}       \r\n                    <ModalHeader toggle={this.toggle}>THÊM PHÒNG</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form>\r\n                            <FormGroup>\r\n                                <Label for=\"nameRoom\">Tên phòng (*)</Label>\r\n                                <Input type=\"text\" name=\"nameRoom\" id=\"nameRoom\" onChange={(e) => this.onChange(e)} value={this.state.nameRoom} />\r\n                                <Label for=\"floor\">Tầng (*) </Label>\r\n                                <Input type=\"number\" name=\"floor\" id=\"floor\" onChange={(e) => this.onChange(e)} value={this.state.floor} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"maxPeople\">Số người tối da (*) </Label>\r\n                                <Input type=\"number\" name=\"maxPeople\" id=\"maxPeople\" onChange={(e) => this.onChange(e)} value={this.state.maxPeople} />\r\n                                <Label for=\"square\">Diện tích (*) </Label>\r\n                                <Input type=\"number\" name=\"square\" id=\"square\" onChange={(e) => this.onChange(e)} value={this.state.square} />\r\n                                <Label for=\"price\">Giá (*)</Label>\r\n                                <Input type=\"number\" name=\"price\" id=\"price\" onChange={(e) => this.onChange(e)} value={this.state.price} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"description\">Mô tả</Label>\r\n                                <Input type=\"textarea\" name=\"description\" id=\"description\" onChange={(e) => this.onChange(e)} value={this.state.description} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleFile\">File</Label>\r\n                                <Input type=\"file\" name=\"file\" id=\"exampleFile\" />\r\n                            </FormGroup>\r\n                        </Form>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button color=\"primary\" onClick={this.onEditing}>Sửa</Button>{' '}\r\n                        <Button color=\"secondary\" onClick={this.toggle}>Hủy</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n                <Modal isOpen={this.state.isOpenModalDelete} toggle={this.toggleDelete}>\r\n                    {this.state.isLoading ?  <Spin /> : null}  \r\n                    <ModalHeader toggle={this.toggleDelete}>THÔNG BÁO</ModalHeader>\r\n                    <ModalBody>\r\n                        Chắc chắn muốn xóa phòng {this.props.room.nameRoom} ?\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button color=\"primary\" onClick={this.onDeleting}>Xóa</Button>{' '}\r\n                        <Button color=\"secondary\" onClick={this.toggleDelete}>Hủy</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n                <ToastContainer />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n","// Libraries\r\nimport React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport {connect} from 'react-redux';\r\nimport {Button} from 'antd';\r\nimport {Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Label, Input} from 'reactstrap';\r\nimport {toast, ToastContainer} from 'react-toastify';\r\n\r\n// Actions\r\nimport {GET_ROOMS} from '../../../actions/RoomAction';\r\n\r\n// Components\r\nimport Spin from '../../admin/Spin';\r\nimport RoomRow from './RoomRow';\r\n\r\nclass RoomTable extends Component {\r\n\r\n    state = {\r\n        rooms : [],\r\n        isOpenModal: false,\r\n        isLoading: false,\r\n        nameRoom: '',\r\n        maxPeople: null,\r\n        floor : null,\r\n        square: null,\r\n        price: null,\r\n        description: '',\r\n        status: ''\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            isOpenModal: !this.state.isOpenModal\r\n        });\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.idBlock !== prevProps.idBlock) {\r\n            this.getRooms();\r\n        }\r\n    }\r\n\r\n    getRooms = async () =>{\r\n        this.setState({\r\n            isLoading: true\r\n        });\r\n\r\n        let token = localStorage.getItem('token');\r\n        const getRooms = await axios({\r\n            url: `https://api-gateway.vmotel.me/go-lang/room/get-rooms?token=${token || ''}&idBlock=${this.props.idBlock}`,\r\n            method: 'GET'\r\n        });\r\n\r\n        if (getRooms) {\r\n            if (getRooms.data && getRooms.data.data) {\r\n                const {rooms = []} = getRooms.data.data;\r\n\r\n                this.setState({\r\n                    rooms\r\n                });\r\n            } \r\n        }\r\n\r\n        this.setState({isLoading: false});\r\n    }\r\n\r\n    onAdding = async () =>{\r\n        this.setState({\r\n            isLoading: true\r\n        });\r\n\r\n        let token = localStorage.getItem('token');\r\n\r\n        const result = await axios({\r\n            url: `https://api-gateway.vmotel.me/go-lang/room/create?token=${token || ''}`,\r\n            method: 'POST',\r\n            data: {\r\n                nameRoom: this.state.nameRoom,\r\n                maxPeople: +this.state.maxPeople,\r\n                floor: +this.state.floor,\r\n                square: +this.state.square,\r\n                price: +this.state.price,\r\n                description: this.state.description,\r\n                idBlock: this.props.idBlock,\r\n                status: 0\r\n            }\r\n        });\r\n\r\n        this.setState({\r\n            isLoading: false\r\n        });\r\n        if (result) {\r\n            if (result.data && result.data.data) {\r\n                toast.success('Thêm phòng thành công !');\r\n\r\n                this.setState({\r\n                    isOpenModal: !this.state.isOpenModal\r\n                });\r\n                this.getRooms();\r\n            } else {\r\n\r\n                toast.error('Thêm phòng thất bại !');\r\n            }\r\n        } \r\n    }\r\n\r\n    addBlockModal = () =>{\r\n        this.setState({\r\n            isOpenModal: true,\r\n            isLoading: false,\r\n            nameRoom: '',\r\n            maxPeople: null,\r\n            floor : null,\r\n            square: null,\r\n            price: null,\r\n            description: '',\r\n            status: ''\r\n        });\r\n    }\r\n\r\n    callBackBlockRow = (value) =>{\r\n        if (value) {\r\n            this.getRooms();\r\n        }\r\n    }\r\n\r\n    callBackRoomRow = value =>{\r\n        if (value) {\r\n            this.getRooms();\r\n        }\r\n    }\r\n\r\n    renderRooms = () => {\r\n        const {rooms = []} = this.state;\r\n\r\n        if (Array.isArray(rooms) && rooms.length > 0) {\r\n            return rooms.map(room => {\r\n                return <React.Fragment key={room.id}>\r\n                    <RoomRow \r\n                        room={room}\r\n                        callback = {this.callBackRoomRow}\r\n                    />\r\n                </React.Fragment>;\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        const {idBlock} = this.props;\r\n\r\n        return (\r\n            <div style={{position: 'relative'}}>   \r\n                {this.state.isLoading ?  <Spin /> : null}       \r\n                <div className=\"card shadow mb-4\">\r\n                    <div className=\"card-header py-3 row\" style = {{display : 'flex', alignItems : 'center', justifyContent : 'space-between'}}>\r\n                        <div className=\"sm-6\">\r\n                            <h6 className=\"m-0 font-weight-bold text-primary\">QUẢN LÝ DANH SÁCH PHÒNG</h6>                          \r\n                        </div>\r\n                        <div>\r\n                            <Button \r\n                                outline color= {idBlock === null ? 'secondary' : 'primary' }\r\n                                onClick = {this.addBlockModal}\r\n                                disabled={idBlock === null ? true : false}\r\n                                title = {idBlock === null ? 'Phải có ít nhất 1 khu trọ để thực hiện thêm phòng' : ''}\r\n                            >Thêm phòng</Button>{' '}                                 \r\n                        </div>\r\n                                   \r\n                    </div>\r\n                    \r\n                    <div className=\"card-body\">\r\n                        <div className=\"table-responsive\">\r\n                            <table className=\"table table-bordered\" id=\"dataTable\" width=\"100%\" cellSpacing={0}>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Tên phòng</th>\r\n                                        <th>Tầng</th>\r\n                                        <th>Diện tích</th>\r\n                                        <th>Số người tối đa</th>\r\n                                        <th>Giá</th>\r\n                                        <th>Mô tả</th>\r\n                                        <th>Trạng thái</th>\r\n                                        <tr />\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {this.renderRooms()}                      \r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>       \r\n                <Modal isOpen={this.state.isOpenModal} toggle={this.toggle}>\r\n                    {this.state.isLoading ?  <Spin /> : null}       \r\n                    <ModalHeader toggle={this.toggle}>THÊM PHÒNG</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form>\r\n                            <FormGroup>\r\n                                <Label for=\"nameRoom\">Tên phòng (*)</Label>\r\n                                <Input type=\"text\" name=\"nameRoom\" id=\"nameRoom\" onChange={(e) => this.onChange(e)} value={this.state.nameRoom} />\r\n                                <Label for=\"floor\">Tầng (*) </Label>\r\n                                <Input type=\"number\" name=\"floor\" id=\"floor\" onChange={(e) => this.onChange(e)} value={this.state.floor} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"maxPeople\">Số người tối da (*) </Label>\r\n                                <Input type=\"number\" name=\"maxPeople\" id=\"maxPeople\" onChange={(e) => this.onChange(e)} value={this.state.maxPeople} />\r\n                                <Label for=\"square\">Diện tích (*) </Label>\r\n                                <Input type=\"number\" name=\"square\" id=\"square\" onChange={(e) => this.onChange(e)} value={this.state.square} />\r\n                                <Label for=\"price\">Giá (*)</Label>\r\n                                <Input type=\"number\" name=\"price\" id=\"price\" onChange={(e) => this.onChange(e)} value={this.state.price} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"description\">Mô tả</Label>\r\n                                <Input type=\"textarea\" name=\"description\" id=\"description\" onChange={(e) => this.onChange(e)} value={this.state.description} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleFile\">File</Label>\r\n                                <Input type=\"file\" name=\"file\" id=\"exampleFile\" />\r\n                            </FormGroup>\r\n                        </Form>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button color=\"primary\" onClick={this.onAdding}>Thêm</Button>{' '}\r\n                        <Button color=\"secondary\" onClick={this.toggle}>Hủy</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n                <ToastContainer />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps =  {\r\n    GET_ROOMS\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        roomsState: state.RoomReducer.rooms\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RoomTable);","import React, {Component} from 'react';\r\nimport '../../../assets/css/sb-admin-2.min.css';\r\nimport '../../../assets/vendor/datatables/dataTables.bootstrap4.min.css';\r\nimport {connect} from 'react-redux';\r\nimport SideBar from '../SideBar';\r\nimport Topbar from '../Topbar';\r\nimport RoomTable from './RoomTable';\r\nimport LogoutModal from '../LogoutModal';\r\nimport {FormGroup, Label, Input} from 'reactstrap';\r\nimport {Container, Row, Col} from 'reactstrap';\r\nimport axios from 'axios';\r\nimport Spin from '../../admin/Spin';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass Index extends Component {\r\n\r\n    state = {\r\n        blocks: [],\r\n        isLoading: false,\r\n        idBlockSelected: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getBlocks();\r\n    }\r\n\r\n    getBlocks = async () =>{\r\n        this.setState({\r\n            isLoading: true\r\n        });\r\n\r\n        let user = JSON.parse(localStorage.getItem('user'));\r\n        let token = localStorage.getItem('token');\r\n        const getBlocks = await axios({\r\n            url: `https://api-gateway.vmotel.me/go-lang/block/get-block?token=${token || ''}&userId=${user ? user.id : ''}`,\r\n            method: 'GET'\r\n        });\r\n        \r\n        if (getBlocks) {\r\n            if (getBlocks.data && getBlocks.data.data) {\r\n                const {blocks = []} = getBlocks.data.data;\r\n\r\n                if (blocks.length > 0) {\r\n                    this.setState({\r\n                        blocks,\r\n                        idBlockSelected: +blocks[0].id,\r\n                        isLoading: false\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        this.setState({\r\n            isLoading: false\r\n        });\r\n    }\r\n\r\n    onClickBlock = (id) => {\r\n        if (id) {\r\n            this.setState({\r\n                idBlockSelected: +id\r\n            });\r\n        }\r\n    }\r\n    \r\n    renderSelectBlock = () =>{\r\n\r\n        if (Array.isArray(this.state.blocks) && this.state.blocks.length > 0) {\r\n            return this.state.blocks.map(block => {\r\n                return <React.Fragment key={block.id}>\r\n                    <option onClick={() => this.onClickBlock(block.id)}>{block.nameBlock}</option>\r\n                </React.Fragment>;\r\n            });\r\n        }\r\n    }\r\n\r\n    onChangeSelected = (e) => {\r\n        const {value} = e.target;\r\n\r\n        if (value) {\r\n            const block = this.state.blocks.find(block => block.nameBlock === value);\r\n\r\n            this.setState({\r\n                idBlockSelected: block.id\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.isLoading ?  <Spin /> : null} \r\n                {/* Page Wrapper */}\r\n                <div id=\"wrapper\">                  \r\n                    <SideBar />\r\n                    {/* Content Wrapper */}\r\n                    <div id=\"content-wrapper\" className=\"d-flex flex-column\">\r\n                        {/* Main Content */}\r\n                        <div id=\"content\">\r\n                            {/* Topbar */}\r\n                            <nav className=\"navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow\">\r\n                                {/* Topbar Navbar */}\r\n                                <ul className=\"navbar-nav ml-auto\">\r\n                                    {/* Nav Item - Search Dropdown (Visible Only XS) */}\r\n                                    <li className=\"nav-item dropdown no-arrow d-sm-none\">\r\n                                        <Link className=\"nav-link dropdown-toggle\" href=\"#\" id=\"searchDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                            <i className=\"fas fa-search fa-fw\" />\r\n                                        </Link>\r\n                                        {/* Dropdown - Messages */}\r\n                                        <div className=\"dropdown-menu dropdown-menu-right p-3 shadow animated--grow-in\" aria-labelledby=\"searchDropdown\">\r\n                                            <form className=\"form-inline mr-auto w-100 navbar-search\">\r\n                                                <div className=\"input-group\">\r\n                                                    <input type=\"text\" className=\"form-control bg-light border-0 small\" placeholder=\"Search for...\" aria-label=\"Search\" aria-describedby=\"basic-addon2\" />\r\n                                                    <div className=\"input-group-append\">\r\n                                                        <button className=\"btn btn-primary\" type=\"button\">\r\n                                                            <i className=\"fas fa-search fa-sm\" />\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </form>\r\n                                        </div>\r\n                                    </li>\r\n                                    {/* Nav Item - Alerts */}                                    \r\n                                    <Topbar />\r\n                                </ul>\r\n                            </nav>\r\n                            {/* End of Topbar */}\r\n                        \r\n                            {/* Begin Page Content */}\r\n                            <div className=\"container-fluid\">\r\n                                <Container>\r\n                                    <Row>\r\n                                        <Col />\r\n                                        <Col xs=\"6\" sm = \"4\">\r\n                                            <FormGroup>\r\n                                                <Label for=\"exampleSelect\">Khu trọ</Label>\r\n                                                <Input onChange={this.onChangeSelected} type=\"select\" name=\"select\" id=\"exampleSelect\">\r\n                                                    {this.renderSelectBlock()}\r\n                                                </Input>\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Container>\r\n                                <RoomTable idBlock={this.state.idBlockSelected} />\r\n                            </div>\r\n                            {/* /.container-fluid */}\r\n                        </div>\r\n                        {/* End of Main Content */}\r\n                        {/* Footer */}\r\n                        <footer className=\"sticky-footer bg-white\">\r\n                            <div className=\"container my-auto\">\r\n                                <div className=\"copyright text-center my-auto\">\r\n                                    <span>Copyright © Your Website 2019</span>\r\n                                </div>\r\n                            </div>\r\n                        </footer>\r\n                        {/* End of Footer */}\r\n                    </div>\r\n                    {/* End of Content Wrapper */}\r\n                </div>\r\n                {/* End of Page Wrapper */}\r\n                {/* Scroll to Top Button */}\r\n                <a className=\"scroll-to-top rounded\" href=\"#page-top\">\r\n                    <i className=\"fas fa-angle-up\" />\r\n                </a>\r\n                {/* Logout Modal */}\r\n                <LogoutModal />\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state=> {\r\n    return {\r\n        blocksState: state.BlockReducer.blocks\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(Index);","import React, {Component} from 'react';\r\nimport {Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Label, Input} from 'reactstrap';\r\nimport {toast, ToastContainer} from 'react-toastify';\r\nimport Spin from '../../admin/Spin';\r\nimport axios from 'axios';\r\n\r\nexport default class ServiceRow extends Component {\r\n\r\n    state = {\r\n        isOpenModal: false,\r\n        isOpenModalDelete: false,\r\n        isLoading: false,\r\n        nameService: '',\r\n        price: null,\r\n        description: '',\r\n        nameUnit: '',\r\n        selectIdUnit: null,\r\n        units: []\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        });\r\n    }\r\n\r\n    toggle = () =>{\r\n        this.setState({\r\n            isOpenModal : !this.state.isOpenModal\r\n        });\r\n    }\r\n\r\n    onGetUnit = async () =>{\r\n        this.setState({\r\n            isLoading: true\r\n        });\r\n\r\n        let token = localStorage.getItem('token');\r\n\r\n        const result = await axios({\r\n            url: `https://api-gateway.vmotel.me/go-lang/unit/get-units?token=${token || ''}`,\r\n            method: 'GET'\r\n        });\r\n\r\n        this.setState({\r\n            isLoading: false\r\n        });\r\n        if (result) {\r\n            if (result.data && result.data.data) {\r\n                this.setState({\r\n                    units : result.data.data.units\r\n                });\r\n            } \r\n        } \r\n    }\r\n\r\n    onChangeSelected = (e) => {\r\n        const {value} = e.target;\r\n\r\n        if (value) {\r\n            const unit = this.state.units.find(unit => unit.name === value);\r\n\r\n            this.setState({\r\n                selectIdUnit: unit.id,\r\n                nameUnit: value\r\n            });\r\n        }\r\n    }\r\n\r\n    onClickEdit = () => {\r\n        this.onGetUnit();\r\n        this.setState({\r\n            isOpenModal: true,\r\n            nameService: this.props.service.nameService,\r\n            price: this.props.service.price,\r\n            idUnit : this.props.service.idUnit,\r\n            description: this.props.service.description,\r\n            nameUnit: this.props.service.nameUnit\r\n        });\r\n\r\n    }\r\n\r\n    onEditing= async () =>{\r\n        this.setState({\r\n            isLoading: true\r\n        });\r\n\r\n        let token = localStorage.getItem('token');\r\n\r\n        const result = await axios({\r\n            url: `https://api-gateway.vmotel.me/go-lang/service/update/${this.props.service.id}?token=${token || ''}`,\r\n            method: 'PUT',\r\n            data: {\r\n                description: this.state.description,               \r\n                price: +this.state.price,\r\n                idUnit: +this.state.idUnit,\r\n                id : +this.props.service.id\r\n            }\r\n        });\r\n\r\n        this.setState({\r\n            isLoading: false\r\n        });\r\n        if (result) {\r\n            if (result.data && result.data.data) {\r\n                toast.success('Chỉnh sửa dịch vụ thành công !');\r\n\r\n                this.setState({\r\n                    isOpenModal: !this.state.isOpenModal\r\n                });\r\n                this.props.callback(true);\r\n            } else {\r\n\r\n                toast.error('Chỉnh sửa dịch vụ thất bại !');\r\n            }\r\n        } \r\n    }\r\n\r\n    onDelete = ()=>{\r\n        this.setState({\r\n            isOpenModalDelete : true\r\n        });\r\n    }\r\n\r\n    toggleDelete = () =>{\r\n        this.setState({\r\n            isOpenModalDelete : !this.state.isOpenModalDelete\r\n        });\r\n    }\r\n\r\n    onDeleting = async () =>{\r\n        this.setState({\r\n            isLoading: true\r\n        });\r\n\r\n        let token = localStorage.getItem('token');\r\n        const result = await axios({\r\n            url: `https://api-gateway.vmotel.me/go-lang/service/delete/${this.props.service.id}?token=${token || ''}`,\r\n            method: 'DELETE'\r\n        });\r\n\r\n        if (result) {\r\n            if (result.data && result.data.data) {\r\n                toast.success('Xóa dịch vụ thành công !');\r\n               \r\n                this.setState({isOpenModalDelete: false});\r\n                \r\n                this.props.callback(true);\r\n    \r\n            } else {\r\n\r\n                toast.error('Xóa dịch vụ thất bại !');\r\n            }\r\n        } \r\n\r\n        this.setState({\r\n            isLoading: false\r\n        });\r\n    }\r\n\r\n    onClickUnit = id =>{\r\n        this.setState({\r\n            selectIdUnit : +id\r\n        });\r\n    }\r\n\r\n    renderUnits = () =>{\r\n\r\n        if (Array.isArray(this.state.units) && this.state.units.length > 0) {\r\n            return this.state.units.map(unit => {\r\n                return <React.Fragment key={unit.id}>\r\n                    <option \r\n                        onClick={() => this.onClickUnit(unit.id)}   \r\n                        // value = {this.state.nameUnit}                   \r\n                    >{unit.name}\r\n                    </option>\r\n                </React.Fragment>;\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <tr>\r\n                    <td>{this.props.service.nameService}</td>\r\n                    <td>{this.props.service.price}</td>\r\n                    <td>{this.props.service.nameUnit}</td>\r\n                    <td>{this.props.service.description}</td>\r\n                    <td>\r\n                        <button onClick={this.onClickEdit} className=\"btn btn-warning btn-circle mr-3\" title=\"Chỉnh sửa\">\r\n                            <i className=\"fa fa-pencil-square\" aria-hidden=\"true\" />\r\n                        </button>\r\n                        <button onClick={this.onDelete} className=\"btn btn-danger btn-circle\" title=\"Xóa\">\r\n                            <i className=\"fa fa-trash\" aria-hidden=\"true\" />\r\n                        </button>\r\n                    </td>\r\n                </tr>\r\n                <Modal isOpen={this.state.isOpenModal} toggle={this.toggle}>\r\n                    {this.state.isLoading ?  <Spin /> : null}       \r\n                    <ModalHeader toggle={this.toggle}>CHỈNH SỬA DỊCH VỤ</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form>\r\n                            <FormGroup>\r\n                                <Label for=\"nameBlock\">Tên phòng khu trọ/ căn hộ: </Label>\r\n                                <Input type=\"text\" name=\"nameBlock\" id=\"nameBlock\" disabled value={this.props.block.nameBlock} />\r\n                                <Label for=\"nameService\">Tên dịch vụ: </Label>\r\n                                <Input type=\"text\" name=\"nameService\" id=\"nameService\" disabled onChange={(e) => this.onChange(e)} value={this.state.nameService} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"description\">Mô tả</Label>\r\n                                <Input type=\"textarea\" name=\"description\" id=\"description\" onChange={(e) => this.onChange(e)} value={this.state.description} />\r\n                                <Label for=\"price\">Đơn giá (*) </Label>\r\n                                <Input type=\"number\" name=\"price\" id=\"price\" onChange={(e) => this.onChange(e)} value={this.state.price} />                  \r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleSelect\">Đơn vị</Label>\r\n                                <Input onChange={this.onChangeSelected} type=\"select\" name=\"select\" value={this.state.nameUnit} id=\"exampleSelect\">\r\n                                    {this.renderUnits()}\r\n                                </Input>\r\n                            </FormGroup>\r\n                        </Form>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button color=\"primary\" onClick={this.onEditing}>Sửa</Button>{' '}\r\n                        <Button color=\"secondary\" onClick={this.toggle}>Hủy</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n                <Modal isOpen={this.state.isOpenModalDelete} toggle={this.toggleDelete}>\r\n                    {this.state.isLoading ?  <Spin /> : null}  \r\n                    <ModalHeader toggle={this.toggleDelete}>THÔNG BÁO</ModalHeader>\r\n                    <ModalBody>\r\n                        Chắc chắn muốn xóa dịch vụ {this.props.service.nameService} ?\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button color=\"primary\" onClick={this.onDeleting}>Xóa</Button>{' '}\r\n                        <Button color=\"secondary\" onClick={this.toggleDelete}>Hủy</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n                <ToastContainer />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n","// Libraries\r\nimport React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport {connect} from 'react-redux';\r\nimport {Modal, ModalHeader, ModalBody} from 'reactstrap';\r\nimport {toast, ToastContainer} from 'react-toastify';\r\nimport {Form, Button, Checkbox, Row, Col, Divider} from 'antd';\r\n\r\n// Actions\r\nimport {GET_ROOMS} from '../../../actions/RoomAction';\r\n\r\n// Components\r\nimport Spin from '../../admin/Spin';\r\nimport ServiceRow from './ServiceRow';\r\n\r\nconst layout = {\r\n    labelCol: {\r\n        span: 24\r\n    },\r\n    wrapperCol: {\r\n        span: 24\r\n    }\r\n};\r\n\r\nclass ServiceTable extends Component {\r\n    formRef = React.createRef();\r\n\r\n    state = {\r\n        services: [],\r\n        defaultServices: [],\r\n        isOpenModal: false,\r\n        isLoading: false,\r\n        isLoadingForm: false,\r\n        units: []\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            isOpenModal: !this.state.isOpenModal\r\n        });\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.idBlock !== prevProps.idBlock) {\r\n            this.getServices();\r\n\r\n            this.getDefaultServices();\r\n        }\r\n    }\r\n\r\n    onGetUnit = async () =>{\r\n        this.setState({\r\n            isLoading: true\r\n        });\r\n\r\n        let token = localStorage.getItem('token');\r\n\r\n        const result = await axios({\r\n            url: `https://api-gateway.vmotel.me/go-lang/unit/get-units?token=${token || ''}`,\r\n            method: 'GET'\r\n        });\r\n\r\n        this.setState({\r\n            isLoading: false\r\n        });\r\n        if (result) {\r\n            if (result.data && result.data.data) {\r\n                this.setState({\r\n                    units : result.data.data.units\r\n                });\r\n            } \r\n        } \r\n    }\r\n\r\n    getServices = async () =>{\r\n        this.setState({\r\n            isLoadingForm: true\r\n        });\r\n\r\n        let token = localStorage.getItem('token');\r\n        const getServices = await axios({\r\n            url: `https://api-gateway.vmotel.me/go-lang/service/get-services?token=${token || ''}&idBlock=${this.props.idBlock}`,\r\n            method: 'GET'\r\n        });\r\n\r\n        if (getServices) {\r\n            if (getServices.data && getServices.data.data) {\r\n                const {services = []} = getServices.data.data;\r\n\r\n                this.setState({\r\n                    services\r\n                });\r\n            } \r\n        }\r\n\r\n        this.setState({isLoadingForm: false});\r\n    }\r\n\r\n    getDefaultServices = async () =>{\r\n        this.setState({\r\n            isLoading: true\r\n        });\r\n\r\n        let token = localStorage.getItem('token');\r\n        const getDefaultServices = await axios({\r\n            url: `https://api-gateway.vmotel.me/go-lang/default-service/get-default-services?token=${token || ''}`,\r\n            method: 'GET'\r\n        });\r\n\r\n        if (getDefaultServices) {\r\n            if (getDefaultServices.data && getDefaultServices.data.data) {\r\n                const {defaultServices = []} = getDefaultServices.data.data;\r\n\r\n                this.setState({\r\n                    defaultServices\r\n                });\r\n            } \r\n        }\r\n        this.setState({isLoading: false});\r\n    }\r\n\r\n    addServiceModal = () =>{\r\n        this.setState({\r\n            isOpenModal: true,\r\n            isLoading: false\r\n        });\r\n    }\r\n\r\n    callBackServiceRow = (value) =>{\r\n        if (value) {\r\n            this.getServices();\r\n        }\r\n    }\r\n\r\n    callBackRoomRow = value =>{\r\n        if (value) {\r\n            this.getServices();\r\n        }\r\n    }\r\n\r\n    renderService = () => {\r\n        const {services = []} = this.state;\r\n\r\n        if (Array.isArray(services) && services.length > 0) {\r\n            return services.map(service => {\r\n                return <React.Fragment key={service.id}>\r\n                    <ServiceRow \r\n                        service={service}\r\n                        callback = {this.callBackServiceRow}\r\n                        block= {this.props.block}\r\n                    />\r\n                </React.Fragment>;\r\n            });\r\n        }\r\n    }\r\n\r\n    renderDefaultServices = () => {\r\n        const newServices = this.state.defaultServices.filter(service => {\r\n            if (this.state.services)\r\n            {\r\n                if (!this.state.services.some(bservice => bservice.nameService === service.nameService)) {\r\n                    return service;\r\n                }\r\n            }\r\n        });\r\n\r\n        return <Checkbox.Group style={{width: '100%'}}>\r\n            <Row>\r\n                {\r\n                    newServices.length > 0 ?\r\n                        newServices.map(service => {\r\n                            return (\r\n                                <Col span={8} key={service.id}>\r\n                                    <Checkbox value={service.id} style={{lineHeight: '32px'}}>\r\n                                        {service.nameService}\r\n                                    </Checkbox>\r\n                                </Col>\r\n                            );\r\n                        }) : 'Không có dịch vụ nào hiện tại'\r\n                }\r\n            </Row>\r\n        </Checkbox.Group>;\r\n    }\r\n\r\n    onFinish = (value) => {\r\n        const {services = []} = value;\r\n\r\n        if (services.length > 0 ) {\r\n            const newServices = this.state.defaultServices.filter(dService =>(services.some(service => service === dService.id))).map(dService => ({\r\n                nameService: dService.nameService,\r\n                price: dService.price,\r\n                idUnit: dService.idUnit,\r\n                description: dService.description,\r\n                idBlock: this.props.block.id\r\n            }));\r\n\r\n            this.createServices(newServices);\r\n        }\r\n    }\r\n\r\n    createServices = async (services) => {\r\n        let token = localStorage.getItem('token');\r\n\r\n        this.setState({\r\n            isLoading: true\r\n        });\r\n\r\n        const create = await axios({\r\n            method: 'POST',\r\n            url: `https://api-gateway.vmotel.me/go-lang/service/create?token=${token || ''}`,\r\n            data: {\r\n                services\r\n            }\r\n        });\r\n\r\n        if (create) {\r\n            if (create.data && create.data) {\r\n                toast.success('Thêm dịch vụ thành công !');\r\n\r\n                this.setState({\r\n                    isOpenModal: !this.state.isOpenModal\r\n                });\r\n\r\n                this.getServices();\r\n            } else {\r\n                toast.error('Thêm dịch vụ thất bại !');\r\n            }\r\n        }\r\n\r\n        this.setState({isLoading: false});\r\n    }\r\n\r\n    render() {\r\n        const {idBlock} = this.props;\r\n\r\n        return (\r\n            <div style={{position: 'relative'}}>   \r\n                {this.state.isLoadingForm ?  <Spin /> : null}       \r\n                <div className=\"card shadow mb-4\">\r\n                    <div className=\"card-header py-3 row\" style = {{display : 'flex', alignItems : 'center', justifyContent : 'space-between'}}>\r\n                        <div className=\"sm-6\">\r\n                            <h6 className=\"m-0 font-weight-bold text-primary\">QUẢN LÝ DANH SÁCH DỊCH VỤ</h6>                          \r\n                        </div>\r\n                        <div>\r\n                            <Button \r\n                                outline color= {idBlock === null ? 'secondary' : 'primary' }\r\n                                disabled={idBlock === null ? true : false}\r\n                                title = {idBlock === null ? 'Phải có ít nhất 1 khu trọ để thực hiện thêm dịch vụ' : ''}\r\n                                onClick = {this.addServiceModal}\r\n                            >Thêm dịch vụ</Button>{' '}                                 \r\n                        </div>\r\n                                   \r\n                    </div>\r\n                    \r\n                    <div className=\"card-body\">\r\n                        <div className=\"table-responsive\">\r\n                            <table className=\"table table-bordered\" id=\"dataTable\" width=\"100%\" cellSpacing={0}>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Tên dịch vụ</th>\r\n                                        <th>Đơn giá</th>\r\n                                        <th>Đơn vị</th>\r\n                                        <th>Mô tả</th>\r\n\r\n                                        <tr />\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {this.renderService()}                      \r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>       \r\n                <Modal isOpen={this.state.isOpenModal} toggle={this.toggle}>\r\n                    {this.state.isLoading ?  <Spin /> : null}       \r\n                    <ModalHeader toggle={this.toggle}>THÊM DỊCH VỤ</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form {...layout} ref={this.formRef} onFinish={this.onFinish}>\r\n                            <Form.Item\r\n                                name=\"nameBlock\"\r\n                                label=\"Khu trọ/căn hộ\"\r\n                            >\r\n                                <strong>{this.props.block && this.props.block.nameBlock}</strong>\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name=\"services\"\r\n                                label=\"Dịch vụ\"\r\n                            >\r\n                                {this.renderDefaultServices()}\r\n                            </Form.Item>\r\n                            <Divider />\r\n                            <Form.Item\r\n                                wrapperCol={{\r\n                                    md: {span: 8, offset: 16}\r\n                                }}\r\n                            >\r\n                                <Button htmlType='submit' type='primary' >Thêm</Button>{' '}\r\n                                <Button  onClick={this.toggle}>Hủy</Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n                <ToastContainer />\r\n            </div>\r\n        \r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps =  {\r\n    GET_ROOMS\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        roomsState: state.RoomReducer.rooms\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ServiceTable);","import React, {Component} from 'react';\r\nimport '../../../assets/css/sb-admin-2.min.css';\r\nimport '../../../assets/vendor/datatables/dataTables.bootstrap4.min.css';\r\nimport {connect} from 'react-redux';\r\nimport SideBar from '../SideBar';\r\nimport Topbar from '../Topbar';\r\nimport ServiceTable from './ServiceTable';\r\nimport LogoutModal from '../LogoutModal';\r\nimport {FormGroup, Label, Input} from 'reactstrap';\r\nimport {Container, Row, Col} from 'reactstrap';\r\nimport axios from 'axios';\r\nimport Spin from '../../admin/Spin';\r\n\r\nclass Index extends Component {\r\n\r\n    state = {\r\n        blocks: [],\r\n        isLoading: false,\r\n        idBlockSelected: null,\r\n        block: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getBlocks();\r\n    }\r\n\r\n    getBlocks = async () =>{\r\n        this.setState({\r\n            isLoading: true\r\n        });\r\n\r\n        let user = JSON.parse(localStorage.getItem('user'));\r\n        let token = localStorage.getItem('token');\r\n        const getBlocks = await axios({\r\n            url: `https://api-gateway.vmotel.me/go-lang/block/get-block?token=${token || ''}&userId=${user ? user.id : ''}`,\r\n            method: 'GET'\r\n        });\r\n        \r\n        if (getBlocks) {\r\n            if (getBlocks.data && getBlocks.data.data) {\r\n                const {blocks = []} = getBlocks.data.data;\r\n                \r\n                if (blocks.length > 0) {\r\n                    this.setState({\r\n                        blocks,\r\n                        idBlockSelected: +blocks[0].id,\r\n                        isLoading: false,\r\n                        block: blocks[0]\r\n                    });\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            isLoading: false\r\n        });\r\n    }\r\n\r\n    onClickBlock = (id) => {\r\n        if (id) {\r\n            this.setState({\r\n                idBlockSelected: +id\r\n            });\r\n        }\r\n    }\r\n    \r\n    renderSelectBlock = () =>{\r\n\r\n        if (Array.isArray(this.state.blocks) && this.state.blocks.length > 0) {\r\n            return this.state.blocks.map(block => {\r\n                return <React.Fragment key={block.id}>\r\n                    <option onClick={() => this.onClickBlock(block.id)}>{block.nameBlock}</option>\r\n                </React.Fragment>;\r\n            });\r\n        }\r\n    }\r\n\r\n    onChangeSelected = (e) => {\r\n        const {value} = e.target;\r\n\r\n        if (value) {\r\n            const block = this.state.blocks.find(block => block.nameBlock === value);\r\n\r\n            this.setState({\r\n                idBlockSelected: block.id,\r\n                block\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.isLoading ?  <Spin /> : null} \r\n                {/* Page Wrapper */}\r\n                <div id=\"wrapper\">                  \r\n                    <SideBar />\r\n                    {/* Content Wrapper */}\r\n                    <div id=\"content-wrapper\" className=\"d-flex flex-column\">\r\n                        {/* Main Content */}\r\n                        <div id=\"content\">\r\n                            {/* Topbar */}\r\n                            <nav className=\"navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow\">\r\n                                {/* Topbar Navbar */}\r\n                                <ul className=\"navbar-nav ml-auto\">\r\n                                    {/* Nav Item - Search Dropdown (Visible Only XS) */}\r\n                                    <li className=\"nav-item dropdown no-arrow d-sm-none\">\r\n                                        <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"searchDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                            <i className=\"fas fa-search fa-fw\" />\r\n                                        </a>\r\n                                        {/* Dropdown - Messages */}\r\n                                        <div className=\"dropdown-menu dropdown-menu-right p-3 shadow animated--grow-in\" aria-labelledby=\"searchDropdown\">\r\n                                            <form className=\"form-inline mr-auto w-100 navbar-search\">\r\n                                                <div className=\"input-group\">\r\n                                                    <input type=\"text\" className=\"form-control bg-light border-0 small\" placeholder=\"Search for...\" aria-label=\"Search\" aria-describedby=\"basic-addon2\" />\r\n                                                    <div className=\"input-group-append\">\r\n                                                        <button className=\"btn btn-primary\" type=\"button\">\r\n                                                            <i className=\"fas fa-search fa-sm\" />\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </form>\r\n                                        </div>\r\n                                    </li>\r\n                                    {/* Nav Item - Alerts */}                                    \r\n                                    <Topbar />\r\n                                </ul>\r\n                            </nav>\r\n                            {/* End of Topbar */}\r\n                        \r\n                            {/* Begin Page Content */}\r\n                            <div className=\"container-fluid\">\r\n                                <Container>\r\n                                    <Row>\r\n                                        <Col />\r\n                                        <Col xs=\"6\" sm = \"4\">\r\n                                            <FormGroup>\r\n                                                <Label for=\"exampleSelect\">Khu trọ</Label>\r\n                                                <Input onChange={this.onChangeSelected} type=\"select\" name=\"select\" id=\"exampleSelect\">\r\n                                                    {this.renderSelectBlock()}\r\n                                                </Input>\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Container>\r\n                                <ServiceTable idBlock={this.state.idBlockSelected} block= {this.state.block} />\r\n                            </div>\r\n                            {/* /.container-fluid */}\r\n                        </div>\r\n                        {/* End of Main Content */}\r\n                        {/* Footer */}\r\n                        <footer className=\"sticky-footer bg-white\">\r\n                            <div className=\"container my-auto\">\r\n                                <div className=\"copyright text-center my-auto\">\r\n                                    <span>Copyright © Your Website 2019</span>\r\n                                </div>\r\n                            </div>\r\n                        </footer>\r\n                        {/* End of Footer */}\r\n                    </div>\r\n                    {/* End of Content Wrapper */}\r\n                </div>\r\n                {/* End of Page Wrapper */}\r\n                {/* Scroll to Top Button */}\r\n                <a className=\"scroll-to-top rounded\" href=\"#page-top\">\r\n                    <i className=\"fas fa-angle-up\" />\r\n                </a>\r\n                {/* Logout Modal */}\r\n                <LogoutModal />\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state=> {\r\n    return {\r\n        blocksState: state.BlockReducer.blocks\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(Index);","import React, {Component} from 'react';\r\nimport {Form, Input, Radio , Button, Checkbox, Row, Col, Divider, DatePicker, Tag, message} from 'antd';\r\nimport {Modal, ModalHeader, ModalBody, ModalFooter} from 'reactstrap';\r\nimport axios from 'axios';\r\nimport Spin from '../../admin/Spin';\r\nimport {toast, ToastContainer} from 'react-toastify';\r\nimport moment from 'moment';\r\n\r\nconst {TextArea} = Input;\r\n\r\nconst layout = {\r\n    labelCol: {\r\n        span: 24\r\n    },\r\n    wrapperCol: {\r\n        span: 24\r\n    }\r\n};\r\n\r\nconst formItemLayout = {\r\n    labelCol: {span: 6},\r\n    wrapperCol: {span: 18}\r\n};\r\n\r\nexport default class CustomerRow extends Component {\r\n    formRef = React.createRef();\r\n\r\n    state = {\r\n        customers: [],\r\n        isOpenModal: false,\r\n        isOpenDeleteModal: false,\r\n        isLoading: false,\r\n        isLoadingForm: false,\r\n        loading: false,\r\n        tempReg : false\r\n    }\r\n\r\n    onChangeTempReg = () =>{\r\n        this.setState({\r\n            tempReg: !this.state.tempReg\r\n        });\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            isOpenModal: !this.state.isOpenModal\r\n        });\r\n    }\r\n\r\n    onClickEdit = () => {\r\n        this.setState({\r\n            isOpenModal: true,\r\n            tempReg : this.props.customer.tempReg\r\n        });\r\n    }\r\n\r\n    toggleDelete = () =>{\r\n        this.setState({\r\n            isOpenDeleteModal: !this.state.isOpenDeleteModal\r\n        });\r\n    }\r\n\r\n    onClickDelete = () => {\r\n        this.setState({\r\n            isOpenDeleteModal: true\r\n        });\r\n    }\r\n\r\n    onDeleting = async () =>{\r\n        this.setState({\r\n            isLoading: true\r\n        });\r\n\r\n        let token = localStorage.getItem('token');\r\n        const result = await axios({\r\n            url: `https://api-gateway.vmotel.me/go-lang/customer/delete/${this.props.customer.id}?token=${token || ''}`,\r\n            method: 'DELETE'\r\n        });\r\n\r\n        this.setState({\r\n            isLoading: false\r\n        });\r\n\r\n        if (result) {\r\n            if (result.data && result.data.data) {\r\n                toast.success('Xóa khách hàng thành công !');\r\n               \r\n                this.props.callback(true);\r\n\r\n                this.setState({\r\n                    isOpenDeleteModal: !this.state.isOpenDeleteModal\r\n                });\r\n            } else {\r\n\r\n                toast.error('Xóa khách hàng thất bại !');\r\n            }\r\n        } \r\n    }\r\n\r\n    onFinish = async (value) => {\r\n        let user = JSON.parse(localStorage.getItem('user'));\r\n        let token = localStorage.getItem('token');\r\n\r\n        this.setState({\r\n            isLoading: true\r\n        });\r\n\r\n        const result = await axios({\r\n            url: `https://api-gateway.vmotel.me/go-lang/customer/update/${this.props.customer.id}?token=${token || ''}&userId=${user.id}`,\r\n            method: 'PUT',\r\n            data: {\r\n                id : this.props.customer.id,\r\n                fullName : value.fullName,\r\n                phoneNumber : value.phoneNumber,\r\n                dateBirth : moment(value.dateBirth).format('YYYY-MM-DD'),\r\n                email : value.email ? value.email : '',\r\n                job : value.job,\r\n                workPlace: value.workPlace ? value.workPlace : '',\r\n                sex : value.sex,\r\n                tempReg: this.state.tempReg ? 1 : 0,\r\n                note : value.note ? value.note : '',\r\n                avatar: '',\r\n                identifyBack: '',\r\n                identifyFront: ''\r\n            }\r\n        });\r\n\r\n        this.setState({\r\n            isLoading: false\r\n        });\r\n\r\n        if (result) {\r\n            if (result.data && result.data.data) {\r\n                toast.success('Cập nhật khách hàng thành công !');\r\n\r\n                this.setState({\r\n                    isOpenModal: !this.state.isOpenModal\r\n                });\r\n                this.props.callback(true);\r\n            } else {\r\n\r\n                toast.error('Cập nhật khách hàng thất bại !');\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {customer} = this.props;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <tr>\r\n                    <td>{customer.fullName}</td>\r\n                    <td>{customer.phoneNumber}</td>\r\n                    <td>{customer.rooms && customer.rooms.length == 0 ? <Tag color=\"green\">Chưa thuê</Tag> : <Tag color=\"orange\">Đã thuê</Tag>}</td>\r\n                    <td>{customer.rooms ? customer.rooms[0].roomName : ''}</td>\r\n                    <td>\r\n                        <button onClick={this.onClickEdit} className=\"btn btn-warning btn-circle mr-3\" title=\"Chỉnh sửa\">\r\n                            <i className=\"fa fa-pencil-square\" aria-hidden=\"true\" />\r\n                        </button>\r\n                        <button onClick={this.onClickDelete} className=\"btn btn-danger btn-circle\" title=\"Xóa\">\r\n                            <i className=\"fa fa-trash\" aria-hidden=\"true\" />\r\n                        </button>\r\n                    </td>\r\n                </tr>\r\n\r\n                <Modal isOpen={this.state.isOpenModal} toggle={this.toggle}>\r\n                    {this.state.isLoading ?  <Spin /> : null}       \r\n                    <ModalHeader toggle={this.toggle}>CHỈNH SỬA THÔNG TIN KHÁCH HÀNG</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form \r\n                            {...layout} \r\n                            initialValues={{\r\n                                sex: this.props.customer.sex,\r\n                                job: this.props.customer.job,\r\n                                fullName: this.props.customer.fullName,\r\n                                email: this.props.customer.email,\r\n                                phoneNumber : this.props.customer.phoneNumber,\r\n                                workPlace : this.props.customer.workPlace,\r\n                                dateBirth : moment(this.props.customer.dateBirth),\r\n                                note : this.props.customer.note\r\n                            }} \r\n                            ref={this.formRef} onFinish={this.onFinish}>\r\n                            <Form.Item\r\n                                name=\"nameBlock\"\r\n                                label=\"Khu trọ/căn hộ\"\r\n                            >\r\n                                <strong>{this.props.block && this.props.block.nameBlock}</strong>\r\n                            </Form.Item>\r\n                            <Divider />\r\n                            <Form.Item\r\n                                {...formItemLayout}\r\n                                name=\"fullName\"\r\n                                label=\"Tên khách hàng:\"\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Hãy nhập tên khách hàng'\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <Input placeholder=\"Hãy nhập tên khách hàng\" />\r\n                            </Form.Item>\r\n                            <Form.Item \r\n                                {...formItemLayout}\r\n                                name=\"email\"\r\n                                label=\"Email\" \r\n                                rules={[{type: 'email'}]}>\r\n                                <Input placeholder=\"abc@gmail.com\" />\r\n                            </Form.Item>\r\n\r\n                            <Row>\r\n                                <Col span={24}>\r\n                                    <Form.Item >\r\n                                        <Form.Item \r\n                                            {...formItemLayout}\r\n                                            name = 'phoneNumber'\r\n                                            label=\"Số diện thoại\"\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: 'Hãy nhập số điện thoại'\r\n                                                }\r\n                                            ]}\r\n                                        >\r\n                                            <Input placeholder= '0xxx' />\r\n                                        </Form.Item>\r\n                                        <Form.Item \r\n                                            name=\"dateBirth\" \r\n                                            label=\"Ngày sinh\" \r\n                                            {...formItemLayout}\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: 'Hãy chọn ngày sinh'\r\n                                                }\r\n                                            ]}\r\n                                        >\r\n                                            <DatePicker />\r\n                                        </Form.Item>\r\n                                        <Form.Item \r\n                                            name=\"job\" \r\n                                            label=\"Nghề nghiệp\" \r\n                                            {...formItemLayout}\r\n                                        >\r\n                                            <Radio.Group onChange={this.onChange} value={this.state.job}>\r\n                                                <Radio value={'Sinh viên'}>Sinh Viên</Radio>\r\n                                                <Radio value={'Người đi làm'}>Người đi làm</Radio>\r\n                                            </Radio.Group>\r\n                                        </Form.Item>\r\n\r\n                                        <Form.Item \r\n                                            {...formItemLayout}\r\n                                            name = 'workPlace'\r\n                                            label=\"Nơi công tác\"\r\n                                        >\r\n                                            <Input />\r\n                                        </Form.Item>\r\n\r\n                                        <Form.Item \r\n                                            name=\"sex\" \r\n                                            label=\"Giới tính\" \r\n                                            {...formItemLayout}\r\n                                        >\r\n                                            <Radio.Group onChange={this.onChange}>\r\n                                                <Radio value={'Nam'}>Nam</Radio>\r\n                                                <Radio value={'Nữ'}>Nữ</Radio>\r\n                                                <Radio value={'Khác'}>Khác</Radio>\r\n                                            </Radio.Group>\r\n                                        </Form.Item>\r\n\r\n                                        <Form.Item \r\n                                            {...formItemLayout}\r\n                                            name = 'tempRegBool'\r\n                                            label=\"Đăng ký tạm trú\"\r\n                                        >\r\n                                            <Checkbox checked={this.state.tempReg} onChange={this.onChangeTempReg}>Đăng ký</Checkbox>\r\n                                        </Form.Item>\r\n\r\n                                        <Form.Item \r\n                                            {...formItemLayout}\r\n                                            name = 'note'\r\n                                            label=\"Ghi chú\"\r\n                                        >\r\n                                            <TextArea placeholder=\"textarea with clear icon\" allowClear onChange={this.onChange} />\r\n                                        </Form.Item>\r\n\r\n                                    </Form.Item>\r\n                                    \r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Form.Item\r\n                                wrapperCol={{\r\n                                    md: {span: 8, offset: 16}\r\n                                }}\r\n                            >\r\n                                <Button htmlType='submit' type='primary' >Cập nhật</Button>{' '}\r\n                                <Button  onClick={this.toggle}>Hủy</Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n                <Modal isOpen={this.state.isOpenDeleteModal} toggle={this.toggle}>\r\n                    {this.state.isLoading ?  <Spin /> : null}  \r\n                    <ModalHeader toggle={this.toggle}>THÔNG BÁO</ModalHeader>\r\n                    <ModalBody>\r\n                        Chắc chắn muốn xóa khách hàng {this.props.customer.fullName} ?\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button type=\"primary\" onClick={this.onDeleting}>Xóa</Button>{' '}\r\n                        <Button type=\"secondary\" onClick={this.toggleDelete}>Hủy</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n                <ToastContainer />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport {Modal, ModalHeader, ModalBody} from 'reactstrap';\r\nimport {toast, ToastContainer} from 'react-toastify';\r\nimport {Form, Input, Radio , Button, Checkbox, Row, Col, Divider, DatePicker, Upload, message} from 'antd';\r\nimport {LoadingOutlined, PlusOutlined} from '@ant-design/icons';\r\nimport moment from 'moment';\r\n\r\n// Components\r\nimport Spin from '../../admin/Spin';\r\nimport CustomerRow from './CustomerRow';\r\n\r\nconst {TextArea} = Input;\r\n\r\nconst layout = {\r\n    labelCol: {\r\n        span: 24\r\n    },\r\n    wrapperCol: {\r\n        span: 24\r\n    }\r\n};\r\n\r\nconst formItemLayout = {\r\n    labelCol: {span: 6},\r\n    wrapperCol: {span: 18}\r\n};\r\n\r\nconst formItem1P2Layout = {\r\n    labelCol: {span: 6},\r\n    wrapperCol: {span: 6}\r\n};\r\n\r\nfunction getBase64(img, callback) {\r\n    const reader = new FileReader();\r\n\r\n    reader.addEventListener('load', () => callback(reader.result));\r\n    reader.readAsDataURL(img);\r\n}\r\n\r\nfunction beforeUpload(file) {\r\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n\r\n    if (!isJpgOrPng) {\r\n        message.error('You can only upload JPG/PNG file!');\r\n    }\r\n    const isLt2M = file.size / 1024 / 1024 < 2;\r\n\r\n    if (!isLt2M) {\r\n        message.error('Image must smaller than 2MB!');\r\n    }\r\n    return isJpgOrPng && isLt2M;\r\n}\r\n\r\nclass CustomerTable extends Component {\r\n    formRef = React.createRef();\r\n\r\n    state = {\r\n        customers: [],\r\n        isOpenModal: false,\r\n        isLoading: false,\r\n        isLoadingForm: false,\r\n        loading: false,\r\n\r\n        email: '',\r\n        job : 'Sinh viên',\r\n        sex : 'Nam',\r\n        tempReg: false,\r\n        checked: false,\r\n        disabled: false,\r\n        note: '',\r\n        avatar: ''\r\n    }\r\n\r\n    callBackCustomerRow = value =>{\r\n        if (value) {\r\n            this.getCustomers();\r\n        }\r\n    }\r\n\r\n    renderCustomer = () =>{\r\n        const {customers = []} = this.state;\r\n\r\n        if (Array.isArray(customers) && customers.length > 0) {\r\n            \r\n            return customers.map(customer => {\r\n                return <React.Fragment key={customer.id}>                   \r\n                    <CustomerRow \r\n                        customer={customer}\r\n                        callback = {this.callBackCustomerRow}\r\n                        block= {this.props.block}\r\n                    />\r\n                </React.Fragment>;\r\n            });\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.getCustomers();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.idBlock !== prevProps.idBlock) {\r\n            this.getCustomers();\r\n        }\r\n    }\r\n\r\n    getCustomers = async () =>{\r\n        this.setState({\r\n            isLoadingForm: true\r\n        });\r\n\r\n        let user = JSON.parse(localStorage.getItem('user'));\r\n        let token = localStorage.getItem('token');\r\n        const getCustomers = await axios({\r\n            url: `https://api-gateway.vmotel.me/go-lang/customer/get-customers?token=${token || ''}&userId=${user.id || ''}`,\r\n            method: 'GET'\r\n        });\r\n\r\n        if (getCustomers) {\r\n            if (getCustomers.data && getCustomers.data.data) {\r\n                const {customers = []} = getCustomers.data.data;\r\n\r\n                this.setState({\r\n                    customers\r\n                });\r\n            } \r\n        }\r\n\r\n        this.setState({isLoadingForm: false});\r\n    }\r\n\r\n    openAddCustomerModal = () =>{\r\n        this.setState({\r\n            isOpenModal: true\r\n        });\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            isOpenModal: !this.state.isOpenModal\r\n        });\r\n    }\r\n\r\n    onFinish = async (value) => {\r\n        let user = JSON.parse(localStorage.getItem('user'));\r\n        let timeStamp = `#${Math.floor(Date.now() / 1000)}`;\r\n        let token = localStorage.getItem('token');\r\n\r\n        this.setState({\r\n            isLoading: true\r\n        });\r\n\r\n        const result = await axios({\r\n            url: `https://api-gateway.vmotel.me/go-lang/customer/create?token=${token || ''}&userId=${user.id}`,\r\n            method: 'POST',\r\n            data: {\r\n                fullName : value.fullName,\r\n                phoneNumber : value.phoneNumber,\r\n                dateBirth : moment(value.dateBirth).format('YYYY-MM-DD'),\r\n                email : value.email ? value.email : '',\r\n                job : value.job,\r\n                workPlace: value.workPlace ? value.workPlace : '',\r\n                sex : value.sex,\r\n                tempReg: this.state.tempReg ? 1 : 0,\r\n                note : value.note ? value.note : '',\r\n                avatar: '',\r\n                identifyBack: '',\r\n                identifyFront: '',\r\n                codeUser: timeStamp,\r\n                IdOwner : user.id\r\n            }\r\n        });\r\n\r\n        this.setState({\r\n            isLoading: false\r\n        });\r\n\r\n        if (result) {\r\n            if (result.data && result.data.data) {\r\n                toast.success('Thêm khách hàng thành công !');\r\n\r\n                this.setState({\r\n                    isOpenModal: !this.state.isOpenModal\r\n                });\r\n                this.getCustomers();\r\n            } else {\r\n\r\n                toast.error('Thêm khách hàng thất bại !');\r\n            }\r\n        }\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            value: e.target.value\r\n        });\r\n    }\r\n\r\n    handleChange = info => {\r\n        if (info.file.status === 'uploading') {\r\n            this.setState({loading: true});\r\n            return;\r\n        }\r\n        if (info.file.status === 'done') {\r\n            // Get this url from response in real world.\r\n            getBase64(info.file.originFileObj, imageUrl =>\r\n                this.setState({\r\n                    imageUrl,\r\n                    loading: false\r\n                })\r\n            );\r\n        }\r\n    }\r\n\r\n    onChangeTempReg = () => {\r\n        this.setState({\r\n            tempReg: !this.state.tempReg\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        const {idBlock} = this.props;\r\n\r\n        const uploadButton = (\r\n            <div>\r\n                {this.state.loading ? <LoadingOutlined /> : <PlusOutlined />}\r\n                <div className=\"ant-upload-text\">Upload</div>\r\n            </div>\r\n        );\r\n        const {avatar} = this.state;\r\n\r\n        return (\r\n            <div style={{position: 'relative'}}>   \r\n                {this.state.isLoadingForm ?  <Spin /> : null}       \r\n                <div className=\"card shadow mb-4\">\r\n                    <div className=\"card-header py-3 row\" style = {{display : 'flex', alignItems : 'center', justifyContent : 'space-between'}}>\r\n                        <div className=\"sm-6\">\r\n                            <h6 className=\"m-0 font-weight-bold text-primary\">QUẢN LÝ KHÁCH HÀNG</h6>                          \r\n                        </div>\r\n                        <div>\r\n                            <Button \r\n                                outline color= {idBlock === null ? 'secondary' : 'primary' }\r\n                                disabled={idBlock === null ? true : false}\r\n                                title = {idBlock === null ? 'Phải có ít nhất 1 khu trọ để thực hiện thêm khách hàng' : ''}\r\n                                onClick = {this.openAddCustomerModal}\r\n                            >Thêm khách hàng</Button>{' '}                                 \r\n                        </div>\r\n                                   \r\n                    </div>\r\n                    \r\n                    <div className=\"card-body\">\r\n                        <div className=\"table-responsive\">\r\n                            <table className=\"table table-bordered\" id=\"dataTable\" width=\"100%\" cellSpacing={0}>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Tên khách hàng</th>\r\n                                        <th>Số điện thoại</th>\r\n                                        <th>Trạng thái</th>\r\n                                        <th>Phòng</th>\r\n                                        {/* <th>Đại diện phòng</th> */}\r\n                                        <tr />\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {this.renderCustomer()}                      \r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>       \r\n                <Modal isOpen={this.state.isOpenModal} toggle={this.toggle}>\r\n                    {this.state.isLoading ?  <Spin /> : null}       \r\n                    <ModalHeader toggle={this.toggle}>THÊM KHÁCH HÀNG</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form \r\n                            {...layout} \r\n                            initialValues={{\r\n                                sex: 'Nam',\r\n                                job: 'Sinh viên'\r\n                            }} \r\n                            ref={this.formRef} onFinish={this.onFinish}>\r\n                            <Form.Item\r\n                                name=\"nameBlock\"\r\n                                label=\"Khu trọ/căn hộ\"\r\n                            >\r\n                                <strong>{this.props.block && this.props.block.nameBlock}</strong>\r\n                            </Form.Item>\r\n                            <Divider />\r\n                            <Form.Item\r\n                                {...formItemLayout}\r\n                                name=\"fullName\"\r\n                                label=\"Tên khách hàng:\"\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Hãy nhập tên khách hàng'\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <Input placeholder=\"Hãy nhập tên khách hàng\" />\r\n                            </Form.Item>\r\n                            <Form.Item \r\n                                {...formItemLayout}\r\n                                // name={['user', 'email']} \r\n                                name=\"email\"\r\n                                label=\"Email\" \r\n                                rules={[{type: 'email'}]}>\r\n                                <Input placeholder=\"abc@gmail.com\" />\r\n                            </Form.Item>\r\n\r\n                            <Row>\r\n                                <Col span={24}>\r\n                                    <Form.Item >\r\n                                        <Form.Item \r\n                                            {...formItemLayout}\r\n                                            name = 'phoneNumber'\r\n                                            label=\"Số diện thoại\"\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: 'Hãy nhập số điện thoại'\r\n                                                }\r\n                                            ]}\r\n                                        >\r\n                                            <Input placeholder= '0xxx' />\r\n                                        </Form.Item>\r\n                                        <Form.Item \r\n                                            name=\"dateBirth\" \r\n                                            label=\"Ngày sinh\" \r\n                                            {...formItemLayout}\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: 'Hãy chọn ngày sinh'\r\n                                                }\r\n                                            ]}\r\n                                        >\r\n                                            <DatePicker />\r\n                                        </Form.Item>\r\n                                        <Form.Item \r\n                                            name=\"job\" \r\n                                            label=\"Nghề nghiệp\" \r\n                                            {...formItemLayout}\r\n                                        >\r\n                                            <Radio.Group onChange={this.onChange} value={this.state.job}>\r\n                                                <Radio value={'Sinh viên'}>Sinh Viên</Radio>\r\n                                                <Radio value={'Người đi làm'}>Người đi làm</Radio>\r\n                                            </Radio.Group>\r\n                                        </Form.Item>\r\n\r\n                                        <Form.Item \r\n                                            {...formItemLayout}\r\n                                            name = 'workPlace'\r\n                                            label=\"Nơi công tác\"\r\n                                        >\r\n                                            <Input />\r\n                                        </Form.Item>\r\n\r\n                                        <Form.Item \r\n                                            name=\"sex\" \r\n                                            label=\"Giới tính\" \r\n                                            {...formItemLayout}\r\n                                        >\r\n                                            <Radio.Group onChange={this.onChange}>\r\n                                                <Radio value={'Nam'}>Nam</Radio>\r\n                                                <Radio value={'Nữ'}>Nữ</Radio>\r\n                                                <Radio value={'Khác'}>Khác</Radio>\r\n                                            </Radio.Group>\r\n                                        </Form.Item>\r\n\r\n                                        <Form.Item \r\n                                            {...formItemLayout}\r\n                                            name = 'tempRegBool'\r\n                                            label=\"Đăng ký tạm trú\"\r\n                                        >\r\n                                            <Checkbox checked={this.state.tempReg} onChange={this.onChangeTempReg}>Đăng ký</Checkbox>\r\n                                        </Form.Item>\r\n\r\n                                        <Form.Item \r\n                                            {...formItemLayout}\r\n                                            name = 'note'\r\n                                            label=\"Ghi chú\"\r\n                                        >\r\n                                            <TextArea placeholder=\"textarea with clear icon\" allowClear onChange={this.onChange} />\r\n                                        </Form.Item>\r\n\r\n                                        {/* <Form.Item \r\n                                            {...formItemLayout}\r\n                                            name = 'avatar'\r\n                                            label=\"Ảnh đại diện\"\r\n                                        >\r\n                                            <Upload\r\n                                                name=\"avatar\"\r\n                                                listType=\"picture-card\"\r\n                                                className=\"avatar-uploader\"\r\n                                                showUploadList={false}\r\n                                                action=\"https://api-gateway.vmotel.me/go-lang/upload/userAvatar\"\r\n                                                beforeUpload={beforeUpload}\r\n                                                onChange={this.handleChange}\r\n                                            >\r\n                                                {avatar ? <img src={avatar} alt=\"avatar\" style={{width: '100%'}} /> : uploadButton}\r\n                                            </Upload>\r\n                                        </Form.Item> */}\r\n                                    </Form.Item>\r\n                                    \r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Form.Item\r\n                                wrapperCol={{\r\n                                    md: {span: 8, offset: 16}\r\n                                }}\r\n                            >\r\n                                <Button htmlType='submit' type='primary' >Thêm</Button>{' '}\r\n                                <Button  onClick={this.toggle}>Hủy</Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n                <ToastContainer />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CustomerTable;\r\n","import React, {Component} from 'react';\r\n\r\nimport SideBar from '../SideBar';\r\nimport Topbar from '../Topbar';\r\nimport Spin from '../../admin/Spin';\r\nimport CustomerTable from './CustomerTable';\r\nimport LogoutModal from '../LogoutModal';\r\n\r\nimport axios from 'axios';\r\nimport {Container, Row, Col} from 'reactstrap';\r\nimport {FormGroup, Label, Input} from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default class Index extends Component {\r\n\r\n    state = {\r\n        blocks: [],\r\n        isLoading: false,\r\n        idBlockSelected: null,\r\n        block: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getBlocks();\r\n    }\r\n\r\n    getBlocks = async () =>{\r\n        this.setState({\r\n            isLoading: true\r\n        });\r\n\r\n        let user = JSON.parse(localStorage.getItem('user'));\r\n        let token = localStorage.getItem('token');\r\n        const getBlocks = await axios({\r\n            url: `https://api-gateway.vmotel.me/go-lang/block/get-block?token=${token || ''}&userId=${user ? user.id : ''}`,\r\n            method: 'GET'\r\n        });\r\n        \r\n        if (getBlocks) {\r\n            if (getBlocks.data && getBlocks.data.data) {\r\n                const {blocks = []} = getBlocks.data.data;\r\n\r\n                if (blocks.length > 0)\r\n                {\r\n                    this.setState({\r\n                        blocks,\r\n                        idBlockSelected: blocks[0].id,\r\n                        isLoading: false,\r\n                        block: blocks[0]\r\n                    });\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            isLoading: false\r\n        });\r\n    }\r\n\r\n    onChangeSelected = (e) => {\r\n        const {value} = e.target;\r\n\r\n        if (value) {\r\n            const block = this.state.blocks.find(block => block.nameBlock === value);\r\n\r\n            this.setState({\r\n                idBlockSelected: +block.id,\r\n                block\r\n            });\r\n        }\r\n    }\r\n\r\n    renderSelectBlock = () =>{\r\n\r\n        if (Array.isArray(this.state.blocks) && this.state.blocks.length > 0) {\r\n            return this.state.blocks.map(block => {\r\n                return <React.Fragment key={block.id}>\r\n                    <option onClick={() => this.onClickBlock(block.id)}>{block.nameBlock}</option>\r\n                </React.Fragment>;\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.isLoading ?  <Spin /> : null} \r\n                {/* Page Wrapper */}\r\n                <div id=\"wrapper\">                  \r\n                    <SideBar />\r\n                    {/* Content Wrapper */}\r\n                    <div id=\"content-wrapper\" className=\"d-flex flex-column\">\r\n                        {/* Main Content */}\r\n                        <div id=\"content\">\r\n                            {/* Topbar */}\r\n                            <nav className=\"navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow\">\r\n                                {/* Topbar Navbar */}\r\n                                <ul className=\"navbar-nav ml-auto\">\r\n                                    {/* Nav Item - Search Dropdown (Visible Only XS) */}\r\n                                    <li className=\"nav-item dropdown no-arrow d-sm-none\">\r\n                                        <Link className=\"nav-link dropdown-toggle\" href=\"#\" id=\"searchDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                            <i className=\"fas fa-search fa-fw\" />\r\n                                        </Link>\r\n                                        {/* Dropdown - Messages */}\r\n                                        <div className=\"dropdown-menu dropdown-menu-right p-3 shadow animated--grow-in\" aria-labelledby=\"searchDropdown\">\r\n                                            <form className=\"form-inline mr-auto w-100 navbar-search\">\r\n                                                <div className=\"input-group\">\r\n                                                    <input type=\"text\" className=\"form-control bg-light border-0 small\" placeholder=\"Search for...\" aria-label=\"Search\" aria-describedby=\"basic-addon2\" />\r\n                                                    <div className=\"input-group-append\">\r\n                                                        <button className=\"btn btn-primary\" type=\"button\">\r\n                                                            <i className=\"fas fa-search fa-sm\" />\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </form>\r\n                                        </div>\r\n                                    </li>\r\n                                    {/* Nav Item - Alerts */}                                    \r\n                                    <Topbar />\r\n                                </ul>\r\n                            </nav>\r\n                            {/* End of Topbar */}\r\n                        \r\n                            {/* Begin Page Content */}\r\n                            <div className=\"container-fluid\">\r\n                                <Container>\r\n                                    <Row>\r\n                                        <Col />\r\n                                        <Col xs=\"6\" sm = \"4\">\r\n                                            <FormGroup>\r\n                                                <Label for=\"exampleSelect\">Khu trọ</Label>\r\n                                                <Input onChange={this.onChangeSelected} type=\"select\" name=\"select\" id=\"exampleSelect\">\r\n                                                    {this.renderSelectBlock()}\r\n                                                </Input>\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Container>\r\n                                <CustomerTable idBlock={this.state.idBlockSelected} block= {this.state.block} />\r\n                            </div>\r\n                            {/* /.container-fluid */}\r\n                        </div>\r\n                        {/* End of Main Content */}\r\n                        {/* Footer */}\r\n                        <footer className=\"sticky-footer bg-white\">\r\n                            <div className=\"container my-auto\">\r\n                                <div className=\"copyright text-center my-auto\">\r\n                                    <span>Copyright © Your Website 2019</span>\r\n                                </div>\r\n                            </div>\r\n                        </footer>\r\n                        {/* End of Footer */}\r\n                    </div>\r\n                    {/* End of Content Wrapper */}\r\n                </div>\r\n                {/* End of Page Wrapper */}\r\n                {/* Scroll to Top Button */}\r\n                <a className=\"scroll-to-top rounded\" href=\"#page-top\">\r\n                    <i className=\"fas fa-angle-up\" />\r\n                </a>\r\n                {/* Logout Modal */}\r\n                <LogoutModal />\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport {Modal, ModalHeader, ModalBody, ModalFooter , Label, Row, Col} from 'reactstrap';\r\nimport axios from 'axios';\r\nimport {toast, ToastContainer} from 'react-toastify';\r\nimport Spin from '../../admin/Spin';\r\nimport _ from 'lodash';\r\nimport moment from 'moment';\r\nimport {Form, Button, Input, Select, Divider, Transfer, InputNumber, DatePicker, Tag} from 'antd';\r\n\r\nconst {Option} = Select;\r\nconst {TextArea} = Input;\r\nconst {RangePicker} = DatePicker;\r\n\r\nconst layout = {\r\n    labelCol: {\r\n        span: 24\r\n    },\r\n    wrapperCol: {\r\n        span: 24\r\n    }\r\n};\r\n\r\nexport default class ContractRow extends Component {\r\n\r\n    formRef = React.createRef();\r\n\r\n    state = {\r\n        isOpenModal: false,\r\n        isOpenDeleteModal: false,\r\n        isLoading: false,\r\n        targetKeys: [],\r\n        optionCustomers: [],\r\n        customers: [],\r\n        selectedKeys: [],\r\n        startDate: '',\r\n        endDate: '',\r\n        note: '',\r\n        idSlave: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            note : this.props.contract.note\r\n        });\r\n\r\n        const newCustomers = this.props.customers.map(customer => ({\r\n            ...customer,\r\n            key: customer.id\r\n        }));\r\n\r\n        const newOptionCustomers = this.props.customers.filter(customer => {\r\n            if (this.props.contract.idUsers.some(user => user === customer.id)) {\r\n                return customer;\r\n            }\r\n        });\r\n\r\n        this.setState({\r\n            customers: newCustomers,\r\n            targetKeys: this.props.contract.idUsers,\r\n            optionCustomers: newOptionCustomers\r\n        });\r\n\r\n        this.setState({\r\n            idSlave : this.props.contract.idSlave\r\n        });\r\n\r\n    }\r\n\r\n    handleChange = (nextTargetKeys, direction, moveKeys) => {\r\n        const newOptionCustomers = this.props.customers.filter(customer => {\r\n            if (nextTargetKeys.some(key => key === customer.id)) {\r\n                return customer;\r\n            }\r\n        });\r\n        \r\n        this.setState({targetKeys: nextTargetKeys, optionCustomers: newOptionCustomers});\r\n\r\n    };\r\n\r\n    handleSelectChange = (sourceSelectedKeys, targetSelectedKeys) => {\r\n        this.setState({selectedKeys: [...sourceSelectedKeys, ...targetSelectedKeys]});\r\n\r\n        // console.log('sourceSelectedKeys: ', sourceSelectedKeys);\r\n        // console.log('targetSelectedKeys: ', targetSelectedKeys);\r\n    };\r\n\r\n    handleScroll = (direction, e) => {\r\n        // console.log('direction:', direction);\r\n        // console.log('target:', e.target);\r\n    };\r\n\r\n    checksSelectedKey = (arr, val) => {\r\n        return arr.some(arrVal => {\r\n            return val === arrVal;\r\n        });\r\n    }\r\n\r\n    onDelete = async () =>{\r\n\r\n        this.setState({\r\n            isOpenDeleteModal: true\r\n        });\r\n\r\n    }\r\n\r\n    onDeleting = async () =>{\r\n        this.setState({\r\n            isLoading: true\r\n        });\r\n\r\n        let token = localStorage.getItem('token');\r\n        const result = await axios({\r\n            url: `https://api-gateway.vmotel.me/go-lang/contract/delete/${this.props.contract.id}?token=${token || ''}`,\r\n            method: 'DELETE'\r\n        });\r\n\r\n        this.setState({\r\n            isLoading: false\r\n        });\r\n\r\n        if (result) {\r\n            if (result.data && result.data.data) {\r\n                toast.success('Xóa hợp đồng thành công !');\r\n               \r\n                this.props.callback(true);\r\n\r\n                let {idUsers = []} = this.props.contract;\r\n\r\n                this.onDeletingUserRoom(idUsers);\r\n\r\n                this.setState({\r\n                    isOpenDeleteModal: !this.state.isOpenDeleteModal\r\n                });\r\n            } else {\r\n\r\n                toast.error('Xóa hợp đồng thất bại !');\r\n            }\r\n        } \r\n        \r\n    }\r\n\r\n    onDeletingUserRoom = async ids =>{\r\n        let token = localStorage.getItem('token');\r\n\r\n        await axios({\r\n            url: `https://api-gateway.vmotel.me/go-lang/user-room/delete-all?token=${token || ''}`,\r\n            method: 'POST',\r\n            data: {\r\n                idUserRooms: ids\r\n            } \r\n        });\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            isOpenModal: !this.state.isOpenModal\r\n        });\r\n    }\r\n\r\n    toggleDelete = () =>{\r\n        this.setState({\r\n            isOpenDeleteModal: !this.state.isOpenDeleteModal\r\n        });\r\n    }\r\n\r\n    onChangeInputNumber = (value) => {\r\n        this.setState({\r\n            deposit: value.deposit,\r\n            dayPay : value.dayPay\r\n\r\n        });\r\n    }\r\n\r\n    onChangeRangeDate = (value) => {\r\n        this.setState({\r\n            startDate: moment(value[0]).format('YYYY-MM-DD'),\r\n            endDate: moment(value[1]).format('YYYY-MM-DD')\r\n        });   \r\n    }\r\n\r\n    onChangeTextArea = ({target: {value}}) => {\r\n        this.setState({note : value});\r\n    };\r\n\r\n    onChangeSelectSlave = value =>{\r\n        this.setState({\r\n            idSlave : value\r\n        });\r\n    }\r\n\r\n    onFinish = async (value) => {\r\n\r\n        const {contract} = this.props;\r\n\r\n        const userRoom = this.state.optionCustomers.map(option => {\r\n            return {\r\n                idUser: +option.id,\r\n                idRoom: +contract.idRoom\r\n            };\r\n        });\r\n\r\n        let token = localStorage.getItem('token');\r\n\r\n        this.setState({\r\n            isLoading: true\r\n        });\r\n\r\n        const update = await axios({\r\n            method: 'PUT',\r\n            url: `https://api-gateway.vmotel.me/go-lang/contract/update/${contract.id}?token=${token || ''}`,\r\n            data: {\r\n                idRoom: +contract.idRoom,\r\n                idOwner: +contract.idOwner,\r\n                idSlave: +this.state.idSlave,\r\n                startDate: moment(value.startDate[0]).format('YYYY-MM-DD'),\r\n                endDate: moment(value.startDate[1]).format('YYYY-MM-DD'),\r\n                circlePay: +value.circlePay,\r\n                deposit: +value.deposit,\r\n                dayPay: +value.dayPay,\r\n                note: this.state.note,\r\n                idBlock: +contract.idBlock,\r\n                userRooms: userRoom\r\n            }\r\n        });\r\n\r\n        if (update) {\r\n            if (update.data && update.data.data) {\r\n                toast.success('Cập nhật hợp đồng thành công !');\r\n                \r\n                this.setState({\r\n                    isOpenModal: !this.state.isOpenModal\r\n                });\r\n            \r\n                this.props.callback(true);\r\n            } else {\r\n                toast.error('Cập nhật hợp đồng thất bại !');\r\n            }\r\n        }\r\n\r\n        this.setState({isLoading: false});\r\n    }\r\n\r\n    render() {\r\n        const {contract} = this.props;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <tr>\r\n                    <td><Tag color=\"geekblue\">{this.props.contract.nameRoom}</Tag></td>\r\n                    <td>{this.props.contract.fullName}</td>\r\n                    <td>{this.props.contract.circlePay} tháng</td>\r\n                    <td>{moment(this.props.startDate).format('DD-MM-YYYY')}</td>\r\n                    <td>{moment(this.props.endDate).format('DD-MM-YYYY')}</td>\r\n                    <td>{this.props.contract.deposit}</td>\r\n                    <td>\r\n                        <button onClick={this.toggle} className=\"btn btn-warning btn-circle mr-3\" title=\"Chỉnh sửa\">\r\n                            <i className=\"fa fa-pencil-square\" aria-hidden=\"true\" />\r\n                        </button>\r\n                        <button onClick={this.onDelete} className=\"btn btn-danger btn-circle\" title=\"Xóa\">\r\n                            <i className=\"fa fa-trash\" aria-hidden=\"true\" />\r\n                        </button>\r\n                    </td>\r\n                </tr>\r\n                <Modal isOpen={this.state.isOpenModal} toggle={this.toggle} className='modal-contract'>\r\n                    {this.state.isLoading ?  <Spin /> : null}  \r\n                    <ModalHeader toggle={this.toggle}>CHỈNH SỬA THÔNG TIN HỢP ĐỒNG</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form {...layout} name=\"form-update\" ref={this.formRef} onFinish={this.onFinish}  initialValues={{\r\n                            startDate: [moment(contract.startDate), moment(contract.endDate)],\r\n                            dayPay : contract.dayPay,\r\n                            deposit : contract.deposit,\r\n                            note : contract.note,\r\n                            idSlave: this.props.contract.idSlave,\r\n                            circlePay: contract.circlePay\r\n                        }}>\r\n                          \r\n                            <Form.Item\r\n                                name=\"nameBlock\"\r\n                                label=\"Khu trọ/căn hộ\"\r\n                            >\r\n                                <strong>{this.props.block && this.props.block.nameBlock}</strong>\r\n                            </Form.Item>\r\n                            <Divider />\r\n                            <Form.Item\r\n                                label=\"Chọn phòng\"\r\n                                name=\"room\"\r\n                            >\r\n                                <Select\r\n                                    placeholder=\"Tên phòng\"\r\n                                    style={{width: 200}}\r\n                                    defaultValue= {contract.idRoom}\r\n                                    disabled\r\n                                >\r\n                                    <Option value={contract.idRoom} disabled >{contract.nameRoom}</Option>\r\n                                </Select>\r\n                            </Form.Item>\r\n\r\n                            <Form.Item style={{width: 500}}>\r\n                                <Label>Chọn khách hàng</Label>\r\n                                <Transfer\r\n                                    dataSource={this.state.customers}\r\n                                    titles={['Khách hàng', 'Khách hàng đã chọn']}\r\n                                    targetKeys={this.state.targetKeys}\r\n                                    selectedKeys={this.state.selectedKeys}\r\n                                    onChange={this.handleChange}\r\n                                    onSelectChange={this.handleSelectChange}\r\n                                    onScroll={this.handleScroll}\r\n                                    render={item => item.fullName}\r\n                                    disabled={false}\r\n                                    listStyle={{\r\n                                        width: 300,\r\n                                        height: 300\r\n                                    }}\r\n                                />\r\n                            </Form.Item>\r\n\r\n                            <Row>\r\n                                <Col>\r\n                                    <Form.Item\r\n                                        label=\"Người đại diện\"\r\n                                        name=\"idSlave\"\r\n                                        rules={[{required: true, message: 'Hãy chọn người đại diện'}]}\r\n                                    >\r\n                                        <Select\r\n                                            placeholder=\"Chọn người đại diện\"\r\n                                            style={{width: 200}}\r\n                                            onChange={this.onChangeSelectSlave}\r\n                                        >\r\n                                            {\r\n                                                this.state.optionCustomers.length > 0 && this.state.optionCustomers.map(customer => {\r\n                                                    return (\r\n                                                        <Option key={customer.id} value={customer.id}>\r\n                                                            {customer.fullName}\r\n                                                        </Option>\r\n                                                    );\r\n                                                })\r\n                                            }\r\n                                        </Select>\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Form.Item\r\n                                        label=\"Ghi chú\"\r\n                                        name=\"note\">\r\n                                        <TextArea\r\n                                            value={this.state.note}\r\n                                            onChange={this.onChangeTextArea}\r\n                                            placeholder=\"Ghi chú\"\r\n                                            autoSize={{minRows: 3, maxRows: 5}}\r\n                                        />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Form.Item\r\n                                label=\"Tiền đặt cọc\"\r\n                                name=\"deposit\"\r\n                                rules={[{required: true, message: 'Hãy nhập tiền đặt cọc'}]}\r\n                            >\r\n                                <InputNumber\r\n                                    style={{width: 200}}\r\n                                    min={0}\r\n                                    formatter={value => `đ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n                                    parser={value => value.replace(/đ\\s?|(,*)/g, '')}\r\n                                    onChange={this.onChangeInputNumber}\r\n                                />\r\n                            </Form.Item>\r\n\r\n                            <Form.Item\r\n                                label=\"Ngày bắt đầu và kết thúc hợp đồng\"\r\n                                name=\"startDate\"\r\n                                rules={[{required: true, message: 'Hãy chọn ngày bắt đầu và kết thúc hợp đồng'}]}\r\n                            >\r\n                                <RangePicker\r\n                                    ranges={{\r\n                                        'Hôm nay': [moment(), moment()],\r\n                                        'Tháng này': [moment().startOf('month'), moment().endOf('month')]\r\n                                    }}\r\n                                    format='DD/MM/YYYY'\r\n                                    onChange={this.onChangeRangeDate}\r\n                                />\r\n                            </Form.Item>\r\n\r\n                            <Row>\r\n                                <Col>\r\n                                    <Form.Item\r\n                                        label=\"Kì thành toán\"\r\n                                        name=\"circlePay\"\r\n                                        rules={[{required: true, message: 'Hãy nhập kì thanh toán'}]}\r\n                                    >\r\n                                        <Input \r\n                                            addonAfter=\" Tháng / Lần\" \r\n                                            style={{width: 200}} type=\"number\" \r\n                                            value = {contract.circlePay} \r\n                                            defaultValue = {contract.circlePay} />\r\n                                    </Form.Item>\r\n                                </Col>\r\n\r\n                                <Col>\r\n                                    <Form.Item\r\n                                        label=\"Ngày đóng hạn kì tới\"\r\n                                        name=\"dayPay\"\r\n                                        rules={[{required: true, message: 'Hãy nhập ngày đóng hạn kì tới'}]}\r\n                                    >\r\n                                        <InputNumber\r\n                                            style={{width: 200}}\r\n                                            min={0}\r\n                                            max ={31}\r\n                                            onChange={this.onChangeInputNumber}\r\n                                        />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Form.Item\r\n                                wrapperCol={{\r\n                                    md: {span: 8, offset: 16}\r\n                                }}\r\n                            >\r\n                                <Button htmlType='submit' type='primary' >Chỉnh sửa</Button>{' '}\r\n                                <Button  onClick={this.toggle}>Hủy</Button>\r\n                            </Form.Item>\r\n\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n                <Modal isOpen={this.state.isOpenDeleteModal} toggle={this.toggle}>\r\n                    {this.state.isLoading ?  <Spin /> : null}  \r\n                    <ModalHeader toggle={this.toggle}>THÔNG BÁO</ModalHeader>\r\n                    <ModalBody>\r\n                        Chắc chắn muốn hợp đồng của phòng <b>{this.props.contract.nameRoom}</b>?\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button color=\"primary\" onClick={this.onDeleting}>Xóa</Button>{' '}\r\n                        <Button color=\"secondary\" onClick={this.toggleDelete}>Hủy</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n                <ToastContainer />\r\n                \r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\n// import {connect} from 'react-redux';\r\nimport {Modal, ModalHeader, ModalBody, Row, Col, ToastBody} from 'reactstrap';\r\nimport {toast, ToastContainer} from 'react-toastify';\r\nimport {Form, Button, Input, Select, Divider, Transfer, InputNumber, DatePicker} from 'antd';\r\nimport {Label} from 'reactstrap';\r\nimport moment from 'moment';\r\nimport _ from 'lodash';\r\n\r\n// // Actions\r\n// import {GET_ROOMS} from '../../../actions/RoomAction';\r\n\r\n// Components\r\nimport Spin from '../../admin/Spin';\r\nimport ContractRow from './ContractRow';\r\n\r\nconst {Option} = Select;\r\nconst {TextArea} = Input;\r\nconst {RangePicker} = DatePicker;\r\n\r\nconst layout = {\r\n    labelCol: {\r\n        span: 24\r\n    },\r\n    wrapperCol: {\r\n        span: 24\r\n    }\r\n};\r\n\r\nexport default class ContractTable extends Component {\r\n    formRef = React.createRef();\r\n\r\n    state = {\r\n        contracts: [],\r\n        isOpenModal: false,\r\n        isLoading: false,\r\n        isLoadingForm: false,\r\n        room: '',\r\n        idSlave: null,\r\n        note: '',\r\n        idUser: '',\r\n        idRoom: '',\r\n        customers: [],\r\n        targetKeys: [],\r\n        optionCustomers: [],\r\n        selectedKeys: [],\r\n        disabled: false,\r\n        rooms: []\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            isOpenModal: !this.state.isOpenModal\r\n        });\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getContracts();\r\n\r\n        let user = JSON.parse(localStorage.getItem('user'));\r\n   \r\n        this.setState({\r\n            idUser : user.id\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.props.idBlock !== prevProps.idBlock) {\r\n            this.getContracts();\r\n            this.getRooms();      \r\n        }\r\n        if (!_.isEqual(this.props.customers, prevProps.customers) && this.props.customers) {\r\n            const newCustomers = this.props.customers.map(customer => ({\r\n                ...customer,\r\n                key: customer.id\r\n            }));\r\n\r\n            this.setState({customers: newCustomers});\r\n        }\r\n        if (!_.isEqual(this.state.targetKeys, prevState.targetKeys)) {\r\n\r\n            const newOptionCustomers = this.state.customers.filter(customer => {\r\n                if (this.state.targetKeys.some(target => +target === +customer.key)) {\r\n                    return customer;\r\n                }\r\n            });\r\n\r\n            this.setState({\r\n                optionCustomers: newOptionCustomers\r\n            });\r\n        }\r\n    }\r\n\r\n    getContracts = async () =>{\r\n        this.setState({\r\n            isLoadingForm: true\r\n        });\r\n\r\n        let user = localStorage.getItem('user');\r\n        let token = localStorage.getItem('token');\r\n        const getContracts = await axios({\r\n            url: `https://api-gateway.vmotel.me/go-lang/contract/get-contracts?token=${token || ''}&userId=${user.id}`,\r\n            method: 'GET'\r\n        });\r\n\r\n        if (getContracts) {\r\n            if (getContracts.data && getContracts.data.data) {\r\n                const {contracts = []} = getContracts.data.data;\r\n\r\n                this.setState({\r\n                    contracts\r\n                });\r\n            } \r\n        }\r\n\r\n        this.setState({isLoadingForm: false});\r\n    }\r\n\r\n    addContractModal = () =>{\r\n        this.setState({\r\n            isOpenModal: true,\r\n            isLoading: false\r\n        });\r\n    }\r\n\r\n    callBackContractRow = (value) =>{\r\n        if (value) {\r\n            this.getContracts();\r\n        }\r\n    }\r\n\r\n    callBackRoomRow = value =>{\r\n        if (value) {\r\n            this.getContracts();\r\n        }\r\n    }\r\n\r\n    getContracts = async () =>{\r\n        this.setState({\r\n            isLoadingForm: true\r\n        });\r\n\r\n        let token = localStorage.getItem('token');\r\n        const getContracts = await axios({\r\n            url: `https://api-gateway.vmotel.me/go-lang/contract/get-contracts?token=${token || ''}&idBlock=${this.props.idBlock}`,\r\n            method: 'GET'\r\n        });\r\n\r\n        if (getContracts) {\r\n            if (getContracts.data && getContracts.data.data) {\r\n                const {contracts = []} = getContracts.data.data;\r\n\r\n                this.setState({\r\n                    contracts\r\n                });\r\n            } \r\n        }\r\n\r\n        this.setState({isLoadingForm: false});\r\n    }\r\n\r\n    callBackServiceRow = bool => {\r\n        if (bool) {\r\n            this.getContracts();\r\n        }\r\n    }\r\n\r\n    renderContracts = () => {\r\n        const {\r\n            contracts = [], \r\n            customers = []\r\n        } = this.state;\r\n\r\n        if (Array.isArray(contracts) && contracts.length > 0) {\r\n            return contracts.map(contract => {\r\n                return <React.Fragment key={contract.id}>\r\n                    <ContractRow \r\n                        contract={contract}\r\n                        callback = {this.callBackServiceRow}\r\n                        block= {this.props.block}\r\n                        customers = {customers}\r\n                    />\r\n                </React.Fragment>;\r\n            });\r\n        }\r\n    }\r\n\r\n    onFinish = async (value) => {\r\n        const userRoom = this.state.optionCustomers.map(option => {\r\n            return {\r\n                idUser: +option.id,\r\n                idRoom: +this.state.idRoom\r\n            };\r\n        });\r\n\r\n        let token = localStorage.getItem('token');\r\n\r\n        this.setState({\r\n            isLoading: true\r\n        });\r\n\r\n        const create = await axios({\r\n            method: 'POST',\r\n            url: `https://api-gateway.vmotel.me/go-lang/contract/create?token=${token || ''}&userId=${this.state.idUser}`,\r\n            data: {\r\n                idRoom: +this.state.idRoom,\r\n                idOwner: +this.state.idUser,\r\n                idSlave: +this.state.idSlave,\r\n                startDate: this.state.startDate,\r\n                endDate: this.state.endDate,\r\n                circlePay: +value.circlePay,\r\n                deposit: +value.deposit,\r\n                dayPay: +value.dayPay,\r\n                note: this.state.note,\r\n                idBlock: +this.props.block.id,\r\n                userRooms: userRoom\r\n            }\r\n        });\r\n\r\n        if (create) {\r\n            if (create.data && create.data.data) {\r\n                toast.success('Thêm hợp đồng thành công !');\r\n                \r\n                this.setState({\r\n                    isOpenModal: !this.state.isOpenModal,\r\n                    optionCustomers: []\r\n                });\r\n\r\n                this.getContracts();\r\n            } else {\r\n                toast.error('Thêm hợp đồng thất bại !');\r\n            }\r\n        }\r\n\r\n        this.setState({isLoading: false});\r\n    }\r\n\r\n    onChangeSelectRoom = value =>{\r\n        this.setState({\r\n            idRoom : value\r\n        });\r\n    }\r\n\r\n    onChangeSelectSlave = value =>{\r\n        this.setState({\r\n            idSlave : value\r\n        });\r\n    }\r\n\r\n    getRooms = async () =>{\r\n        this.setState({\r\n            isLoading: true\r\n        });\r\n\r\n        let token = localStorage.getItem('token');\r\n        const getRooms = await axios({\r\n            url: `https://api-gateway.vmotel.me/go-lang/room/get-rooms?token=${token || ''}&idBlock=${this.props.idBlock}`,\r\n            method: 'GET'\r\n        });\r\n\r\n        if (getRooms) {\r\n            if (getRooms.data && getRooms.data.data) {\r\n                const {rooms = []} = getRooms.data.data;\r\n\r\n                this.setState({\r\n                    rooms\r\n                });\r\n            } \r\n        }\r\n\r\n        this.setState({isLoading: false});\r\n    }\r\n\r\n    onChangeSelected = (e) => {\r\n        const {value} = e.target;\r\n\r\n        this.setState({\r\n            room: value\r\n        });\r\n    }\r\n\r\n    handleChange = (nextTargetKeys, direction, moveKeys) => {\r\n        this.setState({targetKeys: nextTargetKeys});\r\n\r\n        // console.log('targetKeys: ', nextTargetKeys);\r\n        // console.log('direction: ', direction);\r\n        // console.log('moveKeys: ', moveKeys);\r\n    };\r\n\r\n    handleSelectChange = (sourceSelectedKeys, targetSelectedKeys) => {\r\n        this.setState({selectedKeys: [...sourceSelectedKeys, ...targetSelectedKeys]});\r\n\r\n        // console.log('sourceSelectedKeys: ', sourceSelectedKeys);\r\n        // console.log('targetSelectedKeys: ', targetSelectedKeys);\r\n    };\r\n\r\n    handleScroll = (direction, e) => {\r\n        // console.log('direction:', direction);\r\n        // console.log('target:', e.target);\r\n    };\r\n\r\n    onChangeInputNumber = (value) => {\r\n        this.setState({\r\n            deposit: value.deposit,\r\n            dayPay : value.dayPay\r\n\r\n        });\r\n    }\r\n\r\n    onChangeTextArea = ({target: {value}}) => {\r\n        this.setState({note : value});\r\n    };\r\n\r\n    onChangeRangeDate = (value) => {\r\n        this.setState({\r\n            startDate: moment(value[0]).format('YYYY-MM-DD'),\r\n            endDate: moment(value[1]).format('YYYY-MM-DD')\r\n        });   \r\n    }\r\n\r\n    render() {\r\n        const {idBlock} = this.props;\r\n\r\n        return (\r\n            <div style={{position: 'relative'}}>   \r\n                {this.state.isLoadingForm ?  <Spin /> : null}       \r\n                <div className=\"card shadow mb-4\">\r\n                    <div className=\"card-header py-3 row\" style = {{display : 'flex', alignItems : 'center', justifyContent : 'space-between'}}>\r\n                        <div className=\"sm-6\">\r\n                            <h6 className=\"m-0 font-weight-bold text-primary\">QUẢN LÝ DANH SÁCH HỢP ĐỒNG</h6>                          \r\n                        </div>\r\n                        <div>\r\n                            <Button \r\n                                outline color= {idBlock === null ? 'secondary' : 'primary' }\r\n                                disabled={idBlock === null ? true : false}\r\n                                title = {idBlock === null ? 'Phải có ít nhất 1 khu trọ để thực hiện thêm khách hàng' : ''}\r\n                                onClick = {this.addContractModal}\r\n                            >Thêm hợp đồng</Button>{' '}                                 \r\n                        </div>\r\n                                   \r\n                    </div>\r\n                    \r\n                    <div className=\"card-body\">\r\n                        <div className=\"table-responsive\">\r\n                            <table className=\"table table-bordered\" id=\"dataTable\" width=\"100%\" cellSpacing={0}>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Tên phòng</th>\r\n                                        <th>Người đại diện</th>\r\n                                        <th>Thời hạn hợp đồng</th>\r\n                                        <th>Ngày bắt đầu</th>\r\n                                        <th>Ngày hết hạn</th>\r\n                                        <th>Tiền đặt cọc</th>\r\n                                        <tr />\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {this.renderContracts()}                      \r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>       \r\n                <Modal isOpen={this.state.isOpenModal} toggle={this.toggle} className='modal-contract'>\r\n                    {this.state.isLoading ?  <Spin /> : null}       \r\n                    <ModalHeader toggle={this.toggle}>THÊM HỢP ĐỒNG</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form {...layout} ref={this.formRef} onFinish={this.onFinish} >\r\n                            <Form.Item\r\n                                name=\"nameBlock\"\r\n                                label=\"Khu trọ/căn hộ\"\r\n                            >\r\n                                <strong>{this.props.block && this.props.block.nameBlock}</strong>\r\n                            </Form.Item>\r\n                            <Divider />\r\n                            <Form.Item\r\n                                label=\"Chọn phòng\"\r\n                                name=\"room\"\r\n                                rules={[{required: true, message: 'Hãy chọn phòng'}]}\r\n                            >\r\n                                <Select\r\n                                    placeholder=\"Chọn phòng\"\r\n                                    style={{width: 200}}\r\n                                    onChange={this.onChangeSelectRoom}\r\n                                >\r\n                                    {this.state.rooms.map(room => (\r\n                                        <Option key={room.id}>{room.nameRoom}</Option>\r\n                                    ))}\r\n                                </Select>\r\n                            </Form.Item>\r\n\r\n                            <Form.Item style={{width: 500}}>\r\n                                <Label>Chọn khách hàng</Label>\r\n                                <Transfer\r\n                                    dataSource={this.state.customers}\r\n                                    titles={['Khách hàng', 'Khách hàng đã chọn']}\r\n                                    targetKeys={this.state.targetKeys}\r\n                                    selectedKeys={this.state.selectedKeys}\r\n                                    onChange={this.handleChange}\r\n                                    onSelectChange={this.handleSelectChange}\r\n                                    onScroll={this.handleScroll}\r\n                                    render={item => item.fullName}\r\n                                    disabled={false}\r\n                                    listStyle={{\r\n                                        width: 300,\r\n                                        height: 300\r\n                                    }}\r\n                                />\r\n                            </Form.Item>\r\n\r\n                            <Row>\r\n                                <Col>\r\n                                    <Form.Item\r\n                                        label=\"Chọn người đại diện\"\r\n                                        name=\"room\"\r\n                                        rules={[{required: true, message: 'Hãy chọn người đại diện'}]}\r\n                                    >\r\n                                        <Select\r\n                                            placeholder=\"Chọn người đại diện\"\r\n                                            style={{width: 200}}\r\n                                            onChange={this.onChangeSelectSlave}\r\n                                        >\r\n                                            {\r\n                                                this.state.optionCustomers.length > 0 && this.state.optionCustomers.map(customer => {\r\n                                                    return (\r\n                                                        <Option key={customer.id} value={customer.id}>\r\n                                                            {customer.fullName}\r\n                                                        </Option>\r\n                                                    );\r\n                                                })\r\n                                            }\r\n                                        </Select>\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Form.Item\r\n                                        label=\"Ghi chú\"\r\n                                        name=\"note\">\r\n                                        <TextArea\r\n                                            value={this.state.note}\r\n                                            onChange={this.onChangeTextArea}\r\n                                            placeholder=\"Ghi chú\"\r\n                                            autoSize={{minRows: 3, maxRows: 5}}\r\n                                        />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Form.Item\r\n                                label=\"Tiền đặt cọc\"\r\n                                name=\"deposit\"\r\n                                rules={[{required: true, message: 'Hãy nhập tiền đặt cọc'}]}\r\n                            >\r\n                                <InputNumber\r\n                                    style={{width: 200}}\r\n                                    defaultValue={0}\r\n                                    min={0}\r\n                                    formatter={value => `đ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n                                    parser={value => value.replace(/đ\\s?|(,*)/g, '')}\r\n                                    onChange={this.onChangeInputNumber}\r\n                                />\r\n                            </Form.Item>\r\n\r\n                            <Form.Item\r\n                                label=\"Ngày bắt đầu và kết thúc hợp đồng\"\r\n                                name=\"startDate\"\r\n                                rules={[{required: true, message: 'Hãy chọn ngày bắt đầu và kết thúc hợp đồng'}]}\r\n                            >\r\n                                <RangePicker\r\n                                    ranges={{\r\n                                        'Hôm nay': [moment(), moment()],\r\n                                        'Tháng này': [moment().startOf('month'), moment().endOf('month')]\r\n                                    }}\r\n                                    format='DD/MM/YYYY'\r\n                                    onChange={this.onChangeRangeDate}\r\n                                />\r\n                            </Form.Item>\r\n\r\n                            <Row>\r\n                                <Col>\r\n                                    <Form.Item\r\n                                        label=\"Kì thành toán\"\r\n                                        name=\"circlePay\"\r\n                                        rules={[{required: true, message: 'Hãy nhập kì thanh toán'}]}\r\n                                    >\r\n                                        <Input addonAfter=\" Tháng / Lần\" style={{width: 200}} type=\"number\" />\r\n                                    </Form.Item>\r\n                                </Col>\r\n\r\n                                <Col>\r\n                                    <Form.Item\r\n                                        label=\"Ngày đóng hạn kì tới\"\r\n                                        name=\"dayPay\"\r\n                                        rules={[{required: true, message: 'Hãy nhập ngày đóng hạn kì tới'}]}\r\n                                    >\r\n                                        <InputNumber\r\n                                            style={{width: 200}}\r\n                                            min={0}\r\n                                            max ={31}\r\n                                            onChange={this.onChangeInputNumber}\r\n                                        />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Form.Item\r\n                                wrapperCol={{\r\n                                    md: {span: 8, offset: 16}\r\n                                }}\r\n                            >\r\n                                <Button htmlType='submit' type='primary' >Thêm</Button>{' '}\r\n                                <Button  onClick={this.toggle}>Hủy</Button>\r\n                            </Form.Item>\r\n\r\n                        </Form>\r\n                    </ModalBody>\r\n                \r\n                </Modal>\r\n                <ToastContainer />\r\n            </div>\r\n        \r\n        );\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport '../../../assets/css/sb-admin-2.min.css';\r\nimport '../../../assets/vendor/datatables/dataTables.bootstrap4.min.css';\r\nimport SideBar from '../SideBar';\r\nimport Topbar from '../Topbar';\r\nimport ContractTable from './ContractTable';\r\nimport LogoutModal from '../LogoutModal';\r\nimport {FormGroup, Label, Input} from 'reactstrap';\r\nimport {Container, Row, Col} from 'reactstrap';\r\nimport axios from 'axios';\r\nimport Spin from '../../admin/Spin';\r\n\r\nexport default class Index extends Component {\r\n\r\n    state = {\r\n        blocks: [],\r\n        isLoading: false,\r\n        idBlockSelected: null,\r\n        block: null,\r\n        customers: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getBlocks();\r\n        this.getCustomers();\r\n    }\r\n\r\n    getBlocks = async () =>{\r\n        this.setState({\r\n            isLoading: true\r\n        });\r\n\r\n        let user = JSON.parse(localStorage.getItem('user'));\r\n        let token = localStorage.getItem('token');\r\n        const getBlocks = await axios({\r\n            url: `https://api-gateway.vmotel.me/go-lang/block/get-block?token=${token || ''}&userId=${user ? user.id : ''}`,\r\n            method: 'GET'\r\n        });\r\n        \r\n        if (getBlocks) {\r\n            if (getBlocks.data && getBlocks.data.data) {\r\n                const {blocks = []} = getBlocks.data.data;\r\n\r\n                if (blocks.length > 0)\r\n                {\r\n                    this.setState({\r\n                        blocks,\r\n                        idBlockSelected: +blocks[0].id,\r\n                        isLoading: false,\r\n                        block: blocks[0]\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            isLoading: false\r\n        });\r\n    }\r\n\r\n    onClickBlock = (id) => {\r\n        if (id) {\r\n            this.setState({\r\n                idBlockSelected: +id\r\n            });\r\n        }\r\n    }\r\n    \r\n    renderSelectBlock = () =>{\r\n\r\n        if (Array.isArray(this.state.blocks) && this.state.blocks.length > 0) {\r\n            return this.state.blocks.map(block => {\r\n                return <React.Fragment key={block.id}>\r\n                    <option onClick={() => this.onClickBlock(block.id)}>{block.nameBlock}</option>\r\n                </React.Fragment>;\r\n            });\r\n        }\r\n    }\r\n\r\n    onChangeSelected = (e) => {\r\n        const {value} = e.target;\r\n\r\n        if (value) {\r\n            const block = this.state.blocks.find(block => block.nameBlock === value);\r\n\r\n            this.setState({\r\n                idBlockSelected: block.id,\r\n                block\r\n            });\r\n        }\r\n    }\r\n\r\n    getCustomers = async () =>{\r\n        this.setState({\r\n            isLoadingForm: true\r\n        });\r\n\r\n        let user = JSON.parse(localStorage.getItem('user'));\r\n        let token = localStorage.getItem('token');\r\n        const getCustomers = await axios({\r\n            url: `https://api-gateway.vmotel.me/go-lang/customer/get-customers?token=${token || ''}&userId=${user.id || ''}`,\r\n            method: 'GET'\r\n        });\r\n\r\n        if (getCustomers) {\r\n            if (getCustomers.data && getCustomers.data.data) {\r\n                const {customers = []} = getCustomers.data.data;\r\n\r\n                this.setState({\r\n                    customers\r\n                    \r\n                });\r\n            } \r\n        }\r\n\r\n        this.setState({isLoadingForm: false});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.isLoading ?  <Spin /> : null} \r\n                {/* Page Wrapper */}\r\n                <div id=\"wrapper\">                  \r\n                    <SideBar />\r\n                    {/* Content Wrapper */}\r\n                    <div id=\"content-wrapper\" className=\"d-flex flex-column\">\r\n                        {/* Main Content */}\r\n                        <div id=\"content\">\r\n                            {/* Topbar */}\r\n                            <nav className=\"navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow\">\r\n                                {/* Topbar Navbar */}\r\n                                <ul className=\"navbar-nav ml-auto\">\r\n                                    {/* Nav Item - Search Dropdown (Visible Only XS) */}\r\n                                    <li className=\"nav-item dropdown no-arrow d-sm-none\">\r\n                                        <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"searchDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                            <i className=\"fas fa-search fa-fw\" />\r\n                                        </a>\r\n                                        {/* Dropdown - Messages */}\r\n                                        <div className=\"dropdown-menu dropdown-menu-right p-3 shadow animated--grow-in\" aria-labelledby=\"searchDropdown\">\r\n                                            <form className=\"form-inline mr-auto w-100 navbar-search\">\r\n                                                <div className=\"input-group\">\r\n                                                    <input type=\"text\" className=\"form-control bg-light border-0 small\" placeholder=\"Search for...\" aria-label=\"Search\" aria-describedby=\"basic-addon2\" />\r\n                                                    <div className=\"input-group-append\">\r\n                                                        <button className=\"btn btn-primary\" type=\"button\">\r\n                                                            <i className=\"fas fa-search fa-sm\" />\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </form>\r\n                                        </div>\r\n                                    </li>\r\n                                    {/* Nav Item - Alerts */}                                    \r\n                                    <Topbar />\r\n                                </ul>\r\n                            </nav>\r\n                            {/* End of Topbar */}\r\n                        \r\n                            {/* Begin Page Content */}\r\n                            <div className=\"container-fluid\">\r\n                                <Container>\r\n                                    <Row>\r\n                                        <Col />\r\n                                        <Col xs=\"6\" sm = \"4\">\r\n                                            <FormGroup>\r\n                                                <Label for=\"exampleSelect\">Khu trọ</Label>\r\n                                                <Input onChange={this.onChangeSelected} type=\"select\" name=\"select\" id=\"exampleSelect\">\r\n                                                    {this.renderSelectBlock()}\r\n                                                </Input>\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Container>\r\n                                <ContractTable idBlock={this.state.idBlockSelected} block= {this.state.block} customers = {this.state.customers} />\r\n                            </div>\r\n                            {/* /.container-fluid */}\r\n                        </div>\r\n                        {/* End of Main Content */}\r\n                        {/* Footer */}\r\n                        <footer className=\"sticky-footer bg-white\">\r\n                            <div className=\"container my-auto\">\r\n                                <div className=\"copyright text-center my-auto\">\r\n                                    <span>Copyright © Your Website 2019</span>\r\n                                </div>\r\n                            </div>\r\n                        </footer>\r\n                        {/* End of Footer */}\r\n                    </div>\r\n                    {/* End of Content Wrapper */}\r\n                </div>\r\n                {/* End of Page Wrapper */}\r\n                {/* Scroll to Top Button */}\r\n                <a className=\"scroll-to-top rounded\" href=\"#page-top\">\r\n                    <i className=\"fas fa-angle-up\" />\r\n                </a>\r\n                {/* Logout Modal */}\r\n                <LogoutModal />\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport {Card} from 'antd';\r\n\r\nconst {Meta} = Card;\r\n\r\nexport default class OurServices extends Component {\r\n    render() {\r\n        return (\r\n            <div className= \"our-services\" id=\"our-services\">\r\n                <div className=\"info-services\">\r\n                    <h1>Our Services</h1>\r\n                    <h3>Stop wasting time and money designing and managing a website that doesn’t get results. Happiness guaranteed!</h3>\r\n                </div>\r\n\r\n                <div className=\"services\">\r\n                    <Card\r\n                        hoverable\r\n                        style={{width: 240}}\r\n                        cover={<img alt=\"example\" src=\"https://os.alipayobjects.com/rmsportal/QBnOOoLaAfKPirc.png\" />}\r\n                    >\r\n                        <Meta title=\"Europe Street beat\" description=\"www.instagram.com\" />\r\n                    </Card>\r\n                    <Card\r\n                        hoverable\r\n                        style={{width: 240}}\r\n                        cover={<img alt=\"example\" src=\"https://os.alipayobjects.com/rmsportal/QBnOOoLaAfKPirc.png\" />}\r\n                    >\r\n                        <Meta title=\"Europe Street beat\" description=\"www.instagram.com\" />\r\n                    </Card>\r\n                    <Card\r\n                        hoverable\r\n                        style={{width: 240}}\r\n                        cover={<img alt=\"example\" src=\"https://os.alipayobjects.com/rmsportal/QBnOOoLaAfKPirc.png\" />}\r\n                    >\r\n                        <Meta title=\"Europe Street beat\" description=\"www.instagram.com\" />\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport {Carousel, Avatar, Rate} from 'antd';\r\n\r\nexport default class RateUser extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"rate\" id=\"rate\">\r\n                <div className=\"info-rate\">\r\n                    <h1>What Clients Says About Us</h1>\r\n                    <br />\r\n                    <h3>\r\n                        Duis et metus et massa tempus lacinia. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Maecenas ultricies, orci molestie blandit interdum.\r\n\r\nipsum ante pellentesque nisl, eget mollis turpis quam nec eros. ultricies, orci molestie blandit interdum.\r\n                    </h3>\r\n                </div>\r\n\r\n                <div className= \"rates\">\r\n                    <Carousel autoplay>\r\n                        <div>\r\n                            <div className=\"rate-slide\">\r\n                                <h3>“Praesent scelerisque, odio eu fermentum malesuada, nisi arcu volutpat nisl, sit amet convallis nunc turp.”</h3>\r\n                                <br />\r\n                                <hr />\r\n                                <br />\r\n                                <div className=\"rate-star\">\r\n                                    <Avatar size={100} src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\r\n                                    <strong>Mr. Johnson</strong>\r\n                                    <Rate disabled defaultValue={5} />\r\n                                </div>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                        <div>\r\n                            <div className=\"rate-slide\">\r\n                                <h3>“Praesent scelerisque, odio eu fermentum malesuada, nisi arcu volutpat nisl, sit amet convallis nunc turp.”</h3>\r\n                                <br />\r\n                                <hr />\r\n                                <br />\r\n                                <div className=\"rate-star\">\r\n                                    <Avatar size={100} src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\r\n                                    <strong>Mr. Johnson</strong>\r\n                                    <Rate disabled defaultValue={5} />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <div className=\"rate-slide\">\r\n                                <h3>“Praesent scelerisque, odio eu fermentum malesuada, nisi arcu volutpat nisl, sit amet convallis nunc turp.”</h3>\r\n                                <br />\r\n                                <hr />\r\n                                <br />\r\n                                <div className=\"rate-star\">\r\n                                    <Avatar size={100} src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\r\n                                    <div>\r\n                                        <b>Mr. Johnson</b>\r\n                                        <div>U.S.A</div>\r\n                                    </div>\r\n                                    <Rate disabled defaultValue={5} />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <div className=\"rate-slide\">\r\n                                <h3>“Praesent scelerisque, odio eu fermentum malesuada, nisi arcu volutpat nisl, sit amet convallis nunc turp.”</h3>\r\n                                <br />\r\n                                <hr />\r\n                                <br />\r\n                                <div className=\"rate-star\">\r\n                                    <Avatar size={100} src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\r\n                                    <strong>Mr. Johnson</strong>\r\n                                    <Rate disabled defaultValue={5} />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Carousel>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport {Card} from 'antd';\r\nimport {Row, Col} from 'reactstrap';\r\n\r\nconst {Meta} = Card;\r\n\r\nexport default class Team extends Component {\r\n    render() {\r\n        return (\r\n            <div className= \"our-team\" id=\"our-team\">\r\n                <div className=\"info-team\">\r\n                    <h1>Meet the Team</h1>\r\n                    <h3>Stop wasting time and money designing and managing a website that doesn’t get results. Happiness guaranteed!</h3>\r\n                </div>\r\n\r\n                <div className=\"team\">\r\n                    <Card\r\n                        hoverable\r\n                        style={{width: 300}}\r\n                        cover={<img alt=\"example\" src=\"https://os.alipayobjects.com/rmsportal/QBnOOoLaAfKPirc.png\" />}\r\n                    >\r\n                        <Meta title=\"Chung Nguyền Trường Duy\" description=\"Software Engineer\" />\r\n                        <br />\r\n                        <Row>\r\n                            <Col>\r\n                                <a href=\"https://www.facebook.com/truongduyuit/\" target=\"blank\">\r\n                                    <i className=\"fa fa-github\" aria-hidden=\"true\" />\r\n                                    Facebook\r\n                                </a>\r\n                            </Col>\r\n                            <Col>\r\n                                <a href=\"https://github.com/truongduyuit\" target=\"blank\">\r\n                                    <i className=\"fa fa-github\" aria-hidden=\"true\" />\r\n                                    Github\r\n                                </a>\r\n                            </Col>\r\n                        </Row>\r\n                    </Card>\r\n                    <Card\r\n                        hoverable\r\n                        style={{width: 300}}\r\n                        cover={<img alt=\"example\" src=\"https://os.alipayobjects.com/rmsportal/QBnOOoLaAfKPirc.png\" />}\r\n                    >\r\n                        <Meta title=\"Hà Thanh Huy\" description=\"Software Engineer\" />\r\n                        <br />\r\n                        <Row>\r\n                            <Col>\r\n                                <a href=\"https://www.facebook.com/thanhhuydev\" target=\"blank\">\r\n                                    <i className=\"fa fa-github\" aria-hidden=\"true\" />\r\n                                    Facebook\r\n                                </a>\r\n                            </Col>\r\n                            <Col>\r\n                                <a href=\"https://github.com/thanhhuydev77\" target=\"blank\">\r\n                                    <i className=\"fa fa-github\" aria-hidden=\"true\" />\r\n                                    Github\r\n                                </a>\r\n                            </Col>\r\n                        </Row>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default class Footer extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"footer\">\r\n                <Link to=\"/\" ><div className=\"logo\" /></Link>\r\n                <div className=\"support\">17520388@gm.uit.edu.vn</div>\r\n                <div>Designed by <a hred=\"https://www.facebook.com/truongduyuit/\">@Chung Nguyễn trường Duy</a></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport OurServices from './Home/OurServices';\r\nimport Rate from './Home/RateUser';\r\nimport Team from './Home/Team';\r\nimport Footer from './Footer';\r\n\r\nexport default class Index extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <header>\r\n                    <div className=\"main-head\">\r\n                        {/* <div class=\"logo\">\r\n\t\t\t\t<img src=\"./logo_transparent.png\" alt=\"H.D.V Smart Motel\">\r\n\t\t\t</div> */}\r\n                        <ul>\r\n                            <li className=\"activeWeb\"><a href=\"#\">Home</a></li>\r\n                            <li><a href=\"#our-services\">Services</a></li>\r\n                            <li><a href=\"#rate\">Rate</a></li>\r\n                            <li><a href=\"#our-team\">Team</a></li>\r\n                            <li><Link to=\"/dang-nhap\">Free Trial</Link></li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"title\">\r\n                        <h1>H.D.V Smart Motel</h1>\r\n                        <h3>Easy - Smart - Convenient</h3>\r\n                    </div>\r\n                    <div className=\"trial\">\r\n                        <Link to=\"/dang-nhap\" className=\"btn-trial\">Free Trial</Link>\r\n                    </div>\r\n                </header>\r\n                <OurServices />\r\n                <Rate />\r\n                <Team />\r\n                <Footer />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport {Modal, ModalHeader, ModalBody, ModalFooter} from 'reactstrap';\r\nimport axios from 'axios';\r\nimport {toast, ToastContainer} from 'react-toastify';\r\nimport Spin from '../../admin/Spin';\r\nimport _ from 'lodash';\r\nimport moment from 'moment';\r\nimport {Form, Button, Input, Select, Divider, Row, Col, Checkbox, DatePicker, Tag} from 'antd';\r\nimport numeral from 'numeral';\r\n\r\nconst {Option} = Select;\r\n\r\nconst layout = {\r\n    labelCol: {\r\n        span: 24\r\n    },\r\n    wrapperCol: {\r\n        span: 24\r\n    }\r\n};\r\n\r\nexport default class BillRow extends Component {\r\n\r\n    formRef = React.createRef();\r\n\r\n    state = {\r\n        isOpenModal: false,\r\n        isOpenDeleteModal: false,\r\n        isLoading: false,\r\n        roomName: null,\r\n        isCheckedOut: null,\r\n        billdetail: [],\r\n        services: [],\r\n        totalPrice: null\r\n    }\r\n\r\n    onDelete = async () =>{\r\n        this.setState({\r\n            isOpenDeleteModal: true\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getBillDetail(this.props.bill.id);\r\n        this.setState({\r\n            isCheckedOut : this.props.bill.isCheckedOut === 1 ? true : false,\r\n            totalPrice : this.props.bill.totalPrice\r\n        });\r\n\r\n    }\r\n\r\n    getBillDetail = async (id) =>{\r\n        this.setState({\r\n            isLoadingForm: true\r\n        });\r\n\r\n        let token = localStorage.getItem('token');\r\n        const getBillDetail = await axios({\r\n            url: `https://api-gateway.vmotel.me/go-lang//bill/get-bill-by-id/${id}?token=${token || ''}`,\r\n            method: 'GET'\r\n        });\r\n\r\n        if (getBillDetail) {\r\n            if (getBillDetail.data && getBillDetail.data.data) {\r\n                const {billdetail = []} = getBillDetail.data.data;\r\n\r\n                this.setState({\r\n                    billdetail\r\n                });\r\n            } \r\n        }\r\n\r\n        this.setState({isLoadingForm: false});\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.rooms != prevProps.rooms)\r\n        {\r\n            this.props.rooms.some(room =>{\r\n                if (room.id === this.props.bill.idRoom)\r\n                {\r\n                    this.setState({\r\n                        roomName: room.nameRoom\r\n                    });\r\n                }\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    onDeleting = async () =>{\r\n        this.setState({\r\n            isLoading: true\r\n        });\r\n\r\n        let token = localStorage.getItem('token');\r\n        const result = await axios({\r\n            url: `https://api-gateway.vmotel.me/go-lang/bill/delete/${this.props.bill.id}?token=${token || ''}`,\r\n            method: 'DELETE'\r\n        });\r\n\r\n        this.setState({\r\n            isLoading: false\r\n        });\r\n\r\n        if (result) {\r\n            if (result.data && result.data.data) {\r\n                toast.success('Xóa hợp đồng thành công !');\r\n               \r\n                this.props.callback(true);\r\n\r\n                this.setState({\r\n                    isOpenDeleteModal: !this.state.isOpenDeleteModal\r\n                });\r\n            } else {\r\n\r\n                toast.error('Xóa hợp đồng thất bại !');\r\n            }\r\n        } \r\n        \r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            isOpenModal: !this.state.isOpenModal\r\n        });\r\n    }\r\n\r\n    toggleDelete = () =>{\r\n        this.setState({\r\n            isOpenDeleteModal: !this.state.isOpenDeleteModal\r\n        });\r\n    }\r\n\r\n    onFinish = async (value) => {\r\n  \r\n        let token = localStorage.getItem('token');\r\n\r\n        this.setState({\r\n            isLoading: true\r\n        });\r\n\r\n        let {billdetail} = this.state;\r\n        let {bill} = this.props;\r\n\r\n        const create = await axios({\r\n            method: 'PUT',\r\n            url: `https://api-gateway.vmotel.me/go-lang/bill/update/${this.props.bill.id}?token=${token || ''}`,\r\n            data: {\r\n                idRoom: +bill.idRoom,\r\n                dateCheckOut: moment(bill.dateCheckOut).format('YYYY-MM-DD'),\r\n                totalPrice: +this.state.totalPrice,\r\n                isCheckedOut: this.state.isCheckedOut === true ? 1 : 0,\r\n                billDetail : billdetail\r\n            }\r\n        });\r\n\r\n        if (create) {\r\n            if (create.data && create.data.data) {\r\n                toast.success('Thêm hóa đơn thành công !');\r\n                \r\n                this.setState({\r\n                    isOpenModal: !this.state.isOpenModal,\r\n                    optionCustomers: []\r\n                });\r\n\r\n                this.props.callback(true);\r\n            } else {\r\n                toast.error('Thêm hóa đơn thất bại !');\r\n            }\r\n        }\r\n\r\n        this.setState({isLoading: false});\r\n    }\r\n\r\n    onChangeIsCheckout = () =>{\r\n        this.setState({\r\n            isCheckedOut: !this.state.isCheckedOut\r\n        });\r\n    }\r\n\r\n    renderServices = () => {\r\n        const {billdetail} = this.state;\r\n        const {services} = this.props;\r\n\r\n        return services.map(service => {\r\n            return billdetail.map((detail, index) => {\r\n                if (service.id === detail.idService)\r\n                {\r\n                    return (\r\n                        <React.Fragment key={detail.id}>\r\n                            <tr>\r\n                                <td>{service.nameService}</td>\r\n                                <td>{numeral(detail.totalPrice / detail.amount).format('0,0')}</td>\r\n                                <td><Input type= 'number' defaultValue={detail.amount} min={1} name='amount' onChange = {(e) => this.onChangeNum(e, detail.totalPrice / detail.amount, index)} /></td>\r\n                                <td>{numeral(detail.totalPrice).format('0,0')}</td>\r\n                            </tr>\r\n                        </React.Fragment>\r\n                    );\r\n                }\r\n                // else\r\n                // {\r\n                //     return <React.Fragment key={detail.id}>\r\n                //         <tr>\r\n                //             <td>{service.nameService}</td>\r\n                //             <td>{numeral(detail.totalPrice / detail.amount).format('0,0')}</td>\r\n                //             <td><Input type= 'number' defaultValue={0} name='amount' onChange = {(e) => this.onChangeNum(e, detail.totalPrice / detail.amount, index)} /></td>\r\n                //             <td>{numeral(0).format('0,0')}</td>\r\n                //         </tr>\r\n                //     </React.Fragment>;\r\n                // }\r\n            });\r\n        });\r\n    }\r\n\r\n    onChangeNum = (event, price, index) => {\r\n\r\n        if (event.target.value !== '') {\r\n            let billdetail = [...this.state.billdetail];\r\n\r\n            billdetail[index].amount = +event.target.value;\r\n            billdetail[index].totalPrice = price * event.target.value;\r\n\r\n            this.setState({\r\n                billdetail\r\n            });\r\n        \r\n            if (Array.isArray(billdetail) && billdetail.length > 0) {\r\n                let totalPrice = 0;\r\n\r\n                billdetail.map(detail => {\r\n                    totalPrice += detail.totalPrice;\r\n                });\r\n                \r\n                this.setState({\r\n                    totalPrice\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {bill} = this.props;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <tr>\r\n                    <td><Tag color=\"geekblue\">{this.state.roomName}</Tag></td>\r\n                    <td>{moment(bill.dateCheckout).format('DD-MM-YYYY')}</td>\r\n                    <td>{numeral(bill.totalPrice).format('0,0')} vnđ</td>\r\n                    <td>{bill.isCheckedOut === 1 ? <Tag color=\"orange\">Đã thanh toán</Tag> : <Tag color=\"green\">Chưa thanh toán</Tag>}</td>\r\n                    <td>\r\n                        <button onClick={this.toggle} className=\"btn btn-warning btn-circle mr-3\" title=\"Chỉnh sửa\">\r\n                            <i className=\"fa fa-pencil-square\" aria-hidden=\"true\" />\r\n                        </button>\r\n                        <button onClick={this.onDelete} className=\"btn btn-danger btn-circle\" title=\"Xóa\">\r\n                            <i className=\"fa fa-trash\" aria-hidden=\"true\" />\r\n                        </button>\r\n                    </td>\r\n                </tr>\r\n                <Modal isOpen={this.state.isOpenModal} toggle={this.toggle} className='modal-contract'>\r\n                    {this.state.isLoading ?  <Spin /> : null}  \r\n                    <ModalHeader toggle={this.toggle}>CHỈNH SỬA THÔNG TIN HÓA ĐƠN</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form {...layout} ref={this.formRef} onFinish={this.onFinish} initialValues = {{\r\n                            dateCheckOut : moment(Date.now()),\r\n                            room : this.props.bill.idRoom,\r\n                            isCheckedOut: this.props.bill.isCheckedOut === 1 ? true : false\r\n                        }}>\r\n                            <Form.Item\r\n                                label=\"Khu trọ/căn hộ\"\r\n                            >\r\n                                <strong>{this.props.block && this.props.block.nameBlock}</strong>\r\n                            </Form.Item>\r\n                            <Divider />\r\n                            <Row>\r\n                                <Col xs={12}>\r\n                                    <Form.Item\r\n                                        label=\"Chọn phòng\"\r\n                                        name=\"room\"\r\n                                        rules={[{required: true, message: 'Hãy chọn phòng'}]}\r\n                                    >\r\n                                        <Select\r\n                                            placeholder=\"Chọn phòng\"\r\n                                            style={{width: 200}}\r\n                                        >\r\n                                            {this.props.rooms.map(room => (\r\n                                                <Option key={room.id} value={room.id}>{room.nameRoom}</Option>\r\n                                            ))}\r\n                                        </Select>\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col xs={12}>\r\n                                    <Form.Item \r\n                                        name=\"dateCheckOut\" \r\n                                        label=\"Ngày tạo\" \r\n                                        rules={[\r\n                                            {\r\n                                                required: true,\r\n                                                message: 'Hãy chọn ngày tạo hóa đơn'\r\n                                            }\r\n                                        ]}\r\n                                    >\r\n                                        <DatePicker style={{width: '200px'}} format= 'DD-MM-YYYY' />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                                                      \r\n                            <Form.Item\r\n                                label = 'Danh sách dịch vụ'\r\n                            >\r\n                                <table className=\"table table-bordered\" id=\"dataTable\" width=\"100%\" cellSpacing={0}>\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>Tên dịch vụ</th>\r\n                                            <th>Đơn giá</th>\r\n                                            <th>Số lượng</th>\r\n                                            <th>Tổng giá</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {this.renderServices()}                      \r\n                                    </tbody>\r\n                                \r\n                                </table>\r\n                            </Form.Item>\r\n\r\n                            <Divider />\r\n\r\n                            <Row>\r\n                                <Col xs={12}>\r\n                                    <Form.Item\r\n                                        label=\"Tổng tiền\"\r\n                                    >\r\n                                        <strong>{numeral(this.state.totalPrice).format('0,0')}  vnđ</strong>\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col xs={12}>\r\n                                    <Form.Item \r\n                                        name = 'isCheckedOut'\r\n                                        label=\"Trạng thái\"\r\n                                    >\r\n                                        <Checkbox checked={this.state.isCheckedOut} onChange={this.onChangeIsCheckout}>Thanh toán</Checkbox>\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                            \r\n                            <Form.Item\r\n                                wrapperCol={{\r\n                                    md: {span: 8, offset: 16}\r\n                                }}\r\n                            >\r\n                                <Button htmlType='submit' type='primary' >Cập nhật</Button>{' '}\r\n                                <Button  onClick={this.toggle}>Hủy</Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n                <Modal isOpen={this.state.isOpenDeleteModal} toggle={this.toggleDelete}>\r\n                    {this.state.isLoading ?  <Spin /> : null}  \r\n                    <ModalHeader toggle={this.toggleDelete}>THÔNG BÁO</ModalHeader>\r\n                    <ModalBody>\r\n                            Chắc chắn muốn hợp đồng của phòng <b>{this.state.roomName}</b>?\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button color=\"primary\" onClick={this.onDeleting}>Xóa</Button>{' '}\r\n                        <Button color=\"secondary\" onClick={this.toggleDelete}>Hủy</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n                <ToastContainer />\r\n                \r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n","// Libraries\r\nimport React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport {connect} from 'react-redux';\r\nimport {Modal, ModalHeader, ModalBody, Input} from 'reactstrap';\r\nimport {toast, ToastContainer} from 'react-toastify';\r\nimport numeral from 'numeral';\r\nimport {Form, Button, Checkbox, Row, Col, Divider, Select, DatePicker} from 'antd';\r\nimport moment from 'moment';\r\n\r\n// Actions\r\nimport {GET_ROOMS} from '../../../actions/RoomAction';\r\n\r\n// Components\r\nimport Spin from '../../admin/Spin';\r\nimport BillRow from './BillRow';\r\n\r\nconst {Option} = Select;\r\n\r\nconst layout = {\r\n    labelCol: {\r\n        span: 24\r\n    },\r\n    wrapperCol: {\r\n        span: 24\r\n    }\r\n};\r\n\r\nclass BillTable extends Component {\r\n    formRef = React.createRef();\r\n\r\n    state = {\r\n        bills: [],\r\n        rooms: [],\r\n        services: [],\r\n        isOpenModal: false,\r\n        isLoading: false,\r\n        isLoadingForm: false,\r\n        isCheckedOut: false,\r\n        totalPrice: null\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            isOpenModal: !this.state.isOpenModal\r\n        });\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.idBlock !== prevProps.idBlock) {\r\n            this.getBills();\r\n            this.getRooms();\r\n            this.getServices();\r\n        }\r\n    }\r\n\r\n    getBills = async () =>{\r\n        this.setState({\r\n            isLoadingForm: true\r\n        });\r\n\r\n        let token = localStorage.getItem('token');\r\n        const getBills = await axios({\r\n            url: `https://api-gateway.vmotel.me/go-lang/bill/get-bills/${this.props.idBlock}?token=${token || ''}`,\r\n            method: 'GET'\r\n        });\r\n\r\n        if (getBills) {\r\n            if (getBills.data && getBills.data.data) {\r\n                const {bills = []} = getBills.data.data;\r\n\r\n                this.setState({\r\n                    bills\r\n                });\r\n            } \r\n        }\r\n\r\n        this.setState({isLoadingForm: false});\r\n    }\r\n\r\n    getServices = async () =>{\r\n        this.setState({\r\n            isLoadingForm: true\r\n        });\r\n\r\n        let token = localStorage.getItem('token');\r\n        const getServices = await axios({\r\n            url: `https://api-gateway.vmotel.me/go-lang/service/get-services?token=${token || ''}&idBlock=${this.props.idBlock}`,\r\n            method: 'GET'\r\n        });\r\n\r\n        if (getServices) {\r\n            if (getServices.data && getServices.data.data) {\r\n                const {services = []} = getServices.data.data;\r\n\r\n                this.setState({\r\n                    services\r\n                });\r\n            } \r\n        }\r\n\r\n        this.setState({isLoadingForm: false});\r\n    }\r\n\r\n    addServiceModal = () =>{\r\n        this.setState({\r\n            isOpenModal: true,\r\n            isLoading: false\r\n        });\r\n    }\r\n\r\n    callBackBillRow = (value) =>{\r\n        if (value) {\r\n            this.getBills();\r\n        }\r\n    }\r\n\r\n    renderBills = () => {\r\n        const {bills = []} = this.state;\r\n\r\n        if (Array.isArray(bills) && bills.length > 0) {\r\n            return bills.map(bill => {\r\n                return <React.Fragment key={bill.id}>\r\n                    <BillRow \r\n                        bill={bill}\r\n                        callback = {this.callBackBillRow}\r\n                        block= {this.props.block}\r\n                        rooms = {this.state.rooms}\r\n                        services = {this.state.services}\r\n                    />\r\n                </React.Fragment>;\r\n            });\r\n        }\r\n    }\r\n\r\n    onFinish = async (value) => {\r\n\r\n        let token = localStorage.getItem('token');\r\n\r\n        this.setState({\r\n            isLoading: true\r\n        });\r\n\r\n        const {services} = this.state;\r\n\r\n        let billDetail = [];\r\n\r\n        services.filter(service => {\r\n            if (service.number && service.number > 0)\r\n            {\r\n                billDetail = [...billDetail,{\r\n                    idService: +service.id,\r\n                    amount: +service.number,\r\n                    totalPrice: +service.total\r\n                } ]; \r\n            }\r\n        });\r\n\r\n        if (billDetail.length === 0 )\r\n        {\r\n            toast.error('Hóa đơn phải có ít nhất 1 dịch vụ !');\r\n            this.setState({isLoading: false});\r\n            return;\r\n        }\r\n\r\n        const create = await axios({\r\n            method: 'POST',\r\n            url: `https://api-gateway.vmotel.me/go-lang/bill/create?token=${token || ''}`,\r\n            data: {\r\n                idRoom: +value.room,\r\n                dateCheckOut: moment(value.dateCheckOut).format('YYYY-MM-DD'),\r\n                totalPrice: +this.state.totalPrice,\r\n                isCheckedOut: this.state.isCheckedOut === true ? 1 : 0,\r\n                billDetail\r\n            }\r\n        });\r\n\r\n        if (create) {\r\n            if (create.data && create.data.data) {\r\n                toast.success('Thêm hóa đơn thành công !');\r\n                \r\n                this.setState({\r\n                    isOpenModal: !this.state.isOpenModal,\r\n                    optionCustomers: []\r\n                });\r\n\r\n                this.getBills();\r\n            } else {\r\n                toast.error('Thêm hóa đơn thất bại !');\r\n            }\r\n        }\r\n\r\n        this.setState({isLoading: false});\r\n    }\r\n\r\n    getRooms = async () =>{\r\n        this.setState({\r\n            isLoading: true\r\n        });\r\n\r\n        let token = localStorage.getItem('token');\r\n        const getRooms = await axios({\r\n            url: `https://api-gateway.vmotel.me/go-lang/room/get-rooms?token=${token || ''}&idBlock=${this.props.idBlock}`,\r\n            method: 'GET'\r\n        });\r\n\r\n        if (getRooms) {\r\n            if (getRooms.data && getRooms.data.data) {\r\n                const {rooms = []} = getRooms.data.data;\r\n\r\n                this.setState({\r\n                    rooms\r\n                });\r\n            } \r\n        }\r\n\r\n        this.setState({isLoading: false});\r\n    }\r\n\r\n    renderSelectRoom = () =>{\r\n        const {rooms} = this.state;\r\n\r\n        if (Array.isArray(rooms) && rooms.length > 0) {\r\n            return rooms.map(room => {\r\n                return <React.Fragment key={room.id}>\r\n                    <option onClick={() => this.onClickBlock(room.id)}>{room.nameRoom}</option>\r\n                </React.Fragment>;\r\n            });\r\n        }\r\n    }\r\n\r\n    onChangeSelected = () => {\r\n\r\n    }\r\n\r\n    onChangeIsCheckout = () =>{\r\n        this.setState({\r\n            isCheckedOut: !this.state.isCheckedOut\r\n        });\r\n    }\r\n\r\n    onChangeNum = (event, price, index) => {\r\n        if (event.target.value !== '') {\r\n            let services = [...this.state.services];\r\n            let newService = this.state.services[index];\r\n\r\n            newService = {\r\n                ...newService,\r\n                number: +event.target.value < 0 ? 0 : +event.target.value,\r\n                total: +event.target.value < 0 ? 0 * price : event.target.value * price\r\n            };\r\n            services[index] = newService;\r\n\r\n            this.setState({\r\n                services\r\n            });\r\n        \r\n            // console.log(services);\r\n            if (Array.isArray(services) && services.length > 0) {\r\n                let totalPrice = 0;\r\n\r\n                services.map(service => {\r\n                    if (service.total && service.number > 0)\r\n                    {totalPrice += service.total}\r\n                    else if (service.number > 0)\r\n                    {totalPrice += service.number ? service.price * service.number : service.price}\r\n                });\r\n                \r\n                this.setState({\r\n                    totalPrice\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    renderServices = () => {\r\n        const {services} = this.state;\r\n\r\n        if (Array.isArray(services) && services.length > 0) {\r\n            return services.map((service, index) => {\r\n                let {total = 0} = service;\r\n                let {number = 0} = service;\r\n                \r\n                return <React.Fragment key={service.id}>\r\n                    <tr>\r\n                        <td>{service.nameService}</td>\r\n                        <td>{numeral(service.price).format('0,0')}</td>\r\n                        <td><Input type= 'number' defaultValue={0} value={number} name='amount' onChange = {(e) => this.onChangeNum(e, service.price, index)} /></td>\r\n                        <td>{numeral(total).format('0,0')}</td>\r\n                    </tr>\r\n                </React.Fragment>;\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {idBlock} = this.props;\r\n        const {bills} = this.state;\r\n\r\n        return (\r\n            <div style={{position: 'relative'}}>   \r\n                {this.state.isLoadingForm ?  <Spin /> : null}       \r\n                <div className=\"card shadow mb-4\">\r\n                    <div className=\"card-header py-3 row\" style = {{display : 'flex', alignItems : 'center', justifyContent : 'space-between'}}>\r\n                        <div className=\"sm-6\">\r\n                            <h6 className=\"m-0 font-weight-bold text-primary\">QUẢN LÝ DANH SÁCH HÓA ĐƠN</h6>                          \r\n                        </div>\r\n                        <div>\r\n                            <Button \r\n                                outline color= {idBlock === null ? 'secondary' : 'primary' }\r\n                                disabled={idBlock === null ? true : false}\r\n                                title = {idBlock === null ? 'Phải có ít nhất 1 khu trọ để thực hiện thêm hóa đơn' : ''}\r\n                                onClick = {this.addServiceModal}\r\n                            >Thêm hóa đơn</Button>{' '}                                 \r\n                        </div>\r\n                                   \r\n                    </div>\r\n                    \r\n                    <div className=\"card-body\">\r\n                        <div className=\"table-responsive\">\r\n                            <table className=\"table table-bordered\" id=\"dataTable\" width=\"100%\" cellSpacing={0}>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Tên phòng</th>\r\n                                        <th>Ngày tạo</th>\r\n                                        <th>Tổng giá</th>\r\n                                        <th>Trạng thái</th>\r\n\r\n                                        <tr />\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {this.renderBills()}                      \r\n                                </tbody>\r\n                                \r\n                            </table>\r\n                            {bills.length == 0 ? <div style={{display: 'flex', justifyContent: 'center'}}>\r\n                                                Hiện tại chưa có dữ liệu\r\n                            </div> : ''}\r\n                        </div>\r\n                    </div>\r\n                </div>       \r\n                <Modal isOpen={this.state.isOpenModal} toggle={this.toggle}>\r\n                    {this.state.isLoading ?  <Spin /> : null}       \r\n                    <ModalHeader toggle={this.toggle}>THÊM HÓA ĐƠN</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form {...layout} ref={this.formRef} onFinish={this.onFinish} initialValues = {{\r\n                            dateCheckOut : moment(Date.now())\r\n                        }}>\r\n                            <Form.Item\r\n                                label=\"Khu trọ/căn hộ\"\r\n                            >\r\n                                <strong>{this.props.block && this.props.block.nameBlock}</strong>\r\n                            </Form.Item>\r\n                            <Divider />\r\n                            <Row>\r\n                                <Col xs={12}>\r\n                                    <Form.Item\r\n                                        label=\"Chọn phòng\"\r\n                                        name=\"room\"\r\n                                        rules={[{required: true, message: 'Hãy chọn phòng'}]}\r\n                                    >\r\n                                        <Select\r\n                                            placeholder=\"Chọn phòng\"\r\n                                            style={{width: 200}}\r\n                                        >\r\n                                            {this.state.rooms.map(room => (\r\n                                                <Option key={room.id}>{room.nameRoom}</Option>\r\n                                            ))}\r\n                                        </Select>\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col xs={12}>\r\n                                    <Form.Item \r\n                                        name=\"dateCheckOut\" \r\n                                        label=\"Ngày tạo\" \r\n                                        rules={[\r\n                                            {\r\n                                                required: true,\r\n                                                message: 'Hãy chọn ngày tạo hóa đơn'\r\n                                            }\r\n                                        ]}\r\n                                    >\r\n                                        <DatePicker style={{width: '200px'}} format= 'DD-MM-YYYY' />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                                                      \r\n                            <Form.Item\r\n                                label = 'Danh sách dịch vụ'\r\n                            >\r\n                                <table className=\"table table-bordered\" id=\"dataTable\" width=\"100%\" cellSpacing={0}>\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>Tên dịch vụ</th>\r\n                                            <th>Đơn giá</th>\r\n                                            <th>Số lượng</th>\r\n                                            <th>Tổng giá</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {this.renderServices()}                      \r\n                                    </tbody>\r\n                                \r\n                                </table>\r\n                            </Form.Item>\r\n\r\n                            <Divider />\r\n\r\n                            <Row>\r\n                                <Col xs={12}>\r\n                                    <Form.Item\r\n                                        label=\"Tổng tiền\"\r\n                                    >\r\n                                        <strong>{numeral(this.state.totalPrice).format('0,0')}  vnđ</strong>\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col xs={12}>\r\n                                    <Form.Item \r\n                                        name = 'isCheckedOut'\r\n                                        label=\"Trạng thái\"\r\n                                    >\r\n                                        <Checkbox checked={this.state.isCheckedOut} onChange={this.onChangeIsCheckout}>Thanh toán</Checkbox>\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                            \r\n                            <Form.Item\r\n                                wrapperCol={{\r\n                                    md: {span: 8, offset: 16}\r\n                                }}\r\n                            >\r\n                                <Button htmlType='submit' type='primary' >Thêm</Button>{' '}\r\n                                <Button  onClick={this.toggle}>Hủy</Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n                <ToastContainer />\r\n            </div>\r\n        \r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps =  {\r\n    GET_ROOMS\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        roomsState: state.RoomReducer.rooms\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BillTable);","import React, {Component} from 'react';\r\nimport '../../../assets/css/sb-admin-2.min.css';\r\nimport '../../../assets/vendor/datatables/dataTables.bootstrap4.min.css';\r\nimport {connect} from 'react-redux';\r\nimport SideBar from '../SideBar';\r\nimport Topbar from '../Topbar';\r\nimport BillTable from './BillTable';\r\nimport LogoutModal from '../LogoutModal';\r\nimport {FormGroup, Label, Input} from 'reactstrap';\r\nimport {Container, Row, Col} from 'reactstrap';\r\nimport axios from 'axios';\r\nimport Spin from '../../admin/Spin';\r\n\r\nclass Index extends Component {\r\n\r\n    state = {\r\n        blocks: [],\r\n        isLoading: false,\r\n        idBlockSelected: null,\r\n        block: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getBlocks();\r\n    }\r\n\r\n    getBlocks = async () =>{\r\n        this.setState({\r\n            isLoading: true\r\n        });\r\n\r\n        let user = JSON.parse(localStorage.getItem('user'));\r\n        let token = localStorage.getItem('token');\r\n        const getBlocks = await axios({\r\n            url: `https://api-gateway.vmotel.me/go-lang/block/get-block?token=${token || ''}&userId=${user ? user.id : ''}`,\r\n            method: 'GET'\r\n        });\r\n        \r\n        if (getBlocks) {\r\n            if (getBlocks.data && getBlocks.data.data) {\r\n                const {blocks = []} = getBlocks.data.data;\r\n                \r\n                if (blocks.length > 0) {\r\n                    this.setState({\r\n                        blocks,\r\n                        idBlockSelected: +blocks[0].id,\r\n                        isLoading: false,\r\n                        block: blocks[0]\r\n                    });\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            isLoading: false\r\n        });\r\n    }\r\n\r\n    onClickBlock = (id) => {\r\n        if (id) {\r\n            this.setState({\r\n                idBlockSelected: +id\r\n            });\r\n        }\r\n    }\r\n    \r\n    renderSelectBlock = () =>{\r\n\r\n        if (Array.isArray(this.state.blocks) && this.state.blocks.length > 0) {\r\n            return this.state.blocks.map(block => {\r\n                return <React.Fragment key={block.id}>\r\n                    <option onClick={() => this.onClickBlock(block.id)}>{block.nameBlock}</option>\r\n                </React.Fragment>;\r\n            });\r\n        }\r\n    }\r\n\r\n    onChangeSelected = (e) => {\r\n        const {value} = e.target;\r\n\r\n        if (value) {\r\n            const block = this.state.blocks.find(block => block.nameBlock === value);\r\n\r\n            this.setState({\r\n                idBlockSelected: block.id,\r\n                block\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.isLoading ?  <Spin /> : null} \r\n                {/* Page Wrapper */}\r\n                <div id=\"wrapper\">                  \r\n                    <SideBar />\r\n                    {/* Content Wrapper */}\r\n                    <div id=\"content-wrapper\" className=\"d-flex flex-column\">\r\n                        {/* Main Content */}\r\n                        <div id=\"content\">\r\n                            {/* Topbar */}\r\n                            <nav className=\"navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow\">\r\n                                {/* Topbar Navbar */}\r\n                                <ul className=\"navbar-nav ml-auto\">\r\n                                    {/* Nav Item - Search Dropdown (Visible Only XS) */}\r\n                                    <li className=\"nav-item dropdown no-arrow d-sm-none\">\r\n                                        <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"searchDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                            <i className=\"fas fa-search fa-fw\" />\r\n                                        </a>\r\n                                        {/* Dropdown - Messages */}\r\n                                        <div className=\"dropdown-menu dropdown-menu-right p-3 shadow animated--grow-in\" aria-labelledby=\"searchDropdown\">\r\n                                            <form className=\"form-inline mr-auto w-100 navbar-search\">\r\n                                                <div className=\"input-group\">\r\n                                                    <input type=\"text\" className=\"form-control bg-light border-0 small\" placeholder=\"Search for...\" aria-label=\"Search\" aria-describedby=\"basic-addon2\" />\r\n                                                    <div className=\"input-group-append\">\r\n                                                        <button className=\"btn btn-primary\" type=\"button\">\r\n                                                            <i className=\"fas fa-search fa-sm\" />\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </form>\r\n                                        </div>\r\n                                    </li>\r\n                                    {/* Nav Item - Alerts */}                                    \r\n                                    <Topbar />\r\n                                </ul>\r\n                            </nav>\r\n                            {/* End of Topbar */}\r\n                        \r\n                            {/* Begin Page Content */}\r\n                            <div className=\"container-fluid\">\r\n                                <Container>\r\n                                    <Row>\r\n                                        <Col />\r\n                                        <Col xs=\"6\" sm = \"4\">\r\n                                            <FormGroup>\r\n                                                <Label for=\"exampleSelect\">Khu trọ</Label>\r\n                                                <Input onChange={this.onChangeSelected} type=\"select\" name=\"select\" id=\"exampleSelect\">\r\n                                                    {this.renderSelectBlock()}\r\n                                                </Input>\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Container>\r\n                                <BillTable idBlock={this.state.idBlockSelected} block= {this.state.block} />\r\n                            </div>\r\n                            {/* /.container-fluid */}\r\n                        </div>\r\n                        {/* End of Main Content */}\r\n                        {/* Footer */}\r\n                        <footer className=\"sticky-footer bg-white\">\r\n                            <div className=\"container my-auto\">\r\n                                <div className=\"copyright text-center my-auto\">\r\n                                    <span>Copyright © Your Website 2019</span>\r\n                                </div>\r\n                            </div>\r\n                        </footer>\r\n                        {/* End of Footer */}\r\n                    </div>\r\n                    {/* End of Content Wrapper */}\r\n                </div>\r\n                {/* End of Page Wrapper */}\r\n                {/* Scroll to Top Button */}\r\n                <a className=\"scroll-to-top rounded\" href=\"#page-top\">\r\n                    <i className=\"fas fa-angle-up\" />\r\n                </a>\r\n                {/* Logout Modal */}\r\n                <LogoutModal />\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state=> {\r\n    return {\r\n        blocksState: state.BlockReducer.blocks\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(Index);","import React, {Component} from 'react';\r\nimport {Switch, Route} from 'react-router-dom';\r\nimport Login from './components/admin/Login';\r\nimport Register from './components/admin/Register';\r\nimport IndexAdmin from './components/admin/IndexAdmin';\r\nimport Block from './components/admin/block/Index';\r\nimport Room from './components/admin/room/index';\r\nimport Service from './components/admin/service/Index';\r\nimport Customer from './components/admin/customer/Index';\r\nimport Contract from './components/admin/contract/Index';\r\nimport Home from './components/web/Index';\r\nimport Bill from './components/admin/bill/Index';\r\n\r\nclass Routers extends Component {\r\n    render() {\r\n        return (\r\n            <Switch>\r\n\r\n                <Route exact path=\"/\"> <Home /> </Route>\r\n\r\n                <Route exact path=\"/dang-nhap\"> <Login /> </Route>\r\n\r\n                <Route exact path=\"/dang-ky\">  <Register /> </Route>\r\n                   \r\n                <Route exact path=\"/admin\"> <IndexAdmin /> </Route>\r\n                \r\n                <Route exact path=\"/admin/khu-tro\"> <Block /> </Route> \r\n\r\n                <Route exact path=\"/admin/phong\"> <Room /> </Route>\r\n\r\n                <Route exact path=\"/admin/dich-vu\"> <Service /> </Route>\r\n\r\n                <Route exact path=\"/admin/khach-hang\"> <Customer /> </Route>\r\n\r\n                <Route exact path=\"/admin/hop-dong\"> <Contract /> </Route>\r\n                \r\n                <Route exact path=\"/admin/hoa-don\"> <Bill /> </Route>\r\n            </Switch>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Routers;","import React from 'react';\r\nimport './App.css';\r\n\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport Routers from './Routers';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n        <Routers/>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import * as ActionTypes from '../constands/ActionType';\r\n\r\nconst nameInitialState = {\r\n    userLogin: {}\r\n}\r\n\r\nconst LoginReducer = (state = nameInitialState, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.LOGIN_CONST:\r\n            state.userLogin = {...action.payload.user}\r\n           return {...state}\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\nexport default LoginReducer;\r\n","import * as ActionTypes from '../constands/ActionType';\r\n\r\nconst nameInitialState = {\r\n    blocks: []\r\n};\r\n\r\nconst BlockReducer = (state = nameInitialState, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.GET_BLOCKS_CONST:\r\n            state.blocks = action.payload.blocks;\r\n            return {...state};\r\n        default:\r\n            return {...state};\r\n    }\r\n};\r\n\r\nexport default BlockReducer;\r\n","import * as ActionTypes from '../constands/ActionType';\r\n\r\nconst RoomReducerInitialState = {\r\n    rooms: []\r\n};\r\n\r\nconst RoomReducer = (state = RoomReducerInitialState, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.GET_ROOMS_CONST:\r\n            return {...state};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default RoomReducer;","import {combineReducers, createStore, compose} from 'redux';\r\nimport LoginReducer from './LoginReducer';\r\nimport BlockReducer from './BlockReducer';\r\nimport RoomReducer from './RoomReducer';\r\n\r\nconst composeEnhancers =  typeof window === 'object' && window['__REDUX_DEVTOOLS_EXTENSION_COMPOSE__'] ?\r\n    window['__REDUX_DEVTOOLS_EXTENSION_COMPOSE__']({\r\n        trace: true,\r\n        traceLimit: 25\r\n    }) : compose;\r\n\r\nexport const RootReducer = combineReducers({\r\n    LoginReducer,\r\n    BlockReducer,\r\n    RoomReducer\r\n});\r\n\r\nexport const store = createStore(RootReducer, composeEnhancers());","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {Provider} from 'react-redux';\r\nimport {store} from './reducers/RootReducer';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'antd/dist/antd.css';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store = {store}>\r\n            <App />\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}